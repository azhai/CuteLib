<?php
namespace{defined('VENDOR_ROOT')or define('VENDOR_ROOT',APP_ROOT.'/vendor');defined('APP_CLASS')or define('APP_CLASS','\\Cute\\Website');defined('SQL_VERBOSE')or define('SQL_VERBOSE',true);defined('ERROR_LEVEL')or define('ERROR_LEVEL',E_ALL&~E_DEPRECATED&~E_NOTICE);@error_reporting(ERROR_LEVEL);set_error_handler(function($aF,$eG,$rF,$AG,array$MH){if(0===error_reporting()){return false;}throw new ErrorException($eG,0,$aF,$rF,$AG);},E_WARNING|E_CORE_WARNING|E_COMPILE_WARNING);if(!class_exists('\\Cute\\Importer')){require_once SRC_ROOT.'/Cute/Importer.php';}function app($bE=''){static$x=null;if(is_null($x)&&$bE){$UE=\Cute\Importer::getInstance();$UE->addNamespace('Cute',SRC_ROOT);$DC=\Cute\Base\Storage::newInstance($bE);$I=constant('APP_CLASS');$x=new$I($DC);$x->install($UE,array('import'=>'addNamespace'));$x->initiate();}return$x;}function starts_with($aD,$iC){return strncmp($aD,$iC,strlen($iC))===0;}function ends_with($aD,$iC){$_D=strlen($iC);return$_D===0||(strlen($aD)>=$_D&&substr_compare($aD,$iC,-$_D)===0);}function convert($p,$OC='UTF-8'){$OC=strtoupper($OC);if(function_exists('mb_detect_encoding')){return mb_detect_encoding($p,$OC,true)?$p:mb_convert_encoding($p,$OC,'UTF-8, GBK');}else if(function_exists('iconv')){$wF=$OC==='UTF-8'?'GBK':'UTF-8';return iconv($wF,$OC.'//IGNORE',$p);}}function b64decode($p){if(preg_match('!([A-Za-z0-9+/= ]+)!',$p,$bB)){$p=$bB[1];}return base64_decode($p);}function exec_function_array($a,array$B=array()){switch(count($B)){case 0:return$a();case 1:return$a($B[0]);case 2:return$a($B[0],$B[1]);case 3:return$a($B[0],$B[1],$B[2]);case 4:return$a($B[0],$B[1],$B[2],$B[3]);case 5:return$a($B[0],$B[1],$B[2],$B[3],$B[4]);default:if(is_object($a)){$IB=new ReflectionMethod($a,'__invoke');return$IB->invokeArgs($a,$B);}else if(is_callable($a)){$IB=new ReflectionFunction($a);return$IB->invokeArgs($B);}}}function exec_method_array($OB,$U,array$B=array()){if(is_object($OB)){switch(count($B)){case 0:return$OB->{$U}();case 1:return$OB->{$U}($B[0]);case 2:return$OB->{$U}($B[0],$B[1]);case 3:return$OB->{$U}($B[0],$B[1],$B[2]);case 4:return$OB->{$U}($B[0],$B[1],$B[2],$B[3]);case 5:return$OB->{$U}($B[0],$B[1],$B[2],$B[3],$B[4]);}}if(method_exists($OB,$U)){$IB=new ReflectionMethod($OB,$U);if($IB->isPublic()&&!$IB->isAbstract()){if($IB->isStatic()){return$IB->invokeArgs(null,$B);}else{return$IB->invokeArgs($OB,$B);}}}}function exec_construct_array($I,array$B=array()){switch(count($B)){case 0:return new$I();case 1:return new$I($B[0]);case 2:return new$I($B[0],$B[1]);case 3:return new$I($B[0],$B[1],$B[2]);case 4:return new$I($B[0],$B[1],$B[2],$B[3]);case 5:return new$I($B[0],$B[1],$B[2],$B[3],$B[4]);default:if(class_exists($I)){$IB=new ReflectionClass($I);return$IB->newInstanceArgs($B);}}}}
namespace Cute{use \Cute\Importer;use \Cute\Factory;use \Cute\Base\Storage;abstract class Application{protected$shortcuts=array();function __construct(Storage&$DC){$this->install($DC,array('getConfig'));$JF=new Factory($DC);$this->install($JF,array('load'));}function initiate(){return$this;}function install($BE,array$bF){foreach($bF as$UD=>$U){$UD=strtolower(is_numeric($UD)?$U:$UD);$this->shortcuts[$UD]=array($BE,$U);}return$this;}function __call($A,$B){$A=strtolower($A);if(isset($this->shortcuts[$A])){list($BE,$U)=$this->shortcuts[$A];return exec_method_array($BE,$U,$B);}}abstract function run();}abstract class Command{protected$app=null;protected$args=array();protected$pid=0;var$cmdfile='';function __construct($x,$HE,array$iB=array()){$this->app=$x;$this->cmdfile=$HE;list($B,$PB)=self::parse($iB);$this->args=array_merge($B,$PB);}function __clone(){$this->args=array_change_key_case($this->args);}function __toString(){$B=array();foreach($this->args as$C=>$E){if(is_numeric($C)){$B[]=$E;}else if($E===true){$B[]=strlen($C)===1?" -$C":" --$C";}else{$B[]=" --$C='$E'";}}$CC=$this->cmdfile;$CC.=' '.substr(__CLASS__,0,-strlen('Command'));$CC.=' '.implode(' ',$B);return$CC;}static function parse(array$iB){$B=array();$PB=array();foreach($iB as$LC=>$GB){$GB=trim($GB);if($GB==='--'){$B[]=implode(' ',array_slice($iB,$LC+1));break;}if(substr($GB,0,1)!=='-'){$B[]=$GB;}else if(substr($GB,1,1)!=='-'){$fC=str_split(substr($GB,1));foreach($fC as$C){$PB[$C]=true;}}else{if(($mE=strpos($GB,'='))!==false){$C=substr($GB,2,$mE-2);$E=substr($GB,$mE+1);}else{$C=substr($GB,2);$E=true;}if(!array_key_exists($C,$PB)){$PB[$C]=$E;}else{if(!is_array($PB[$C])){$PB[$C]=array($PB[$C]);}$PB[$C][]=$E;}}}return array($B,$PB);}function addArg($E,$C=false){if($C===false||is_null($C)){$this->args[]=$E;}else{$this->args[$C]=$E;}return$this;}function getArg($C=false,$P=null){if($C===false||is_null($C)){return$this->args;}if(isset($this->args[$C])){return$this->args[$C];}else{return$P;}}function popArg($C){if($C===false||is_null($C)){return;}if(isset($this->args[$C])){$E=$this->args[$C];unset($this->args[$C]);return$E;}}function readPid($JC=null){if(!is_null($JC)&&is_readable($JC)){$tB=trim(file_get_contents($JC));if(is_numeric($tB)){$this->pid=$tB;}}return$this->pid;}function isRunning(){if($this->pid>0){try{$D=shell_exec(sprintf('ps %d',$this->pid));return substr_count($D,"\n")>=2;}catch(\Exception$z){}}return false;}function wait($qG=0.1){while($this->isRunning()){usleep($qG*1000000);}return true;}function stop(){if($this->pid>0&&$this->isRunning()){return posix_kill($this->pid,SIGTERM);}}function fork($JC=null,array$eC=array()){$EC=clone$this;$EC->args=array_merge($EC->args,$eC);$CC=strval($EC);$x=$EC->app;if($x->outfile!==1){$CC.=' > '.$x->getFileSymbol($x->outfile,true);}if($x->errfile!==2){$CC.=' 2 > '.$x->getFileSymbol($x->errfile,true);}if($tB=shell_exec($CC.' & echo $!')){$tB=trim($tB);$EC->pid=intval($tB);if(!is_null($JC)){file_put_contents($JC,$tB.PHP_EOL,LOCK_EX);}}return$EC->pid;}function loop($FB=1,$aC=0,$qE=0){if($aC>0){$aC=intval($aC)+time();}do{$this->execute();if($FB>0){$FB--;}if($qE>0){usleep($qE*1000000);}}while($FB===0||$aC<0||$aC<time());}abstract function execute();}use \Cute\Application;use \Cute\Command;use \Cute\Utility\Inflect;class Console extends Application{const STDIN='php://stdin';const STDOUT='php://stdout';const STDERR='php://stderr';const DEVNULL='/dev/null';const COLOR_BLACK=90;const COLOR_RED=91;const COLOR_GREEN=92;const COLOR_YELLOW=93;const COLOR_BLUE=94;const COLOR_MAGENTA=95;const COLOR_CYAN=96;const COLOR_WHITE=97;protected$color=false;var$outfile=1;var$errfile=null;function initiate(){return$this;}static function getFileSymbol($_,$GE=false){if(is_null($_)){return self::DEVNULL;}else if(is_int($_)){if($_===0){return$GE?'&0':self::STDIN;}else if($_===1){return$GE?'&1':self::STDOUT;}else if($_===2){return$GE?'&2':self::STDERR;}}return strval($_);}static function appendTo($QB,$zB=false,$HC=null){if(empty($HC)&&$HC!==0){return 0;}if(is_int($HC)&&is_int($zB)){$QB=sprintf("\033[%dm%s\033[%dm",$zB,$QB,0);}$HC=self::getFileSymbol($HC);return file_put_contents($HC,$QB,FILE_APPEND|LOCK_EX);}function setColor($zB){if(is_string($zB)){$zB='COLOR_'.strtoupper($zB);$this->color=constant(__CLASS__.'::'.$zB);}return$this;}function write($QB){$QB=strval($QB);if(func_num_args()>1){$B=array_slice(func_get_args(),1);$QB=vsprintf($QB,$B);}return self::appendTo($QB,$this->color,$this->outfile);}function writeln($QB){$B=func_get_args();$B[0].=PHP_EOL;return exec_method_array($this,'write',$B);}function mount($b){$uE=func_get_args();foreach($uE as&$b){$b=rtrim($b,DIRECTORY_SEPARATOR);}$KE=PATH_SEPARATOR.implode(PATH_SEPARATOR,$uE);set_include_path(get_include_path().$KE);return$this;}function run(){if(php_sapi_name()!=='cli'){return;}if($_SERVER['argc']<2){return;}$iB=$_SERVER['argv'];$HE=array_shift($iB);$A=array_shift($iB);$I=Inflect::camelize($A).'Command';@require_once$I.'.php';if(class_exists($I)){$c=new$I($this,$HE,$iB);return$c->execute();}}}class Factory{protected$storage=null;protected$objects=array();function __construct(Storage&$DC){$this->storage=$DC;}function normalize($I){return rtrim($I,'\\');}function create($I,$A='default'){$I=$this->normalize($I);$ZD=$this->storage->getSectionOnce($I);$H=$ZD->getArray($A);if($A!=='default'){$H=array_merge($ZD->getArray('default'),$H);}if(class_exists($I)){foreach($H as$C=>&$E){if(starts_with($C,'\\')){$E=$this->load($C,$E);}}return exec_construct_array($I,array_values($H));}}function load($I,$A='default'){$I=$this->normalize($I);if(!isset($this->objects[$I])){$this->objects[$I]=array();if(!isset($this->objects[$I][$A])){$this->objects[$I][$A]=$this->create($I,$A);}}return$this->objects[$I][$A];}}class Handler{protected$app=null;protected$succor=null;function __construct($GC=null){$this->app=app();$this->succor=$GC;}function init($U){return method_exists($this,$U)?$U:'';}function __invoke(){$U=$this->app->getMethod();$B=func_get_args();if($U=$this->init($U)){return exec_method_array($this,$U,$B);}else if($this->succor){return exec_function_array($this->succor,$B);}else{return$this->app->abort(403);}}}if(!function_exists('trait_exists')){function trait_exists($I,$bD){return false;}}final class Importer{private static$instance=null;private$classes=array();private$namespaces=array();private function __construct(){}static function getInstance(){if(is_null(self::$instance)){self::$instance=new self();self::$instance->register();}return self::$instance;}static function exists($I,$bD=true){return class_exists($I,$bD)||interface_exists($I,$bD)||trait_exists($I,$bD);}function autoload($I){$I=trim($I,'\\_');if(isset($this->classes[$I])){require_once$this->classes[$I];return self::exists($I,false);}$FH=$this->checkNamespace($I);return($FH===true);}function register(){return spl_autoload_register(array($this,'autoload'));}function addClass($X,$I){$iE=func_get_args();$X=array_shift($iE);if(is_readable($X)){foreach($iE as$I){$this->classes[trim($I,'\\')]=$X;}}ksort($this->classes);return$this;}function addNamespaceStrip($u,$V){$u=trim($u,'\\');$V=rtrim($V,'\\/');$this->namespaces[$u]=$V;ksort($this->namespaces);return$this;}function addNamespace($u,$V){$u=trim($u,'\\');$lB=strtok($u,'\\_');$V=rtrim($V,'\\/').DIRECTORY_SEPARATOR.$lB;return$this->addNamespaceStrip($u,$V);}function checkNamespace($I){$lB=strtok($I,'\\_');$Y=strlen($lB)+1;if(isset($this->namespaces[$lB])){$b=$this->namespaces[$lB];}else if(isset($this->namespaces[''])){$b=$this->namespaces[''];}else{return false;}$HB=$b.DIRECTORY_SEPARATOR;$HB.=str_replace(array('\\','_'),DIRECTORY_SEPARATOR,substr($I,$Y));if(file_exists($HB.'.php')){require_once$HB.'.php';if(self::exists($I,false)){return true;}}while($lB){$b.=DIRECTORY_SEPARATOR.$lB;if(file_exists($b.'.php')){require_once$b.'.php';if(self::exists($I,false)){return true;}}if(!file_exists($b)){return false;}$lB=strtok('\\_');}}}use \Cute\Context\Router;class Website extends Application{protected$method='';var$url='';var$rule='';function initiate(){$oB=Router::getCurrent();$this->install($oB,array('dispatch','abort','redirect'));$this->install('\\Cute\\Context\\Input',array('getClientIP','input'=>'getInstance',));return$this;}function route($b,$CB){$oB=Router::getCurrent();return$oB->route($b,$CB);}function mount($DB,$mC='*.php'){$oB=Router::getCurrent();$oB->mount($DB,$mC);return$this;}function getMethod(){if(empty($this->method)){$vB=$this->input('SERVER');$U=$vB->request('_method','');if(empty($U)){$U=$vB->get('REQUEST_METHOD','GET');}$this->method=strtolower($U);}return$this->method;}function run(){$AH=$this->getConfig('route_key','r');$b=$this->input('GET')->get($AH,'/');try{$YD=$this->dispatch($b);$GC=null;foreach($YD['handlers']as$CB){if(empty($CB)){continue;}if(is_string($CB)&&class_exists($CB,true)){$CB=new$CB($GC);}if($CB&&is_callable($CB)){$GC=&$CB;}}if($GC){$this->url=$YD['url'];$this->rule=$YD['rule'];$YE=exec_function_array($GC,$YD['args']);}}catch(\Exception$z){$YE=strval($z);}return die($YE);}}}
namespace Cute\Base{trait Deferring{protected$closed=false;function defer(){register_shutdown_function(function($hG){$hG->__destruct();},$this);}function __destruct(){if($this->closed===false){$this->close();}$this->closed=true;}function close(){}}use \Cute\Context\Input;defined('IP_ECHO_URL')or define('IP_ECHO_URL','http://ipecho.net/plain');class IP{const BYTE_IP_V4=4;const BYTE_IP_V6=6;protected$ipaddr='';function __construct($AB=false){$this->ipaddr=$AB?:self::getClientIP();}function __toString(){return$this->ipaddr;}static function toHex($AB){return sprintf('%08x',ip2long($AB));}static function getClientIP(){return Input::getClientIP();;}static function getServerIP(){if($AB=file_get_contents(IP_ECHO_URL)){return trim($AB);}}static function getHostIP($YC,$gD=array()){$gE=dns_get_record($YC,DNS_A,$HH,$KH);if($gE&&$AB=$gE[0]['ip']){return$AB;}else if($gD){return$gD[array_rand($gD)];}}}class Mocking{protected$inner=null;private function __construct(&$LE=null){$this->inner=$LE;}static function mock(&$LE=null){$dD=new self($LE);return$dD->isReady()?$dD->inner:$dD;}function __call($A,$cD){return false;}function __set($A,$E){return false;}function __get($A){return;}function isReady(){return!is_null($this->inner);}}use \ArrayObject;class Storage extends ArrayObject{const CONFIG_SECTION_NAME='configs';function __construct($vB=array(),$aG=ArrayObject::ARRAY_AS_PROPS){parent::__construct($vB,$aG);}static function newInstance($X,$cE=false){$X.=empty($cE)?'':$cE;assert(is_readable($X));return new self(include$X);}function getItem($A,$P=null){$YB=@$this->offsetGet($A);return is_null($YB)?$P:$YB;}function getArray($A,array$P=array()){$H=$this->getItem($A);return is_array($H)?$H:$P;}function getSection($A){$H=$this->getArray($A,array());return new self($H);}function getSectionOnce($A){$H=$this->getItem($A);if(!($H instanceof self)){$H=new self($H);$this->offsetSet($A,$H);}return$H;}function getConfig($A,$P=null){$ZD=$this->getSectionOnce(self::CONFIG_SECTION_NAME);return$ZD->getItem($A,$P);}}}
namespace Cute\Cache{use \SplSubject;use \SplObserver;abstract class BaseCache implements SplObserver{protected$data=null;protected$ttl=0;protected$coerce=false;function share(&$H,$pD=false,$YG=0){$this->data=&$H;$this->coerce=$pD;$this->ttl=intval($YG);return$this;}function update(SplSubject$JH=null){if($pD=$this->coerce){$this->data=$pD($this->data);}$this->writeData();}abstract function initiate();abstract function readData();abstract function removeData();abstract function writeData($yC=false);}class FileCache extends BaseCache{protected$filename='';protected$ext='.php';function __construct($A,$V=false){if(empty($V)){$V=sys_get_temp_dir();}else{$V=rtrim($V,DIRECTORY_SEPARATOR);@mkdir($V,0755,true);}$this->filename=$V.DIRECTORY_SEPARATOR.$A.$this->ext;}function initiate(){if(!is_readable($this->filename)){touch($this->filename);}return$this;}function readData(){$N=filesize($this->filename);if($N>0){$this->data=(include$this->filename);}return$this->data;}function writeData($yC=false){$e="<?php \nreturn ".var_export($this->data,true).";\n";$N=file_put_contents($this->filename,$e);return$N&&$N>0;}function removeData(){if(file_exists($this->filename)){return unlink($this->filename);}}}class MemCache extends BaseCache{use\Cute\Base\Deferring;const MEMCACHE_WEIGHT_UNIT=12;protected$name='';protected$memcache=null;protected$host='';protected$port=0;protected$persistent=false;protected$weight=1;function __construct($A,$JB='127.0.0.1',$q=11211,$HG=false,$KC=1){$this->name=$A;$this->host=$JB;$this->port=intval($q);$this->persistent=$HG;$this->weight=intval($KC);}function initiate(){if(extension_loaded('memcache')){$this->memcache=new\Memcache();try{$this->connect();}catch(\Exception$z){$this->memcache=null;}}return$this;}function connect(){$KC=intval($this->weight)*self::MEMCACHE_WEIGHT_UNIT;$this->memcache->addServer($this->host,$this->port,$this->persistent,$KC);}function close(){$this->memcache->close();}function readData(){$H=$this->memcache->get($this->name);if($H!==false){return$H;}}function writeData($yC=false){return$this->memcache->set($this->name,$this->data,MEMCACHE_COMPRESSED,$this->ttl);}function removeData(){if($this->memcache->exists($this->name)){return$this->memcache->delete($this->name);}}}class RedisCache extends BaseCache{use\Cute\Base\Deferring;protected$name='';protected$redis=null;protected$host='';protected$port=0;protected$params=array('persistent'=>false,'socket'=>null,'serializer'=>null,);function __construct($A,$JB='127.0.0.1',$q=6379,array$M=array()){$this->name=$A;$this->host=$JB;$this->port=intval($q);if(isset($M['socket'])&&is_string($M['socket'])){if(starts_with($M['socket'],'unix://')){$M['socket']=substr($M['socket'],7);}}$this->params=array_merge($this->params,$M);}function initiate(){if(extension_loaded('redis')){$this->redis=new\Redis();try{$this->connect();}catch(\Exception$z){$this->redis=null;}}return$this;}function connect(){if(isset($this->params['socket'])){$B=array($this->params['socket']);}else{$B=array($this->host,$this->port);}$LG=$this->params['persistent']?'pconnect':'connect';exec_method_array($this->redis,$LG,$B);if($mD=$this->params['serializer']){$mD=constant('\\Redis::SERIALIZER_'.$mD);$this->redis->setOption(\Redis::OPT_SERIALIZER,$mD);}}function close(){$this->redis->close();}function readData(){$H=$this->redis->get($this->name);if($H!==false){$this->data=$H;return$this->data;}}function writeData($yC=false){return$this->redis->set($this->name,$this->data,$this->ttl);}function removeData(){if($this->redis->exists($this->name)){return$this->redis->del($this->name);}}}class Subject implements SplSubject{protected$observers=array();function attach(SplObserver$tC){$this->observers[]=$tC;}function detach(SplObserver$tC){$C=array_search($tC,$this->observers,true);if($C){unset($this->observers[$C]);}}function notify(){foreach($this->observers as&$tC){$tC->update($this);}}}class TSVCache extends FileCache{protected$delimiter="\t";protected$ext='.csv';function __construct($A,$V=false,$DF=''){parent::__construct($A,$V);if(!empty($DF)){$this->delimiter=$DF;}}function readData($CF=0){$this->data=array();$LB=fopen($this->filename,'rb');if($LB===false){return$this->data;}do{$QC=fgetcsv($LB,0,$this->delimiter);if(is_null($QC)||$QC===false){break;}if(is_null($QC[0])){$QC=array();}if($CF>0&&count($QC)<$CF){continue;}$this->data[]=$QC;}while(1);fclose($LB);return$this->data;}function writeData($yC=false){$iD=0;$LB=fopen($this->filename,'wb');if($LB===false){return$iD;}foreach($this->data as$h){$iD+=fputcsv($LB,$h,$this->delimiter);}fclose($LB);return$iD;}}class TextCache extends FileCache{protected$ext='.txt';function encode($H){return$H;}function decode($H){return$H;}function readData(){$N=filesize($this->filename);if($N>0){$e=file_get_contents($this->filename);$this->data=$this->decode($e);}return$this->data;}function writeData($yC=false){$e=$this->encode($this->data);$N=file_put_contents($this->filename,$e,LOCK_EX);return$N&&$N>0;}}class XSONCache extends TextCache{protected$ext='.json';function encode($H){return json_encode($H);}function decode($H){return json_decode($H);}}class YAMLCache extends TextCache{protected$ext='.yml';function encode($H){if(extension_loaded('yaml')){return yaml_emit($H,YAML_UTF8_ENCODING,YAML_LN_BREAK);}else if(class_exists('sfYamlDumper',true)){$jG=new\sfYamlDumper();return$jG->dump($H);}}function decode($H){if(extension_loaded('yaml')){return yaml_parse($H);}else if(class_exists('sfYamlParser',true)){$sG=new\sfYamlParser();return$sG->parse($H);}}}}
namespace Cute\Commun{use \Cute\Base\Mocking;defined('GEARMAN_SUCCESS')or define('GEARMAN_SUCCESS',0);class Job{protected$json='';function __construct($aB){$this->json=$aB;}function workload(){return$this->json;}function worknorm(){$aB=$this->workload();return json_decode($aB,true);}}class JobServer{use\Cute\Base\Deferring;protected static$instance=null;protected$worker_file='';protected$callbacks=array();protected$host='';protected$port=4730;protected$timeout=0;protected$client=null;protected$worker=null;protected function __construct($JB,$q){$this->host=$JB;$this->port=intval($q);}static function getInstance($JB='127.0.0.1',$q=4730,$kD=0){if(!self::$instance){self::$instance=new self($JB,$q);self::$instance->setTimeout($kD);}return self::$instance;}function close(){unset($this->client);unset($this->worker);unset($this->callbacks);}function setTimeout($kD=0){$this->timeout=intval($kD);return$this;}function setWorkerFile($xF){$this->worker_file=$xF;return$this;}function standIn($A,$aB){if($this->worker_file){defined('WORKER_RUNNING')or define('WORKER_RUNNING',true);require$this->worker_file;}if($UF=self::$instance->$A){$PF=new Job($aB);return$UF($PF);}}function __call($A,$B){$aB=json_encode($B);$lD=$this->getClient();if($lD instanceof Mocking){return$this->standIn($A,$aB);}try{$D=$lD->doNormal($A,$aB);assert($lD->returnCode()===GEARMAN_SUCCESS);}catch(\Exception$z){$D=$this->standIn($A,$aB);}return$D;}function __set($A,$a){$this->callbacks[$A]=$a;$LF=$this->getWorker();return$LF->addFunction($A,$a);}function __get($A){if(isset($this->callbacks[$A])){return$this->callbacks[$A];}}function getClient(){if(!$this->client){if(class_exists('\\GearmanClient')){$this->client=new\GearmanClient();$this->client->addServer($this->host,$this->port);}else{$this->client=Mocking::mock();}if($this->timeout>=0){$this->client->setTimeout($this->timeout);}}return$this->client;}function getWorker(){if(!$this->worker){if(class_exists('\\GearmanWorker')){$this->worker=new\GearmanWorker();$this->worker->addServer($this->host,$this->port);}else{$this->worker=Mocking::mock();}}return$this->worker;}function run(){if(!defined('WORKER_RUNNING')){define('WORKER_RUNNING',true);while($this->getWorker()->work());}}}use \Cute\Logging\Logger;class cURL{use\Cute\Base\Deferring;const CONN_FAIL_ERRNO=7;const DNS_FAIL_ERRNO=28;protected$base_url='';protected$global_opts=array();protected$logger=null;function __construct($CE='',Logger&$vF=null){\app()->import('Unirest',VENDOR_ROOT.'/unirest/src');$this->setBaseURL($CE);$this->logger=Mocking::mock($vF);}function close(){unset($this->logger);}static function getRequestMethod($U='GET'){return@constant('\Unirest\Method::'.strtoupper($U));}function setBaseURL($CE){$this->base_url=rtrim($CE,'/');return$this;}function prepare(array$NB=array()){if(!array_key_exists('timeout',$NB)&&!array_key_exists('Timeout',$NB)){$NB['Timeout']=intval(ini_get('default_socket_timeout'));}if(!array_key_exists('useragent',$NB)&&!array_key_exists('UserAgent',$NB)){$NB['UserAgent']='Mozilla/4.0';}if(empty($this->global_opts)){$this->global_opts=\Unirest\Request::curlOpts(array());}if(!empty($NB)){\Unirest\Request::curlOpts($this->global_opts);}return$this;}function finish(&$AF,$U='GET',$KF='-',$i=''){\Unirest\Request::clearCurlOpts();\Unirest\Request::curlOpts($this->global_opts);if($this->logger instanceof Mocking){return;}$n=\Unirest\Request::getInfo(CURLINFO_EFFECTIVE_URL);$tG=\Unirest\Request::getInfo(CURLINFO_CONNECT_TIME);$lG=\Unirest\Request::getInfo(CURLINFO_TOTAL_TIME);$PE=$AF->code;$VG=$AF->body?:'-';$i.=$i?"\n":"";$this->logger->info("{$U} \"{$n}\" {$tG} {$lG} {$PE}"."\n{$i}>>>>>>>>\n{$KF}\n<<<<<<<<\n{$VG}\n");}function getURLString($n){$n=$this->base_url.'/'.ltrim($n,'/');return$n;}function getBodyString($KB){if(empty($KB)){$KB='-';}else if(is_array($KB)||$KB instanceof\Traversable){$KB=\Unirest\Request::buildHTTPCurlQuery($KB);$KB=http_build_query($KB);}return$KB;}function __call($A,$B){$U=self::getRequestMethod($A);if($U){$this->prepare();if(!empty($this->base_url)){$B[0]=$this->getURLString($B[0]);}$i='';try{$D=exec_method_array('\\Unirest\\Request',$A,$B);}catch(\Exception$z){$i=$z->getMessage();}$KB=$this->getBodyString($B[2]);$this->finish($D,$U,$KB,$i);}else{$D=exec_method_array(\Unirest\Request,$A,$B);}return$D;}}}
namespace Cute\Context{class Input{protected static$instances=array();protected static$client_ip='-';protected$input_type=null;protected$data=array();protected$done=false;protected function __construct($ZB='POST'){$this->input_type=constant('INPUT_'.$ZB);if($ZB==='REQUEST'){$this->raw_data=$_REQUEST;}assert(!is_null($this->input_type));}function __call($A,$cD){if(starts_with($A,'get')&&count($cD)>0){$F=substr($A,3);@list($C,$P)=$cD;return$this->get($C,$P,$F);}}static function getInstance($ZB='POST'){$ZB=strtoupper($ZB);if(!isset(self::$instances[$ZB])){$dB=new static($ZB);self::$instances[$ZB]=$dB;}return self::$instances[$ZB];}static function request($C,$P=null,$F=false){$XG=self::getInstance('POST');$E=$XG->get($C,$P,$F);if($E===$P){$bG=self::getInstance('GET');$E=$bG->get($C,$P,$F);}return$E;}static function getClientIP(){if(strlen(self::$client_ip)>=7){return self::$client_ip;}$fC=array('HTTP_CLIENT_IP','HTTP_X_REAL_IP','HTTP_X_FORWARDED_FOR','HTTP_X_FORWARDED','HTTP_X_CLUSTER_CLIENT_IP','HTTP_FORWARDED_FOR','HTTP_FORWARDED','REMOTE_ADDR');$cG=self::getInstance('SERVER');foreach($fC as$C){$AB=$cG->get($C);if($AB&&strlen($AB)>=7){self::$client_ip=$AB;break;}}return self::$client_ip;}static function detectType($F){$F=empty($F)?'string':strtolower($F);foreach(filter_list()as$A){if(ends_with($A,$F)){return filter_id($A);}}}static function coerce($E,$F='raw'){if(is_array($E)){foreach($E as$C=>$VC){if(is_array($F)&&isset($F[$C])){$ZE=$F[$C];}else{$ZE=$F;}$E[$C]=self::coerce($VC,$ZE);}}else{$F=strtolower($F);if($F==='int'||$F==='float'){settype($E,$F);}else if($F==='array'){$E=(array)$E;}else if($F!=='raw'){settype($E,'string');}}return$E;}protected function filterData($C,$F){$F=self::detectType($F);return filter_input($this->input_type,$C,$F);}protected function filterArrayData($wB){if(is_array($wB)){foreach($wB as$C=>&$F){if(is_array($F)){$F['filter']=self::detectType($F['filter']);}else{$F=self::detectType($F);}}}else{$wB=self::detectType($wB);}return filter_input_array($this->input_type,$wB);}function get($C,$P=null,$F=false){if(!array_key_exists($C,$this->data)){if(is_array($P)){$F=array($C=>array('filter'=>$F,'flags'=>FILTER_FORCE_ARRAY));$H=$this->filterArrayData($F);$this->data=array_merge($this->data,$H);}else{$E=$this->filterData($C,$F);if(is_null($E)||$E===false){$E=self::coerce($P,$F);}$this->data[$C]=$E;}}return$this->data[$C];}function all($C=false,$wB=false){if($this->done===false){$this->data=$this->filterArrayData($wB);}if(is_null($this->data)){$this->data=array();}if($C===false){return$this->data;}else if(array_key_exists($C,$this->data)){return$this->data[$C];}}}use \Cute\Context\Input;class Locale{protected$language='';protected$locale_dir='';protected$timezone='Asia/Shanghai';function __construct($OE='',$XB=''){if(empty($OE)){$OE=APP_ROOT.'/protected/locales';}$this->locale_dir=$OE;$this->setTimezone($XB);}function detectLanguage(){$vB=Input::getInstance('SERVER');$VB=strstr($vB->get('LANG',''),'.',true);if(empty($VB)){$DH=$vB->get('HTTP_ACCEPT_LANGUAGE','');preg_match_all('/([a-z]{2}\-?[A-Z]{0,2})/',$DH,$bB);foreach($bB[0]as$VB){$VB=str_replace('-','_',$VB);if(file_exists($this->locale_dir.'/'.$VB)){break;}}}return$VB;}function setLocale($VB,$YC='messages'){if($VB){$this->language=$VB;}else{$this->language=$this->detectLanguage();}putenv('LANG='.$this->language);setlocale(LC_ALL,$this->language);bindtextdomain($YC,$this->locale_dir);bind_textdomain_codeset($YC,'UTF-8');textdomain($YC);return$this->language;}function setTimezone($XB){if($XB){$this->timezone=$XB;}@date_default_timezone_set($this->timezone);return$this->timezone;}}class Router{protected static$current=null;static$aliases=array('<int>'=>'([0-9\-]+)','<float>'=>'([0-9\.\-]+)','<num>'=>'([0-9\.\-,]*)','<string>'=>'([a-z0-9\-_]+)','<page>'=>'([0-9]*)/?([0-9]*)/?','<path>'=>'([a-z0-9\-_/])');protected$filename='';protected$prefix='';protected$children=array();protected$items=array();function __construct($X='',$s='/'){$this->filename=$X;$this->prefix=rtrim($s,'/');self::$current=$this;if($X&&is_readable($X)){include_once$X;}}static function getCurrent(){if(is_null(self::$current)){self::$current=new self();}return self::$current;}static function toPrefix($X){$vG=strstr(basename($X),'.');$uG=substr($X,0,-strlen($vG));$s=str_replace(DIRECTORY_SEPARATOR,'/',$uG);return strtolower(rtrim($s,'/'));}static function compileUrl($n,$iG=false){$n=preg_quote(strtolower(rtrim($n,'/')));$fC=array_map('preg_quote',array_keys(self::$aliases));$S=array_values(self::$aliases);$n=str_replace($fC,$S,$n);$mC=($iG===false)?'':'(.*)?';return'!^'.$n.'/?'.$mC.'$!';}function route($b,&$CB){$UC=self::compileUrl($b);if(func_num_args()>2){$VD=array_slice(func_get_args(),1);}else{$VD=array($CB);}$this->items[$UC]=$VD;return$UC;}function mount($DB,$mC='*.php'){$DB=rtrim($DB,DIRECTORY_SEPARATOR);$WD=glob($DB.'/'.$mC,GLOB_BRACE);if(!empty($WD)){$oG=strlen($DB);foreach($WD as$X){$s=self::toPrefix(substr($X,$oG));$this->children[$s]=$X;}}return$this;}function dispatch($b,$lE=false){$b=rtrim(strtolower($b),' /').'/';if(!$lE){krsort($this->children);}foreach($this->children as$s=>$X){if(starts_with($b,$s)){$oB=new self($X,$s);$b=substr($b,strlen($s));return$oB->dispatch($b);}}if(!$lE){krsort($this->items);}foreach($this->items as$UC=>$VD){if(preg_match($UC,$b,$B)===1){$n=$this->prefix.array_shift($B);return array('handlers'=>&$VD,'args'=>$B,'url'=>$n,'rule'=>$UC);}}$this->abort(404);return array('handlers'=>array());}function abort($PE=500){return@http_response_code($PE);}function redirect($RF='',$QF=false){$XF=$QF?301:302;@header('Location: '.$RF,true,$XF);return die();}}class Session{}}
namespace Cute\DB{use \DateTime;use \PDO;use \PDOException;use \Cute\DB\Literal;use \Cute\Utility\Inflect;use \Cute\View\Templater;abstract class Database{const DB_ACTION_READ='R';const DB_ACTION_WRITE='W';protected$pdo=null;protected$user='';protected$password='';protected$dbname='';protected$tblpre='';protected$host='';protected$port=0;protected$charset='';protected$past_sqls=array();function __construct($dF,$HF,$y,$MC='',$JB='127.0.0.1',$q=0,$wE=''){$this->user=$dF;$this->password=$HF;$this->dbname=$y;$this->tblpre=$MC;$this->host=$JB;if(intval($q)>0){$this->port=intval($q);}if(!empty($wE)){$this->charset=$wE;}}function getPDO(){if(!$this->pdo){$this->connect($this->dbname,$this->tblpre);}return$this->pdo;}function getPastSQL($y=false,$o=0){if($y===true||$y==='*'){return$this->past_sqls;}$y=empty($y)?$this->dbname:$y;$sE=$this->past_sqls[$y];$o=empty($o)?0:-abs($o);return$o?array_slice($sE,$o,null,true):$sE;}function getDriverName(){$XD=$this->getPDO()->getAttribute(PDO::ATTR_DRIVER_NAME);$XD=strtolower($XD);return$XD==='dblib'?'sqlsrv':$XD;}function inline($r){return new Literal($r);}function quote($r){if(is_null($r)){return Literal::quoteNull();}else if($r instanceof Literal||$r instanceof DateTime){return Literal::quote($r);}else{$F=is_int($r)?PDO::PARAM_INT:PDO::PARAM_STR;return$this->getPDO()->quote($r,$F);}}function embed($G,array$M=array()){foreach($M as&$r){$r=$this->quote($r);}$G=str_replace('?','%s',$G);return vsprintf($G,$M);}function execute($G,array$M=array()){if(!empty($M)){$G=$this->embed($G,$M);}try{$D=$this->getPDO()->exec($G);}catch(PDOException$z){$Z="SQL: $G\n".$z->getMessage();throw new PDOException($Z);}if(SQL_VERBOSE){$this->past_sqls[$this->dbname][]=array('act'=>self::DB_ACTION_WRITE,'sql'=>$G,);}return$D;}function query($G,array$M=array()){try{$d=$this->getPDO()->prepare($G);if($d->execute($M)){$d->setFetchMode(PDO::FETCH_ASSOC);}}catch(PDOException$z){$G=$this->embed($G,$M);$Z="SQL: $G\n".$z->getMessage();throw new PDOException($Z);}if(SQL_VERBOSE){$G=$this->embed($G,$M);$this->past_sqls[$this->dbname][]=array('act'=>self::DB_ACTION_READ,'sql'=>$G,);}return$d;}function fetch($G,array$M=array(),$bC=false){if($d=$this->query($G,$M)){if(is_numeric($bC)){$D=$d->fetchColumn(intval($bC));}else{$D=$d->fetch();if($D&&$bC){$D=isset($D[$bC])?$D[$bC]:null;}}$d->closeCursor();return$D;}}function transact(callable$tF){$TE=$this->getPDO();if($TE->beginTransaction()){$B=func_get_args();array_unshift($B,$this);try{$tF($B);$TE->commit();}catch(PDOException$z){$TE->rollBack();}}}function listTables(){if(empty($this->tblpre)){$G="SHOW TABLES FROM ?";$r=$this->getDBName();}else{$G="SHOW TABLES LIKE ?";$r=str_replace('_','\_',$this->tblpre).'%';}$D=array();if($d=$this->query($G,array($r))){$DG=strlen($this->tblpre);while($K=$d->fetchColumn(0)){$D[]=substr($K,$DG);}$d->closeCursor();}return$D;}function readFields($K){$L=$this->getColumns($K);$v=array();$UB=array();foreach($L as$J){if($J->isPrimaryKey()){$v[]=$J->name;}$P=$J->default;$eE=$J->getCategory();if($eE==='int'){$P=intval($P);}else if($eE==='float'){$P=floatval($P);}$UB[$J->name]=$P;}return compact('table','pkeys','fields');}function generateModel($V,$K,$W='',$u='',$nF=false){if(empty($W)){$W=$nF?Inflect::singularize($K):$K;$W=Inflect::camelize($W);}$V=rtrim($V,DIRECTORY_SEPARATOR).DIRECTORY_SEPARATOR;if($u){$V.=str_replace('\\',DIRECTORY_SEPARATOR,trim($u));if(!file_exists($V)){mkdir($V,0777,true);}}$X=$V.DIRECTORY_SEPARATOR.$W.'.php';if(class_exists($u.'\\'.$W)){return$X;}$H=$this->readFields($K);$H['name']=$W;$H['ns']=$u;$H['mixin']=null;$H['relations_in_mixin']=false;$AD=$u.'\\'.$W.'Mixin';if(trait_exists($AD,true)){foreach($H['fields']as$_C=>$P){if(property_exists($AD,$_C)){unset($H['fields'][$_C]);}}$H['mixin']=$AD;$H['relations_in_mixin']=method_exists($AD,'getRelations');}$ZC=new Templater(SRC_ROOT);ob_start();$ZC->render('model_tpl.php',$H);$e="<?php\n\n".trim(ob_get_clean());file_put_contents($X,$e);return$X;}static function csvline($h,$qB="\t",$zC=PHP_EOL,$hB='"',$WC=null){foreach($h as&$YB){if(is_null($YB)){$YB=$WC;}else if(is_string($YB)){if(strpbrk($YB," $qB")!==false){$YB="$hB$YB$hB";}}}return implode($qB,$h).$zC;}abstract function connect($y,$MC='',$RC=false);abstract function getLimit($Y,$o=0);abstract function getColumns($K);}use \HandlerSocketi;class HandlerSocket{const HS_PORT_R=9998;const HS_PORT_RW=9999;protected$handler=null;protected$query=null;protected$read_only=false;protected$dbname='';protected$table='';protected$fields=array();protected$index=null;function __construct($y,$JB='127.0.0.1',$q=0,$OF=false){$this->dbname=$y;$this->read_only=$OF;if(empty($q)){$q=$this->read_only?self::HS_PORT_R:self::HS_PORT_RW;}$this->handler=new HandlerSocketi($JB,$q);}function open($K,$UB){if(is_string($UB)){$UB=explode(',',str_replace(' ','',$UB));}$this->table=$K;$this->fields=$UB;$this->query=null;return$this;}protected function prepare($f=null){if(empty($this->query)||$this->index!==$f){$this->index=$f;$NB=empty($this->index)?array():array('index'=>$this->index);$this->query=$this->handler->open_index($this->dbname,$this->table,$this->fields,$NB);}return$this->query;}function insert(array$TD){$C=$this->index;$D=$this->prepare($C)->insert($TD);return$D!==false;}function delete($E){if(func_num_args()>1){$C=$E;$E=func_get_arg(1);}else{$C=null;}return$this->prepare($C)->remove($E);}function truncate($SD){$TC=array();$C=null;$SD=is_array($SD)?$SD:func_get_args();foreach($SD as$WB){$TC[]=array('remove',$WB);}$D=$this->prepare($C)->multi($TC);$GH=create_function('$a,$b','return $a && $b;');return array_reduce($D,$GH,true);}function update(array$XC,$C,$E){return$this->prepare($C)->update($E,$XC);}function get($E){if(func_num_args()>1){$C=$E;$E=func_get_arg(1);}else{$C=null;}$D=$this->prepare($C)->find($E);if(empty($D)){return($D===false)?false:null;}return array_combine($this->fields,$D[0]);}function all($C=null,$w='>=',$E=0,$TB=0,$o=0){$eC=array();if($TB>0){$eC['limit']=$TB;}if($o>0){$eC['offset']=$o;}$E=array($w=>$E);$D=$this->prepare($C)->find($E,$eC);if($D===false){return false;}foreach($D as&$h){$h=array_combine($this->fields,$h);}return$D;}function in($C,$E){$TC=array();$S=array_slice(func_get_args(),1);if(count($S)===1&&is_array($S[0])){$S=$S[0];}foreach($S as$E){$TC[]=array('find',$E);}$D=$this->prepare($C)->multi($TC);if($D===false){return false;}$FC=exec_function_array('array_merge',$D);foreach($FC as&$h){$h=array_combine($this->fields,$h);}return$FC;}}class Literal{protected static$format="'%s'";protected$value;function __construct($E){$this->value=$E;}function __toString(){return strval($this->value);}static function quoteNull(){return'NULL';}static function quote($E){if(is_null($E)){return self::quoteNull();}else if($E instanceof self){return strval($E);}if($E instanceof DateTime){$E=$E->format('Y-m-d H:i:s');}else if(is_string($E)){$E=convert($E,'UTF-8');}else{$E=strval($E);}return sprintf(self::$format,$E);}}use \Cute\DB\Database;class MySQL extends Database{protected$port=3306;protected$charset='utf8';protected$lower_table_name=null;function connect($y,$MC='',$RC=false){$SE=sprintf('mysql:host=%s;port=%d;charset=%s',$this->host,$this->port,$this->charset);$NB=array(PDO::ATTR_ERRMODE=>PDO::ERRMODE_EXCEPTION,PDO::MYSQL_ATTR_INIT_COMMAND=>sprintf("SET NAMES '%s'",$this->charset),);$this->pdo=new PDO($SE,$this->user,$this->password,$NB);if($RC){$this->pdo->exec(sprintf("CREATE DATABASE IF NOT EXIST `%s`",$this->dbname));}$this->pdo->exec(sprintf("USE `%s`",$this->dbname));$this->tblpre=$MC;if(!array_key_exists($this->dbname,$this->past_sqls)){$this->past_sqls[$this->dbname]=array();}return$this;}function needTableToLower(){if(is_null($this->lower_table_name)){$G="SHOW Variables LIKE 'lower_case_table_names'";$mG=$this->fetch($G,array(),'Value');$this->lower_table_name=intval($mG)===1;}return$this->lower_table_name;}function getTableName($K,$SC=false){$O=$this->tblpre.$K;if($this->needTableToLower()){$O=strtolower($O);}return$SC?'`'.$O.'`':$O;}function getLimit($Y,$o=0){if($o>0){$TB=sprintf(" LIMIT %d, %d",$o,$Y);}else{$TB=sprintf(" LIMIT %d",$Y);}return array("",$TB);}function getPKey($K){$O=$this->getTableName($K);$G="SELECT COLUMN_NAME FROM information_schema.COLUMNS"." WHERE TABLE_SCHEMA=? AND TABLE_NAME=? AND COLUMN_KEY='PRI'";$M=array($this->dbname,$O);return$this->fetch($G,$M,0);}function getColumns($K){$O=$this->getTableName($K);$L=array('COLUMN_NAME','COLUMN_DEFAULT','COLUMN_KEY','IS_NULLABLE','COLUMN_TYPE','DATA_TYPE','CHARACTER_MAXIMUM_LENGTH','NUMERIC_PRECISION','NUMERIC_SCALE','DATETIME_PRECISION',);$G="SELECT %s FROM information_schema.COLUMNS"." WHERE TABLE_SCHEMA=? AND TABLE_NAME=? ORDER BY ORDINAL_POSITION";$G=sprintf($G,implode(', ',$L));$M=array($this->dbname,$O);if($d=$this->query($G,$M)){$RE=PDO::FETCH_CLASS|PDO::FETCH_PROPS_LATE;$D=$d->fetchAll($RE,'\\Cute\\ORM\\Column');$d->closeCursor();return$D;}}function isExists($K){$O=$this->getTableName($K);$G="SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES"." WHERE TABLE_NAME=? AND (TABLE_SCHEMA=? OR TABLE_CATALOG=?)";$M=array($O,$this->dbname,$this->dbname);$K=$this->fetch($G,$M,0);return$O===$K;}function getCreateSQL($K,$BC,$NE=false,$ME=false){$O=$this->getTableName($K);if($NE){$G="CREATE TABLE `%s` LIKE `%s`";return sprintf($G,$BC,$O);}else if($ME){$RC=sprintf("CREATE TABLE `%s`",$O);$G=$this->fetch("SHOW $RC",array(),'Create Table');$G=preg_replace('/(AUTO_INCREMENT=\d+)/','AUTO_INCREMENT=1',$G,1);$yG=sprintf("CREATE TABLE IF NOT EXISTS `%s`",$BC);return str_replace($RC,$yG,$G);}else{$kB="";$PC="";$t="";$L=$this->getColumns();foreach($L as$J){$A=$J->name;$P=trim($J->default,"()");if($J->getCategory()==='char'){$Y=intval($J->length);$F=($Y>255||$Y<0)?"text":"varchar($Y)";}else if($J->getCategory()==='int'){$sB=intval($J->precision);if($P===''){$P="0";}$F=$J->type."($sB)";}else if($J->getCategory()==='float'){$sB=intval($J->precision);$QE=intval($J->scale);if($P===''){$P="0.0";}$F=$J->type;if($J->type==='real'){$F='float';}else if($J->type==='money'){$F='numeric';}$F.="($sB,$QE)";}else if($J->getCategory()==='datetime'){$F='datetime';}else{$F=$J->type;}if($J->isPrimaryKey()){$kB="    `$A` int(10) unsigned NOT NULL AUTO_INCREMENT,";$PC="PRIMARY KEY (`$A`)";}else if(starts_with($F,'date')||ends_with($F,'text')){$t.="    `$A` $F NULL,\n";}else if($J->isNullable()){$t.="    `$A` $F NULL,\n";}else{$t.="    `$A` $F NOT NULL DEFAULT '$P',\n";}}$ZC=<<<EOD
CREATE TABLE IF NOT EXISTS `%s` (
%s
%s
    %s
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT
EOD
;if(empty($kB)){$t=rtrim($t,",\n");}$G=sprintf($ZC,$BC,$kB,$t,$PC);return$G;}}function sqlToFile($G,$HB,$qB="\t",$zC=PHP_EOL,$hB='"',$WC=null){@mkdir(dirname($HB),0664,true);$ND="FIELDS TERMINATED BY '".addslashes($qB)."'";$ND.=" LINES TERMINATED BY '".addslashes($zC)."'";if($hB){$ND.=" OPTIONALLY ENCLOSED BY '".addslashes($hB)."'";}if($rG){$ND.=" FIELDS ESCAPED BY '".addslashes($rG)."'";}$lC=sys_get_temp_dir().DIRECTORY_SEPARATOR.basename($HB);$MG="$G INTO OUTFILE '$lC' $ND";try{if(file_exists($lC)){unlink($lC);}$this->db->execute($MG);if(file_exists($lC)){rename($lC,$HB);$xB=shell_exec('wc -l '.$HB.' | cut -d" " -f1');$xB=trim($xB);return is_numeric($xB)?intval($xB):0;}}catch(\Exception$z){}}}class Query{const COUNT_INSERT_BULK_MAX=500;static$db_actions=array('select','update','delete','insert','insertBulk','apply',);protected$table='';protected$constrains=array();protected$parameters=array();protected$offset=0;protected$length=-1;protected$additions=array('GROUP BY'=>null,'HAVING'=>null,'ORDER BY'=>null,);function __construct($K){$this->table=$K;}function getTable(){return$this->table;}function deduceWhere($yB='',array&$B=array()){$k=implode(' AND ',$this->constrains);$M=$this->parameters;if(!empty($yB)){if($k){$k='('.$k.') OR ('.$yB.')';}else{$k=$yB;}if(count($B)>0){$M=array_merge($M,$B);}}$k=$k?'WHERE '.$k:'';return array($k,$M);}protected function deduceTail($IH=''){$ZF=func_get_args();$pC="";foreach($this->additions as$C=>$E){if(!is_null($E)&&!in_array($C,$ZF)){$pC.=" $C $E";}}return$pC;}function groupBy($BH,$BG=null){$this->additions['GROUP BY']=$BH;$this->additions['HAVING']=$BG;return$this;}function orderBy($_E,$MD=''){if($MD){$_E.=' '.strtoupper($MD);}$this->additions['ORDER BY']=$_E;return$this;}function setPage($rC,$MB=1,$uB=0){$this->length=intval($rC)<0?-1:intval($rC);if($this->length>0){$MB=intval($MB);if($MB<0&&$uB>0){$MF=ceil($uB/$this->length);$MB+=$MF+1;}if($MB>0){$this->offset=($MB-1)*$this->length;}}return$this;}function contain($_C,array$S){$BB=count($S);if($BB===0){$w='IS NULL';}else if($BB===1){$w='= ?';}else{$eB=implode(', ',array_fill(0,count($S),'?'));$w='IN ('.$eB.')';}$S=array_values($S);$this->constrains[]="$_C $w";$this->parameters=array_merge($this->parameters,$S);return$this;}function filter($IC,$E,$w='= ?'){$w=empty($w)?false:strtoupper($w);if(is_array($E)){if(substr_count($w,'?')===count($E)){$this->constrains[]="$IC $w";$this->parameters=array_merge($this->parameters,$E);}else{$this->contain($IC,$E);}}else if(is_null($E)){if(trim($w)==='<>'){$this->constrains[]="$IC IS NOT NULL";}else{$this->constrains[]="$IC IS NULL";}}else{$this->constrains[]=($w===false)?$IC:"$IC $w";$this->parameters[]=$E;}return$this;}static function getSelectSQL($O,$L='*',$s=""){if(is_object($L)){$L=get_object_vars($L);}if(is_array($L)){array_walk($L,create_function('&$v,$k','if(!is_numeric($k))$v.=" as ".$k;'));$L=implode(', ',$L);}$L=trim($L);$G="SELECT $s$L FROM $O";return$G;}function select(Database&$R,$L='*',$EF='fetchAll',array$qC=array(),$yB='',array&$B=array()){$LD="";$TB="";if(starts_with($L,'COUNT')){$pC=$this->deduceTail('ORDER BY');}else{$pC=$this->deduceTail();if($this->length>0){list($LD,$TB)=$R->getLimit($this->length,$this->offset);}}$O=$R->getTableName($this->getTable(),true);list($k,$M)=$this->deduceWhere($yB='',$B);$G=self::getSelectSQL($O,$L,$LD);$G.=($k?' '.$k:'').$pC.$TB;$d=$R->query(rtrim($G),$M);if($d&&$EF){$D=exec_method_array($d,$EF,$qC);$d->closeCursor();return$D;}}function apply(Database&$R,$a){$a=strtoupper($a);$B=array_slice(func_get_args(),2);if(empty($B)){$L=$a==='COUNT'?'*':'';}else{$L=implode(', ',$B);}$L=$a.'('.$L.')';$D=$this->select($R,$L,'fetchColumn');return$D;}function delete(Database&$R){$O=$R->getTableName($this->getTable(),true);list($k,$M)=$this->deduceWhere();$G="DELETE FROM $O $k";if(empty($k)&&$R->getDriverName()==='mysql'){$G="TRUNCATE $O";}return$R->execute(rtrim($G),$M);}static function getUpdateSet(array$XC){$yE=array();$S=array();foreach($XC as$C=>$VC){$yE[]=$C.'=?';$S[]=$VC;}$jD="SET ".implode(', ',$yE);return array($jD,$S);}function update(Database&$R,array$XC,$cB=false){list($k,$M)=$this->deduceWhere();list($jD,$S)=self::getUpdateSet($XC);$nC=$cB?'UPDATE DELAYED':'UPDATE';$O=$R->getTableName($this->getTable(),true);$G="$nC $O $jD $k";$M=array_merge($S,$M);return$R->execute(rtrim($G),$M);}static function getInsertSQL($O,array$L,$cB=false,$oC=false){if($oC===true){$nC=$cB?'REPLACE DELAYED':'REPLACE INTO';}else{$nC=$cB?'INSERT DELAYED':'INSERT INTO';}if($BB=count($L)){$L=implode(',',$L);$eB=implode(', ',array_fill(0,$BB,'?'));return array("$nC $O ($L)",$eB);}else{return array("$nC $O",'');}}function insert(Database&$R,array$TD,$cB=false,$oC=false){$O=$R->getTableName($this->getTable(),true);list($G,$eB)=self::getInsertSQL($O,array_keys($TD),$cB,$oC);if(!empty($eB)){$G.=" VALUES ($eB)";$M=array_values($TD);if($R->execute($G,$M)){return$R->getPDO()->lastInsertId();}}}function insertBulk(Database&$R,array$FC,array$L=null,$cB=false,$oC=false){assert(count($FC)>0);if(empty($L)){$L=array_keys(reset($FC));}$O=$R->getTableName($this->getTable(),true);list($G,$eB)=self::getInsertSQL($O,$L,$cB,$oC);$EH=array_chunk($FC,self::COUNT_INSERT_BULK_MAX);foreach($EH as$zE){$wG=array_fill(0,count($zE),"($eB)");$G.=" VALUES ".implode(', ',$wG);$zG=array_map('array_values',$zE);$M=exec_funcution_array('array_merge',$zG);$R->execute($G,$M);}}}class SQLServer extends Database{protected$port=1433;protected$charset='utf8';function connect($y,$MC='',$RC=false){$SE=sprintf('dblib:host=%s;port=%d;charset=%s',$this->host,$this->port,$this->charset);$this->pdo=new PDO($SE,$this->user,$this->password);$this->pdo->exec(sprintf("USE `%s`",$this->dbname));$this->tblpre=$MC;if(!array_key_exists($this->dbname,$this->past_sqls)){$this->past_sqls[$this->dbname]=array();}return$this;}function getTableName($K,$SC=false){$O=$this->tblpre.$K;return$SC?'['.$O.']':$O;}function getLimit($Y,$o=0){$LD=sprintf("TOP %d ",$Y);return array($LD,"");}function getPKey($K){$O=$this->getTableName($K);$G="SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.%s WHERE TABLE_SCHEMA='dbo'"." AND TABLE_CATALOG=? AND TABLE_NAME=? ORDER BY ORDINAL_POSITION";$M=array($this->dbname,$O);$pB=$this->fetch(sprintf($G,'KEY_COLUMN_USAGE'),$M,0);if(empty($pB)){$pB=$this->fetch(sprintf($G,'COLUMNS'),$M,0);}return$pB;}function getColumns($K){$O=$this->getTableName($K);$L=array('COLUMN_NAME','COLUMN_DEFAULT','COLUMN_KEY','IS_NULLABLE','COLUMN_TYPE','DATA_TYPE','CHARACTER_MAXIMUM_LENGTH','NUMERIC_PRECISION','NUMERIC_SCALE','DATETIME_PRECISION',);$G="SELECT %s FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA='dbo'"." AND TABLE_CATALOG=? AND TABLE_NAME=? ORDER BY ORDINAL_POSITION";$G=sprintf($G,implode(', ',$L));$M=array($this->dbname,$O);if($d=$this->query($G,$M)){$RE=PDO::FETCH_CLASS|PDO::FETCH_PROPS_LATE;$D=$d->fetchAll($RE,'\\Cute\\ORM\\Column');$d->closeCursor();return$D;}}function isExists($K){$O=$this->getTableName($K);$G="SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='dbo'"." AND TABLE_CATALOG=? AND TABLE_NAME=?";$M=array($this->dbname,$this->table);$K=$this->fetch($G,$M,0);return$O===$K;}function getCreateSQL($BC,$L=array(),$NE=false,$ME=false){$kB="";$PC="";$t="";$L=$this->getColumns();if($NE||$ME){foreach($L as$J){if($J->getCategory()==='char'){$F="[".$J->type."](".intval($J->length).")";}else if($J->type==='numeric'){$F="[numeric](".$J->precision.", ".$J->scale.")";}else{$F="[".$J->type."]";}if($J->isPrimaryKey()){$kB="    [$A] $F IDENTITY(1,1) NOT FOR REPLICATION NOT NULL,";$PC="PRIMARY KEY NONCLUSTERED ( [$A] ASC )";}else{$NG=$J->isNullable()?"NULL":"NOT NULL DEFAULT ".$J->default;$t.="    [$A] $F $NG,\n";}}}else{foreach($L as$J){$P=trim($J->default,"()");if($J->getCategory()==='char'){$Y=intval($J->length);$F=($Y>255||$Y<0)?"text":"varchar($Y)";}else if($J->getCategory()==='int'){$sB=intval($J->precision);if($P===''){$P="0";}$F=$J->type."($sB)";}else if($J->getCategory()==='float'){$sB=intval($J->precision);$QE=intval($J->scale);if($P===''){$P="0.0";}$F=$J->type;if($J->type==='real'){$F='float';}else if($J->type==='money'){$F='numeric';}$F.="($sB,$QE)";}else if($J->getCategory()==='datetime'){$F='datetime';}else{$F=$J->type;}if($J->isPrimaryKey()){$kB="    [$A] $F IDENTITY(1,1) NOT FOR REPLICATION NOT NULL,";$PC="PRIMARY KEY NONCLUSTERED ( [$A] ASC )";}else if(starts_with($F,'date')||ends_with($F,'text')){$t.="    [$A] $F NULL,\n";}else if($J->isNullable()){$t.="    [$A] $F NULL,\n";}else{$t.="    [$A] $F NOT NULL DEFAULT '$P',\n";}}}$ZC=<<<EOD
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES
    WHERE TABLE_SCHEMA='dbo' AND TABLE_NAME='%s')
BEGIN
CREATE TABLE [dbo].[%s] (
%s
%s
    CONSTRAINT [PK_%s]
    %s
    WITH ( PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF,
        ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON )
    ON [PRIMARY]
) ON [PRIMARY]
END
EOD
;if(empty($kB)){$t=rtrim($t,",\n");}$G=sprintf($ZC,$BC,$BC,$kB,$t,$BC,$PC);return$G;}function sqlToFile($G,$HB,$qB="\t",$zC=PHP_EOL,$hB='"',$WC=null){@mkdir(dirname($HB),0664,true);$LB=fopen($HB,'wb');$xB=0;$FF=$this->query($G);while($h=$FF->fetch()){if(is_null($WC)){fputcsv($LB,$h,$qB,$hB);}else{fwrite($LB,self::csvline($h,$qB,$zC,$hB,$WC));}$xB++;}$FF->closeCursor();fclose($LB);return$xB;}}}
namespace Cute\Logging{use \Cute\Logging\Logger;defined('LOG_WRITE_FILE_FREQ')or define('LOG_WRITE_FILE_FREQ',1);class FileLogger extends Logger{use\Cute\Base\Deferring;protected$filename='';protected$records=array();function __construct($A='',$DB=false,$OD=false){$this->filename=($A?$A.'_':'').'%s.log';if($DB===false){$DB=realpath('./logs');}if(is_dir($DB)||mkdir($DB,0777,true)){$this->filename=$DB.DIRECTORY_SEPARATOR.$this->filename;}parent::__construct($OD);$this->defer();}function close(){$this->writeFiles();unset($this->records);}function writeFiles(){foreach($this->records as$PG=>&$BF){$_=sprintf($this->filename,$PG);$KE=implode('',$BF);$N=file_put_contents($_,$KE,FILE_APPEND|LOCK_EX);if($N!==false){$BF=array();}}}function append(){$RG=implode(' ',func_get_args());$nD=date('Ymd');if(!isset($this->records[$nD])){$this->records[$nD]=array();}array_push($this->records[$nD],$RG.PHP_EOL);}function rawlog($gB,$Z,array$T=array()){$gB=strtoupper($gB);if($this->compareLevel($gB)){$e=self::format($Z,$T);$AB=self::getClientIP();$IG=date('Y-m-d H:i:s');$this->append($IG,$AB,$gB,$e);}if(LOG_WRITE_FILE_FREQ>=1||LOG_WRITE_FILE_FREQ>=mt_rand(1,10000)/10000){$this->writeFiles();}}}use \Cute\Context\Input;use \Cute\Utility\Word;abstract class Logger{const EMERGENCY='EMERGENCY';const ALERT='ALERT';const CRITICAL='CRITICAL';const ERROR='ERROR';const WARNING='WARNING';const NOTICE='NOTICE';const INFO='INFO';const DEBUG='DEBUG';protected$threshold=false;protected$threshold_value=null;function __construct($OD=false){if($OD===false){$this->threshold=self::DEBUG;}else{$this->threshold=strtoupper($OD);}}static function format($Z,array$T=array()){$e=is_null($Z)?'':(string)$Z;return Word::replaceWith($e,$T,'{','}');}static function getClientIP(){return Input::getClientIP();}function compareLevel($gB){static$PD=array(self::EMERGENCY=>0,self::ALERT=>1,self::CRITICAL=>2,self::ERROR=>3,self::WARNING=>4,self::NOTICE=>5,self::INFO=>6,self::DEBUG=>7,);if(is_null($this->threshold_value)&&isset($PD[$this->threshold])){$this->threshold_value=$PD[$this->threshold];}if(isset($PD[$gB])){return$PD[$gB]<=$this->threshold_value;}}function emergency($Z,array$T=array()){$this->rawlog(self::EMERGENCY,$Z,$T);}function alert($Z,array$T=array()){$this->rawlog(self::ALERT,$Z,$T);}function critical($Z,array$T=array()){$this->rawlog(self::CRITICAL,$Z,$T);}function error($Z,array$T=array()){$this->rawlog(self::ERROR,$Z,$T);}function warning($Z,array$T=array()){$this->rawlog(self::WARNING,$Z,$T);}function notice($Z,array$T=array()){$this->rawlog(self::NOTICE,$Z,$T);}function info($Z,array$T=array()){$this->rawlog(self::INFO,$Z,$T);}function debug($Z,array$T=array()){$this->rawlog(self::DEBUG,$Z,$T);}abstract function rawlog($gB,$Z,array$T=array());abstract function close();}}
namespace Cute\ORM{use \Cute\ORM\Relation;class BelongsTo extends Relation{protected$another_foreign_key='';function __construct($W='',$qD=''){parent::__construct($W);$this->another_foreign_key=$qD;}function getAnotherForeignKey($A){if(empty($this->another_foreign_key)){$this->another_foreign_key=$A.'_id';}return$this->another_foreign_key;}function relative($A,array&$D){if(empty($D)){return array();}$v=exec_method_array($this->model,'getPKeys');if(empty($v)){return array();}$SB=$this->getAnotherForeignKey($A);$S=$this->getAttrs($D,$SB);$AC=$this->getMapper();$AC->combine(reset($v),$S,true);$this->setAttrs($D,$S,$A,$SB);return$S;}}use \Cute\ORM\Model;class Column extends Model{protected static$_keys=array('COLUMN_NAME'=>'name','COLUMN_DEFAULT'=>'default','COLUMN_KEY'=>'index','IS_NULLABLE'=>'nullable','COLUMN_TYPE'=>'column','DATA_TYPE'=>'type','CHARACTER_MAXIMUM_LENGTH'=>'length','NUMERIC_PRECISION'=>'precision','NUMERIC_SCALE'=>'scale','DATETIME_PRECISION'=>'datetime',);var$name='';var$default=null;var$index=null;var$nullable='YES';var$column='';var$type='';var$length=null;var$precision=null;var$scale=null;var$datetime=null;static function getTable(){return'COLUMNS';}function __set($tE,$E){if(isset(self::$_keys[$tE])){$A=self::$_keys[$tE];$this->$A=$E;}}function isPrimaryKey(){return$this->index==='PRI';}function isNullable(){return$this->nullable==='YES';}function getCategory(){if(!is_null($this->datetime)){return'datetime';}else if(!is_null($this->precision)){return$this->scale>0?'float':'int';}else if(!is_null($this->length)){return'char';}else{return$this->type;}}}use \Cute\DB\Database;use \Cute\Utility\Inflect;class HasMany extends Relation{protected$foreign_key='';protected$is_unique=false;function __construct($W='',$hD=''){parent::__construct($W);$this->foreign_key=$hD;}function bind(Database&$R,$K=''){if(empty($this->foreign_key)){$this->foreign_key=Inflect::singularize($K).'_id';}return parent::bind($R,$K);}function getForeignKey(){return$this->foreign_key;}function relative($A,array&$D){if(empty($D)){return array();}$SB=$this->getForeignKey();$S=$this->getAttrs($D);$AC=$this->getMapper();$AC->combine($SB,$S,$this->is_unique);$P=$this->is_unique?null:array();$this->setAttrs($D,$S,$A,false,$P);return$S;}}use \Cute\ORM\HasMany;class HasOne extends HasMany{protected$is_unique=true;}class ManyToMany extends HasMany{protected$another_foreign_key='';protected$middle_table='';function __construct($W='',$hD='',$qD='',$WG=''){parent::__construct($W,$hD);$this->another_foreign_key=$qD;$this->middle_table=$WG;}function getAnotherForeignKey($A){if(empty($this->another_foreign_key)){$this->another_foreign_key=$A.'_id';}return$this->another_foreign_key;}function relative($A,array&$D){if(empty($D)){return array();}$v=exec_method_array($this->model,'getPKeys');if(empty($v)){return array();}$SB=$this->getForeignKey();$S=$this->getAttrs($D);$AC=$this->getMapper('',$this->middle_table);$AC->combine($SB,$S,false);$UG=$this->getAnotherForeignKey($A);$BD=array();foreach($S as$C=>$E){foreach($E as$ZG=>$VC){$f=$VC->$UG;$S[$C][$ZG]=$f;$BD[$f]=null;}}$AC=$this->getMapper();$AC->combine(reset($v),$BD,true);foreach($D as&$c){$C=$c->getID();if(!isset($S[$C])){continue;}$xC=array();foreach($S[$C]as$f){$xC[]=&$BD[$f];}$c->$A=$xC;}return$BD;}}use \PDO;use \Cute\DB\Query;class Mapper{protected$db=null;protected$query=null;protected$model='';protected$table='';protected$fetch_style=0;protected$relations=array();protected$nothing=false;function __construct(Database&$R,$W='',$K=''){$this->db=$R;$this->table=$K;if($W&&is_object($W)){$W=get_class($W);}$this->setModel($W);}function setModel($W){$this->fetch_style=PDO::FETCH_CLASS;if(empty($W)){$this->model='\\Cute\\ORM\\Model';}else{$this->model=$W;if(method_exists($this->model,'__set')||method_exists($this->model,'__construct')){$this->fetch_style=$this->fetch_style|PDO::FETCH_PROPS_LATE;}if(empty($this->table)){$this->table=exec_method_array($this->model,'getTable');}}return$this;}function getDB(){return$this->db;}function getModel(){return$this->model;}function getQuery(){if(!$this->query){$this->query=new Query($this->getTable());}return$this->query;}function getTable(){return$this->table;}function getTableName($SC=false){$R=$this->getDB();return$R->getTableName($this->getTable(),$SC);}function setPage($rC,$MB=1){$MB=intval($MB);if($MB<0&&intval($rC)>0){$uB=intval($this->count());}else{$uB=0;}$this->getQuery()->setPage($rC,$MB,$uB);return$this;}function setNothing($fG=true){$this->nothing=$fG;return$this;}function join($A='*'){$W=exec_construct_array($this->model);$rD=$W->getRelations();if($A==='*'){$this->relations=&$rD;}else{$dG=func_get_args();foreach($dG as$A){if($A&&isset($rD[$A])){$this->relations[$A]=&$rD[$A];}}}return$this;}function all($L='*',$mB=null,$yB='',array&$B=array()){$R=$this->getDB();if($this->nothing){$D=array();}else{$EB=$this->getQuery();$mB=empty($mB)?$this->fetch_style:$mB;$qC=array($mB,$this->getModel());$D=$EB->select($R,$L,'fetchAll',$qC,$yB,$B);}if(is_array($D)){$K=$this->getTable();foreach($this->relations as$A=>&$TG){$TG->bind($R,$K)->relative($A,$D);}return$D;}}function get($WB,$C=false,$L='*',$O=''){if(empty($C)){$v=exec_method_array($this->getModel(),'getPKeys');if(empty($v)){return;}$C=reset($v);}$this->getQuery()->filter($C,$WB)->setPage(1,1);$xC=$this->all($L);return count($xC)>0?reset($xC):null;}function combine($SB,array&$D,$SG=false,$L='*'){if(empty($SB)||count($D)===0){return$D;}$R=$this->getDB();$EB=$this->getQuery();$EB->contain($SB,array_keys($D));if($L==='*'){$O=$this->getTableName(true);$L=sprintf('%s,%s.*',$SB,$O);}$KG=$SG?PDO::FETCH_UNIQUE:PDO::FETCH_GROUP;$mB=$this->fetch_style|$KG;$qC=array($mB,$this->getModel());$D=$EB->select($R,$L,'fetchAll',$qC);return$D;}function __call($A,$B){$EB=$this->getQuery();if(!method_exists($EB,$A)){array_unshift($B,$A);$A='apply';}if(in_array($A,Query::$db_actions)){$R=$this->getDB();array_unshift($B,$R);return exec_method_array($EB,$A,$B);}else{$D=exec_method_array($EB,$A,$B);return($D instanceof Query)?$this:$D;}}}class Model{protected static$_fields=array();static function getTable(){return'';}static function getPKeys(){return array();}function getRelations(){return array();}function getFields(){$K=$this->getTable();if(!isset(self::$_fields[$K])){$UB=get_object_vars($this);foreach($UB as$A=>$P){if(starts_with($A,'_')){unset($UB[$A]);}}self::$_fields[$K]=&$UB;}return self::$_fields[$K];}function getID($LC=0){if($v=$this->getPKeys()){$pB=$v[$LC];return$this->$pB;}}function setID($WB){if($v=$this->getPKeys()){foreach($v as$LC=>$pB){$this->$pB=func_get_arg($LC);}}return$this;}function isExists(){$WB=$this->getID();return$WB!==0&&!is_null($WB);}}use \Cute\ORM\NestedSet;trait NestedMixin{protected$low_value=0;protected$high_value=0;var$depth=0;var$parent=null;function getRelations(){return array('children'=>new NestedSet(__CLASS__),);}function getLow(){return$this->low_value;}function getHigh(){return$this->high_value;}function isLeaf(){return$this->getHigh()-$this->getLow()===1;}function recur($a){$a($this);foreach($this->children as$wC){$wC->recur($a);}}}class NestedSet extends Relation{function relative($A,array&$D){$EB=$this->getMapper()->orderBy('low_value');if(!empty($D)){$dE=array_pop($D);$B=array($dE->getLow(),$dE->getHigh());$EB->filter('low_value',$B,'BETWEEN ? AND ?');}$O=$EB->getTableName(true);$L=sprintf('low_value,%s.*',$O);$mB=PDO::FETCH_CLASS|PDO::FETCH_UNIQUE;$RD=$EB->all($L,$mB);if(count($RD)===0){return;}$LC=0;$uC=array();$D=reset($RD);foreach($RD as$vC=>&$c){$c->$A=array();if(!$c->isLeaf()){$uC[$vC+1]=$vC;}if(isset($uC[$vC])){$c->parent=&$RD[$uC[$vC]];$c->depth=$c->parent->depth+1;array_push($c->parent->$A,$c);$fE=$c->getHigh();if($fE<$c->parent->getHigh()-1){$uC[$fE+1]=$uC[$vC];}}}return$D;}function exchange(&$aE,&$LH){}function append(&$aE){}function remove(&$aE){}}use \Cute\ORM\Mapper;abstract class Relation{protected$mapper=null;protected$model='';function __construct($W=''){$this->model=empty($W)?'\\Cute\\ORM\\Model':$W;}function getModel(){return$this->model;}function bind(Database&$R,$K=''){$this->mapper=new Mapper($R,$this->model);return$this;}function getMapper($W='',$K=''){if(empty($W)&&empty($K)){return$this->mapper;}else{$R=$this->mapper->getDB();return new Mapper($R,$W,$K);}}protected function getAttrs(array&$D,$sC=false){$VE=array();foreach($D as&$c){$C=$sC?$c->$sC:$c->getID();$VE[$C]=null;}return$VE;}protected function setAttrs(array&$D,array&$S,$A,$sC=false,$P=null){foreach($D as&$c){$C=$sC?$c->$sC:$c->getID();if(isset($S[$C])){$c->$A=&$S[$C];}else{$c->$A=$P;}}}abstract function relative($A,array&$D);}}
namespace Cute\Utility{class Binary{use\Cute\Base\Deferring;protected$filename='';protected$fp=null;protected$term_size=0;protected$offset_size=0;protected$index_first=0;protected$index_last=0;protected$index_total=0;function __construct($X='',$WE=0,$XE=0){$this->filename=$X;if($WE>0){$this->term_size=$WE;}if($XE>0){$this->offset_size=$XE;}}function close(){if($this->fp){fclose($this->fp);$this->fp=null;}}function initiate($OG='read'){if(empty($this->filename)){$this->fp=tmpfile();return$this;}if(!file_exists($this->filename)){@mkdir(dirname($this->filename),0755,true);touch($this->filename,0666);}$gG=($OG==='read')?'rb':'wb';$this->fp=fopen($this->filename,$gG);return$this;}function isBOM(){return false;}function isStopNearStart(){return false;}function getIndexSize(){$BB=$this->isStopNearStart()?2:1;return$this->term_size*$BB+$this->offset_size;}function tell(){return ftell($this->fp);}function seek($jB,$fD=SEEK_SET){if($fD===SEEK_SET){$jB=abs($jB);}else if($fD===SEEK_END){$jB=-abs($jB);}$D=fseek($this->fp,$jB,$fD);return$D===0;}function truncate($_G=0){return ftruncate($this->fp,$_G);}function read($N=1){if($N===1){return fgetc($this->fp);}else if($N>1){return fread($this->fp,$N);}}function readString($Q=''){while(1){$eD=$this->read();if($eD===false||ord($eD)===0){break;}$Q.=$eD;}return$Q;}function readHex($N=1){$g=bin2hex($this->read($N));if(!$this->isBOM()&&$N>1){$g=implode('',array_reverse(str_split($g,2)));}return$g;}function readInt($N=4){$F='C';if($N===2){$F=$this->isBOM()?'n':'v';}else if($N===4){$F=$this->isBOM()?'N':'V';}else if($N===8){$F=$this->isBOM()?'J':'P';}$xG=unpack($F.'int',$this->read($N));return$xG['int'];}function readNumber($N=3){$g=$this->readHex($N);return intval($g,16);}function readHeaders(){$this->seek(0);$this->index_first=$this->readInt();$this->index_last=$this->readInt();$N=$this->index_last-$this->index_first;$nB=$this->getIndexSize();if($nB>0){$this->index_total=floor($N/$nB)+1;}return$this->index_total;}function write($H){return fwrite($this->fp,$H);}function writeString($Q,$xE=null,$rB=false){$Q.=(is_string($xE)?$xE:chr(0));return$rB?$Q:$this->write($Q);}function writeHex($g,$N=false,$rB=false){if(empty($N)){$N=ceil(strlen($g)/2);}$g=self::padHex($g,$N,'left');if(!$this->isBOM()&&$N>1){$g=implode('',array_reverse(str_split($g,2)));}$dC=@hex2bin($g);return$rB?$dC:$this->write($dC);}function writeInt($H,$N=4,$rB=false){$F='C';if($N===2){$F=$this->isBOM()?'n':'v';}else if($N===4){$F=$this->isBOM()?'N':'V';}else if($N===8){$F=$this->isBOM()?'J':'P';}$dC=pack($F,$H);return$rB?$dC:$this->write($dC);}function writeNumber($H,$N=3,$rB=false){$g=dechex(intval($H));return$this->writeHex($g,$N,$rB);}function writeHeaders($QD=''){$this->seek(0);$this->writeInt($this->index_first);$this->writeInt($this->index_last);if($QD){$this->writeString($QD);}}function writeOffset($jB){return$this->writeNumber($jB,$this->offset_size);}function appendIndexes(Binary&$cC){$this->index_first=$this->tell();$N=$cC->tell();if($N===0){$cC->seek(0,SEEK_END);$N=$cC->tell();}$cC->seek(0);$this->write($cC->read($N));$nB=$this->getIndexSize();$this->index_last=$this->tell()-$nB;return$this->writeNumber($jB,$this->term_size);}function compare($o,$oD,$nB){$this->seek($this->index_first+$o*$nB);$CH=$this->readHex($this->term_size);$this->seek(-$this->term_size,SEEK_CUR);return strcmp($oD,$CH);}static function binSearch(&$c,$U,$oD,$uB,$nB){$KD=0;$EE=$uB;do{$DE=$KD+floor(($EE-$KD)/2);$sD=$c->$U($DE,$oD,$nB);if($sD>0){$KD=$DE;}else if($sD<0){$EE=$DE;}else{break;}}while($EE-$KD>1);return$sD;}static function padHex($g,$N,$MD='left'){if(is_int($g)){$g=dechex($g);}$kG=(strtolower($MD)==='left')?STR_PAD_LEFT:STR_PAD_RIGHT;return str_pad($g,$N*2,'0',$kG);}}use \Cute\Utility\Word;use \DateTime;use \DateTimeZone;class Calendar extends DateTime{protected$timestamp=0;function __construct($FE='now',$XB=null){if(!is_null($XB)){$XB=new DateTimeZone($P);}if(is_numeric($FE)){parent::__construct('now',$XB);$this->setTimestamp($FE);}else{parent::__construct($FE,$XB);}}function speak($JD='%F %T'){$JD=str_replace('%v','{%w}',$JD);$D=strftime($JD,$this->getTimestamp());if(strpos($JD,'{%w}')!==false){static$nG=array('0'=>'日','1'=>'一','2'=>'二','3'=>'三','4'=>'四','5'=>'五','6'=>'六');$D=Word::replaceWith($D,$nG,'{','}');}return$D;}function thisMonthBegin(){return new self($this->format('Y-m-01'));}function thisMonthEnd(){return new self($this->format('Y-m-01').' +1 month -1 day');}function nextMonthBegin(){return new self($this->format('Y-m-01').' +1 month');}static function parseDurtion($RB){if(empty($RB)){return 0;}if(is_int($RB)||is_float($RB)){return$RB;}if(is_string($RB)){$vE=strtolower(substr($RB,-1));if(is_numeric($vE)){return floatval($RB);}$RB=trim(substr($RB,0,-1));$FB=1;switch($vE){case'w':$FB*=7;case'd':$FB*=24;case'h':$FB*=60;case'm':$FB*=60;}return floatval($RB)*$FB;}}static function getSpringDay($fB){static$pE=array('20'=>4.6295,'21'=>3.87,'22'=>4.15);$fB=intval($fB);$kE=strval(ceil($fB/100));$jE=$fB%100;$pG=array_key_exists($kE,$pE)?$pE[$kE]:4;return floor($jE*0.2422+$pG)-floor(($jE-1)/4);}function getBirthAnimalIndex(){$fB=intval($this->format('Y'));$ED=intval($this->format('m'));$JE=intval($this->format('d'));$IE=$ED*100+$JE;if($IE<200+self::getSpringDay($fB)){$fB-=1;}$f=($fB-1900)%12;return$f;}function getHoroscopeIndex(){$TF=array(120,219,321,420,521,622,723,823,923,1024,1123,1222,);$ED=intval($this->format('m'));$JE=intval($this->format('d'));$IE=$ED*100+$JE;$f=$ED-1;if($IE<$TF[$f]){$f=($f==0)?11:$f-1;}return$f;}}class Inflect{protected static$plural=array('/(quiz)$/i'=>"$1zes",'/^(ox)$/i'=>"$1en",'/([m|l])ouse$/i'=>"$1ice",'/(matr|vert|ind)ix|ex$/i'=>"$1ices",'/(x|ch|ss|sh)$/i'=>"$1es",'/([^aeiouy]|qu)y$/i'=>"$1ies",'/(hive)$/i'=>"$1s",'/(?:([^f])fe|([lr])f)$/i'=>"$1$2ves",'/(shea|lea|loa|thie)f$/i'=>"$1ves",'/sis$/i'=>"ses",'/([ti])um$/i'=>"$1a",'/(tomat|potat|ech|her|vet)o$/i'=>"$1oes",'/(bu)s$/i'=>"$1ses",'/(alias)$/i'=>"$1es",'/(octop)us$/i'=>"$1i",'/(ax|test)is$/i'=>"$1es",'/(us)$/i'=>"$1es",'/s$/i'=>"s",'/$/'=>"s");protected static$singular=array('/(quiz)zes$/i'=>"$1",'/(matr)ices$/i'=>"$1ix",'/(vert|ind)ices$/i'=>"$1ex",'/^(ox)en$/i'=>"$1",'/(alias)es$/i'=>"$1",'/(octop|vir)i$/i'=>"$1us",'/(cris|ax|test)es$/i'=>"$1is",'/(shoe)s$/i'=>"$1",'/(o)es$/i'=>"$1",'/(bus)es$/i'=>"$1",'/([m|l])ice$/i'=>"$1ouse",'/(x|ch|ss|sh)es$/i'=>"$1",'/(m)ovies$/i'=>"$1ovie",'/(s)eries$/i'=>"$1eries",'/([^aeiouy]|qu)ies$/i'=>"$1y",'/([lr])ves$/i'=>"$1f",'/(tive)s$/i'=>"$1",'/(hive)s$/i'=>"$1",'/(li|wi|kni)ves$/i'=>"$1fe",'/(shea|loa|lea|thie)ves$/i'=>"$1f",'/(^analy)ses$/i'=>"$1sis",'/((a)naly|(b)a|(d)iagno|(p)arenthe|(p)rogno|(s)ynop|(t)he)ses$/i'=>"$1$2sis",'/([ti])a$/i'=>"$1um",'/(n)ews$/i'=>"$1ews",'/(h|bl)ouses$/i'=>"$1ouse",'/(corpse)s$/i'=>"$1",'/(us)es$/i'=>"$1",'/s$/i'=>"");protected static$irregular=array('move'=>'moves','foot'=>'feet','goose'=>'geese','sex'=>'sexes','child'=>'children','man'=>'men','tooth'=>'teeth','person'=>'people');protected static$uncountable=array('sheep','fish','deer','series','species','money','rice','information','equipment');protected static$abbreviations=array('AD','API','B2B','B2C','C2C','CEO','CFO','COO','CTO','DB','DSA','GEO','GPS','HTML','HTTP','ID','IO','IP','IQ','MD5','MTV','MV','MVC','NBA','OK','P2P','PC','PV','PDF','PHP','QQ','RMB','RSA','SOHO','SHA','SQL','TV','UI','URI','URL','USA','VIP','WC','WEB','WAP','WIFI','XML',);static function pluralize($Q){if(in_array(strtolower($Q),self::$uncountable))return$Q;foreach(self::$irregular as$j=>$D){$j='/'.$j.'$/i';if(preg_match($j,$Q))return preg_replace($j,$D,$Q);}foreach(self::$plural as$j=>$D){if(preg_match($j,$Q))return preg_replace($j,$D,$Q);}return$Q;}static function singularize($Q){if(in_array(strtolower($Q),self::$uncountable))return$Q;foreach(self::$irregular as$D=>$j){$j='/'.$j.'$/i';if(preg_match($j,$Q))return preg_replace($j,$D,$Q);}foreach(self::$singular as$j=>$D){if(preg_match($j,$Q))return preg_replace($j,$D,$Q);}return$Q;}static function pluralizeIf($BB,$Q){if($BB==1)return"1 $Q";else return$BB." ".self::pluralize($Q);}static function camelize($Q,$SF=false){$kC=explode('_',$Q);if($SF){$oE=count($kC)-1;$kC[$oE]=self::pluralize($kC[$oE]);}foreach($kC as&$p){$p=ucfirst($p);if(strlen($p)>1&&strlen($p)<=4){$NC=strtoupper($p);if(in_array($NC,self::$abbreviations)){$p=$NC;}}}return implode('',$kC);}static function flatten($Q,$VF='_'){$j='/([A-Z][A-Z0-9]*(?=$|[A-Z][a-z0-9])|[A-Za-z][a-z0-9]+)/';preg_match_all($j,$Q,$bB);return strtolower(implode($VF,$bB[0]));}}class Polling{protected$channels=array();function __construct(array$WF=array()){$this->channels=$WF;}function randRoll(){static$f=0;if($f===0){shuffle($this->channels);$f=count($this->channels);}return$this->channels[--$f];}function roundRobin(&$DD,$cF=1){if(count($this->channels)<2){return current($this->channels);}$CD=null;$nE=0;$AE=0;foreach($this->channels as$WB=>$h){$KC=$h['weight']*$cF;$AE+=$KC;$h['last_value']+=$KC;if(empty($DD)&&$h['last_value']>=$nE){$CD=$WB;$nE=$h['last_value'];}}if(!empty($DD)){$this->channels[$DD]['last_value']-=$AE;return$this->channels[$DD];}else if(!is_null($CD)){$this->channels[$CD]['last_value']-=$AE;return$this->channels[$CD];}}}class Word{static$digits='0123456789';static$chars='〇一二三四五六七八九十百千万亿';static$caps='零壹贰叁肆伍陆柒捌玖拾佰仟萬億';protected$content='';function __construct($e=''){$this->content=$e;}static function hasNonASCII($Q){return preg_match('/[^\x20-\x7f]/',$Q);}static function mbStrSplit($Q){$vD=self::hasNonASCII($Q)?3:1;return str_split($Q,$vD);}static function mbStrtr($Q,$uD,$tD){$uD=self::mbStrSplit($uD);$tD=self::mbStrSplit($tD);return str_replace($uD,$tD,$Q);}static function num2char($GF,$NC=false){$IF=$NC?self::$caps:self::$chars;return self::mbStrtr(strval($GF),self::$digits,$IF);}static function spell($FD,$NC=false){$NF=new\NumberFormatter('zh_CN',\NumberFormatter::SPELLOUT);$wD=$NF->format($FD);if($NC){$wD=self::mbStrtr($wD,self::$chars,self::$caps);}return$wD;}static function replaceWith($e,array$T=array(),$s='',$rE=''){if(empty($T)){return$e;}if(empty($s)&&empty($rE)){$xD=&$T;}else{$xD=array();foreach($T as$C=>&$E){$xD[$s.$C.$rE]=$E;}}$e=strtr($e,$xD);return$e;}static function randHash($Y=6){$Y=$Y>32?32:$Y;$YF=md5(mt_rand().time());$EG=substr($YF,0,$Y);return$EG;}static function randString($Y=6,$eF=2,$jC=''){if(empty($jC)){$jC='abcdefghijkmnpqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ23456789';}srand((float)microtime()*1000000);$hE='';$GD=ceil($Y/$eF);while($Y>0){$jC=str_shuffle($jC);$hE.=substr($jC,0,$GD);$Y-=$GD;$GD=min($Y,$GD);}return$hE;}function fetchFirstURL(){if(preg_match('/^http[^\x23-\x76]/i',$this->content,$bB)){return$bB[1];}}function getNumbers($uF=true){$FB=preg_match_all('/[\d.]+/',$this->content,$bB);if($FB===0||$FB===false){return false;}$FD=implode(current($bB));return$uF?intval($FD):$FD;}function ver2int(){$QD=$this->getNumbers(false);$zD=array_map('intval',explode('.',$QD));$zD=array_pad($zD,3,0);return intval(vsprintf('%d%02d%02d',$zD));}}}
namespace Cute\View{class Compiler{protected$env=null;protected$source_dir='';protected$compiled_dir='';function __construct(){\app()->import('Twig',VENDOR_ROOT.'/Twig/lib');$this->env=new\Twig_Environment();}function addFunction($A,$yF=null){$zF=new\Twig_SimpleFunction($A,$yF);return$this->env->addFunction($A,$zF);}function setSourceDir($gC){$this->source_dir=rtrim($gC,' /\\');if(!file_exists($this->source_dir)){@mkdir($this->source_dir,0777,true);}$CG=new\Twig_Loader_Filesystem(array($this->source_dir));$this->env->setLoader($CG);return$this;}function setCompiledDir($l){$l=rtrim($l,' /\\');if($this->compiled_dir!==$l){$this->compiled_dir=$l;}if(!file_exists($this->compiled_dir)){@mkdir($this->compiled_dir,0777,true);}return$this;}function isSourceRelational(){return true;}function compileFile($_B,$hC,array$T=array()){$e=$this->env->loadTemplate($_B)->render($T);file_put_contents($hC,$e,LOCK_EX);}function compileTpl($m,$_B='',array$T=array()){$m=ltrim(str_replace('\\','/',$m),'/');if(empty($_B)){$_B=$this->source_dir.'/'.$m;}$hC=$this->compiled_dir.'/'.$m;$l=dirname($hC);if(!is_dir($l)){mkdir($l,0777,true);}if($this->isSourceRelational()){$_B=substr($_B,strlen($this->source_dir)+1);}$this->compileFile($_B,$hC,$T);return$hC;}function compileAll($V=false,array$T=array()){if(is_null($V)||$V===false){$V=$this->source_dir;}else{$V=rtrim(str_replace('\\','/',$V),'/');}$BB=0;$sF=scandir($V);foreach($sF as$wC){if($wC==='.'||$wC==='..'){continue;}$ID=$V.'/'.$wC;if(is_dir($ID)){$this->compileAll($ID);}else{$m=substr($ID,strlen($this->source_dir));$this->compileTpl($m,$ID,$T);$BB++;}}return$BB;}}use \Cute\View\Compiler;class Templater{var$compiler=null;var$globals=array();protected$source_dir='';protected$extend_files=array();protected$template_blocks=array();protected$current_block='';function __construct($gC,$l=false){$this->setSourceDir($gC);if($l){$this->setCompileDir($l);}}function setSourceDir($gC){$this->source_dir=rtrim($gC,' /\\');if(!file_exists($this->source_dir)){@mkdir($this->source_dir,0777,true);}}function setCompileDir($l){if(is_null($this->compiler)){$this->compiler=new Compiler();}$l=rtrim($l,' /\\');$this->compiler->setSourceDir($this->source_dir);$this->compiler->setCompiledDir($l);$this->setSourceDir($l);return$this;}function updateGlobals(array$jF){if(func_num_args()===1){$this->globals=array_merge($this->globals,$jF);}else{$B=func_get_args();array_unshift($B,$this->globals);$this->globals=exec_function_array('array_merge',$B);}return$this;}function updateFunctions(array$iF){$hF=$this->compiler;foreach($iF as$A=>$a){$hF->addFunction($A,$a);}}function prepareFile($m){if($this->compiler){return$this->compiler->compileTpl($m,'',$this->globals);}else{return$this->source_dir.'/'.$m;}}function render($m,array$T=array()){extract($this->globals);extract($T);include$this->prepareFile($m);if(!empty($this->extend_files)){$fF=array_pop($this->extend_files);foreach($this->extend_files as$_){include$this->prepareFile($_);}extract($this->template_blocks);include$this->prepareFile($fF);}}function extendTpl($m){array_push($this->extend_files,$m);}function includeTpl($m,array$T=array()){extract($this->globals);extract($T);ob_start();include$this->prepareFile($m);$gF=trim(ob_get_clean());echo$gF;}function blockStart($kF='content'){$this->current_block=$kF;ob_start();}function blockEnd(){$lF=trim(ob_get_clean());$this->template_blocks[$this->current_block]=$lF;}}}
namespace Cute\Widget{use \Cute\Utility\Word;class Captcha{const ENCRYPT_SALT='captcha_code_salt';const FILENAME_PREFIX='cc_';var$phrase_size=6;var$width=80;var$height=30;var$font=null;var$finger_print=null;protected$builder=null;protected$savedir='';protected$saveurl='';function __construct($i=''){\app()->import('Gregwar',VENDOR_ROOT);$this->builder=new\Gregwar\Captcha\CaptchaBuilder();if(!empty($i)){$this->phrase_size=strlen($i);$this->builder->setPhrase($i);}else{$this->refresh();}$this->savedir=APP_ROOT.'/public/assets/captcha';@mkdir($this->savedir,0755,true);$this->saveurl=app()->getAssetURL().'/captcha';}static function newInstance($qF=6,$vD=80,$pF=30,$oF=null,$mF=null){$dB=new self();$dB->phrase_size=$qF;$dB->width=$vD;$dB->height=$pF;$dB->font=$oF;$dB->finger_print=$mF;return$dB;}protected static function encrypt($i){return md5(strtolower($i).self::ENCRYPT_SALT);}static function clean($V,$yD=0.3,$TB=60){$JG=mt_rand(1,10000)/10000;if($yD<=0||$yD>=1||$JG<=$yD){$_F=time()-$TB;$WD=glob($V.'cc_*.jpg');foreach($WD as$_){if(fileatime($_)<$_F){unlink($_);}}}}function refresh(){$i=Word::randString($this->phrase_size);$this->builder->setPhrase($i);return$this;}function build(array$B=array()){$QG=array($this->width,$this->height,$this->font,$this->finger_print,);exec_method_array($this->builder,'build',$B+$QG);return$this->builder;}function show(){@session_start();$i=$this->builder->getPhrase();$_SESSION['phrase']=self::encrypt($i);@header('Content-Type: image/jpeg');$this->build(func_get_args());return$this->builder->output();}function save(){self::clean($this->savedir,0.3,60);$X=uniqid(self::FILENAME_PREFIX).'.jpg';$this->build(func_get_args());$this->builder->save($this->savedir.'/'.$X);$i=$this->builder->getPhrase();$n=$this->saveurl.'/'.$X.'#'.self::encrypt($i);die($n);}}use \Cute\Cache\Subject;class Counter extends Subject{protected$name='';protected$value=0;protected$maxium=0;function __construct($A,$E=0,$GG=0){$this->name=$A;$this->value=intval($E);$this->maxium=intval($GG);}function setCache($I='\\Cute\\Cache\\RedisCache'){$HD=new$I($this->name);$HD->share($this->value,'intval');$HD->initiate()->readData();$this->attach($HD);return$HD;}function findCaches(){return$this->observers;}function increase($FG=1){$this->value+=$FG;if($this->maxium>0){$this->value=$this->value%$this->maxium;}$this->notify();return$this->value;}}}