<?php
namespace{defined('VENDOR_ROOT')or define('VENDOR_ROOT',APP_ROOT.'/vendor');defined('APP_CLASS')or define('APP_CLASS','\\Cute\\Website');defined('SQL_VERBOSE')or define('SQL_VERBOSE',true);defined('ERROR_LEVEL')or define('ERROR_LEVEL',E_ALL&~E_DEPRECATED&~E_NOTICE);@error_reporting(ERROR_LEVEL);if(!class_exists('\\Cute\\Importer')){require_once SRC_ROOT.'/Cute/Importer.php';}function app($dE=''){static$q=null;if(is_null($q)&&$dE){$TE=\Cute\Importer::getInstance();$TE->addNamespace('Cute',SRC_ROOT);$FC=\Cute\Base\Storage::newInstance($dE);$I=constant('APP_CLASS');$q=new$I($FC);$q->install($TE,array('import'=>'addNamespace'));$q->initiate();}return$q;}function starts_with($yC,$jC){return strncmp($yC,$jC,strlen($jC))===0;}function ends_with($yC,$jC){$vD=strlen($jC);return$vD===0||(strlen($yC)>=$vD&&substr_compare($yC,$jC,-$vD)===0);}function convert($l,$DC='UTF-8'){$DC=strtoupper($DC);if(function_exists('mb_detect_encoding')){return mb_detect_encoding($l,$DC,true)?$l:mb_convert_encoding($l,$DC,'UTF-8, GBK');}else if(function_exists('iconv')){$AG=$DC==='UTF-8'?'GBK':'UTF-8';return iconv($AG,$DC.'//IGNORE',$l);}}function b64decode($l){if(preg_match('!([A-Za-z0-9+/= ]+)!',$l,$VB)){$l=$VB[1];}return base64_decode($l);}function exec_function_array($c,array$B=array()){switch(count($B)){case 0:return$c();case 1:return$c($B[0]);case 2:return$c($B[0],$B[1]);case 3:return$c($B[0],$B[1],$B[2]);case 4:return$c($B[0],$B[1],$B[2],$B[3]);case 5:return$c($B[0],$B[1],$B[2],$B[3],$B[4]);default:if(is_object($c)){$BB=new ReflectionMethod($c,'__invoke');return$BB->invokeArgs($c,$B);}else if(is_callable($c)){$BB=new ReflectionFunction($c);return$BB->invokeArgs($B);}}}function exec_method_array($NB,$X,array$B=array()){if(is_object($NB)){switch(count($B)){case 0:return$NB->{$X}();case 1:return$NB->{$X}($B[0]);case 2:return$NB->{$X}($B[0],$B[1]);case 3:return$NB->{$X}($B[0],$B[1],$B[2]);case 4:return$NB->{$X}($B[0],$B[1],$B[2],$B[3]);case 5:return$NB->{$X}($B[0],$B[1],$B[2],$B[3],$B[4]);}}if(method_exists($NB,$X)){$BB=new ReflectionMethod($NB,$X);if($BB->isPublic()&&!$BB->isAbstract()){if($BB->isStatic()){return$BB->invokeArgs(null,$B);}else{return$BB->invokeArgs($NB,$B);}}}}function exec_construct_array($I,array$B=array()){switch(count($B)){case 0:return new$I();case 1:return new$I($B[0]);case 2:return new$I($B[0],$B[1]);case 3:return new$I($B[0],$B[1],$B[2]);case 4:return new$I($B[0],$B[1],$B[2],$B[3]);case 5:return new$I($B[0],$B[1],$B[2],$B[3],$B[4]);default:if(class_exists($I)){$BB=new ReflectionClass($I);return$BB->newInstanceArgs($B);}}}}
namespace Cute{use \Cute\Importer;use \Cute\Factory;use \Cute\Base\Storage;abstract class Application{protected$shortcuts=array();function __construct(Storage&$FC){$this->install($FC,array('getConfig'));$cF=new Factory($FC);$this->install($cF,array('load'));}function initiate(){return$this;}function install($eD,array$VF){foreach($VF as$HD=>$X){$HD=strtolower(is_numeric($HD)?$X:$HD);$this->shortcuts[$HD]=array($eD,$X);}return$this;}function __call($A,$B){$A=strtolower($A);if(isset($this->shortcuts[$A])){list($eD,$X)=$this->shortcuts[$A];return exec_method_array($eD,$X,$B);}}abstract function run();}abstract class Command{protected$app=null;protected$args=array();protected$pid=0;var$cmdfile='';function __construct($q,$TD,array$YB=array()){$this->app=$q;$this->cmdfile=$TD;list($B,$MB)=self::parse($YB);$this->args=array_merge($B,$MB);}function __clone(){$this->args=array_change_key_case($this->args);}function __toString(){$B=array();foreach($this->args as$C=>$E){if(is_numeric($C)){$B[]=$E;}else if($E===true){$B[]=strlen($C)===1?" -$C":" --$C";}else{$B[]=" --$C='$E'";}}$tB=$this->cmdfile;$tB.=' '.substr(__CLASS__,0,-strlen('Command'));$tB.=' '.implode(' ',$B);return$tB;}static function parse(array$YB){$B=array();$MB=array();foreach($YB as$HC=>$DB){$DB=trim($DB);if($DB==='--'){$B[]=implode(' ',array_slice($YB,$HC+1));break;}if(substr($DB,0,1)!=='-'){$B[]=$DB;}else if(substr($DB,1,1)!=='-'){$UC=str_split(substr($DB,1));foreach($UC as$C){$MB[$C]=true;}}else{if(($aE=strpos($DB,'='))!==false){$C=substr($DB,2,$aE-2);$E=substr($DB,$aE+1);}else{$C=substr($DB,2);$E=true;}if(!array_key_exists($C,$MB)){$MB[$C]=$E;}else{if(!is_array($MB[$C])){$MB[$C]=array($MB[$C]);}$MB[$C][]=$E;}}}return array($B,$MB);}function addArg($E,$C=false){if($C===false||is_null($C)){$this->args[]=$E;}else{$this->args[$C]=$E;}return$this;}function getArg($C=false,$O=null){if($C===false||is_null($C)){return$this->args;}if(isset($this->args[$C])){return$this->args[$C];}else{return$O;}}function popArg($C){if($C===false||is_null($C)){return;}if(isset($this->args[$C])){$E=$this->args[$C];unset($this->args[$C]);return$E;}}function readPid($IC=null){if(!is_null($IC)&&is_readable($IC)){$jB=trim(file_get_contents($IC));if(is_numeric($jB)){$this->pid=$jB;}}return$this->pid;}function isRunning(){if($this->pid>0){try{$D=shell_exec(sprintf('ps %d',$this->pid));return substr_count($D,"\n")>=2;}catch(\Exception$OB){}}return false;}function wait($hF=0.1){while($this->isRunning()){usleep($hF*1000000);}return true;}function stop(){if($this->pid>0&&$this->isRunning()){return posix_kill($this->pid,SIGTERM);}}function fork($IC=null,array$SC=array()){$EC=clone$this;$EC->args=array_merge($EC->args,$SC);$tB=strval($EC);$q=$EC->app;if($q->outfile!==1){$tB.=' > '.$q->getFileSymbol($q->outfile,true);}if($q->errfile!==2){$tB.=' 2 > '.$q->getFileSymbol($q->errfile,true);}if($jB=shell_exec($tB.' & echo $!')){$jB=trim($jB);$EC->pid=intval($jB);if(!is_null($IC)){file_put_contents($IC,$jB.PHP_EOL,LOCK_EX);}}return$EC->pid;}function loop($y=1,$XC=0,$VE=0){if($XC>0){$XC=intval($XC)+time();}do{$this->execute();if($y>0){$y--;}if($VE>0){usleep($VE*1000000);}}while($y===0||$XC<0||$XC<time());}abstract function execute();}use \Cute\Application;use \Cute\Command;use \Cute\Utility\Inflect;class Console extends Application{const STDIN='php://stdin';const STDOUT='php://stdout';const STDERR='php://stderr';const DEVNULL='/dev/null';const COLOR_BLACK=90;const COLOR_RED=91;const COLOR_GREEN=92;const COLOR_YELLOW=93;const COLOR_BLUE=94;const COLOR_MAGENTA=95;const COLOR_CYAN=96;const COLOR_WHITE=97;protected$color=false;var$outfile=1;var$errfile=null;function initiate(){return$this;}static function getFileSymbol($u,$wD=false){if(is_null($u)){return self::DEVNULL;}else if(is_int($u)){if($u===0){return$wD?'&0':self::STDIN;}else if($u===1){return$wD?'&1':self::STDOUT;}else if($u===2){return$wD?'&2':self::STDERR;}}return strval($u);}static function appendTo($fB,$iB=false,$yB=null){if(empty($yB)&&$yB!==0){return 0;}if(is_int($yB)&&is_int($iB)){$fB=sprintf("\033[%dm%s\033[%dm",$iB,$fB,0);}$yB=self::getFileSymbol($yB);return file_put_contents($yB,$fB,FILE_APPEND|LOCK_EX);}function setColor($iB){if(is_string($iB)){$iB='COLOR_'.strtoupper($iB);$this->color=constant(__CLASS__.'::'.$iB);}return$this;}function write($fB){if(func_num_args()>1){$fB=exec_function_array('sprintf',func_get_args());}return self::appendTo($fB,$this->color,$this->outfile);}function writeln($fB){$B=func_get_args();$B[0].=PHP_EOL;return exec_method_array($this,'write',$B);}function mount($a){$gE=func_get_args();foreach($gE as&$a){$a=rtrim($a,DIRECTORY_SEPARATOR);}$XD=PATH_SEPARATOR.implode(PATH_SEPARATOR,$gE);set_include_path(get_include_path().$XD);return$this;}function run(){if(php_sapi_name()!=='cli'){return;}if($_SERVER['argc']<2){return;}$YB=$_SERVER['argv'];$TD=array_shift($YB);$A=array_shift($YB);$I=Inflect::camelize($A).'Command';@require_once$I.'.php';if(class_exists($I)){$b=new$I($this,$TD,$YB);return$b->execute();}}}class Factory{protected$storage=null;protected$objects=array();function __construct(Storage&$FC){$this->storage=$FC;}function normalize($I){return rtrim($I,'\\');}function create($I,$A='default'){$I=$this->normalize($I);$KD=$this->storage->getSectionOnce($I);$H=$KD->getArray($A);if($A!=='default'){$H=array_merge($KD->getArray('default'),$H);}if(class_exists($I)){foreach($H as$C=>&$E){if(starts_with($C,'\\')){$E=$this->load($C,$E);}}return exec_construct_array($I,array_values($H));}}function load($I,$A='default'){$I=$this->normalize($I);if(!isset($this->objects[$I])){$this->objects[$I]=array();if(!isset($this->objects[$I][$A])){$this->objects[$I][$A]=$this->create($I,$A);}}return$this->objects[$I][$A];}}class Handler{protected$app=null;protected$succor=null;function __construct($GC=null){$this->app=app();$this->succor=$GC;}function init($X){return method_exists($this,$X)?$X:'';}function __invoke(){$X=$this->app->getMethod();$B=func_get_args();if($X=$this->init($X)){return exec_method_array($this,$X,$B);}else if($this->succor){return exec_function_array($this->succor,$B);}else{return$this->app->abort(403);}}}if(!function_exists('trait_exists')){function trait_exists($I,$sC){return false;}}final class Importer{private static$instance=null;private$classes=array();private$namespaces=array();private function __construct(){}static function getInstance(){if(is_null(self::$instance)){self::$instance=new self();self::$instance->register();}return self::$instance;}static function exists($I,$sC=true){return class_exists($I,$sC)||interface_exists($I,$sC)||trait_exists($I,$sC);}function autoload($I){$I=trim($I,'\\_');if(isset($this->classes[$I])){require_once$this->classes[$I];return self::exists($I,false);}$jF=$this->checkNamespace($I);return($jF===true);}function register(){return spl_autoload_register(array($this,'autoload'));}function addClass($W,$I){$SE=func_get_args();$W=array_shift($SE);if(is_readable($W)){foreach($SE as$I){$this->classes[trim($I,'\\')]=$W;}}ksort($this->classes);return$this;}function addNamespaceStrip($r,$T){$r=trim($r,'\\');$T=rtrim($T,'\\/');$this->namespaces[$r]=$T;ksort($this->namespaces);return$this;}function addNamespace($r,$T){$r=trim($r,'\\');$bB=strtok($r,'\\_');$T=rtrim($T,'\\/').DIRECTORY_SEPARATOR.$bB;return$this->addNamespaceStrip($r,$T);}function checkNamespace($I){$bB=strtok($I,'\\_');$Z=strlen($bB)+1;if(isset($this->namespaces[$bB])){$a=$this->namespaces[$bB];}else if(isset($this->namespaces[''])){$a=$this->namespaces[''];}else{return false;}$_=$a.DIRECTORY_SEPARATOR;$_.=str_replace(array('\\','_'),DIRECTORY_SEPARATOR,substr($I,$Z));if(file_exists($_.'.php')){require_once$_.'.php';if(self::exists($I,false)){return true;}}while($bB){$a.=DIRECTORY_SEPARATOR.$bB;if(file_exists($a.'.php')){require_once$a.'.php';if(self::exists($I,false)){return true;}}if(!file_exists($a)){return false;}$bB=strtok('\\_');}}}use \Cute\Context\Router;class Website extends Application{protected$method='';var$url='';var$rule='';function initiate(){$pB=Router::getCurrent();$this->install($pB,array('dispatch','abort','redirect'));$this->install('\\Cute\\Context\\Input',array('getClientIP','input'=>'getInstance',));return$this;}function route($a,$x){$pB=Router::getCurrent();return$pB->route($a,$x);}function mount($v,$hC='*.php'){$pB=Router::getCurrent();$pB->mount($v,$hC);return$this;}function getMethod(){if(empty($this->method)){$wB=$this->input('SERVER');$X=$wB->request('_method','');if(empty($X)){$X=$wB->get('REQUEST_METHOD','GET');}$this->method=strtolower($X);}return$this->method;}function run(){$UG=$this->getConfig('route_key','r');$a=$this->input('GET')->get($UG,'/');try{$FD=$this->dispatch($a);$GC=null;foreach($FD['handlers']as$x){if(empty($x)){continue;}if(is_string($x)&&class_exists($x,true)){$x=new$x($GC);}if($x&&is_callable($x)){$GC=&$x;}}if($GC){$this->url=$FD['url'];$this->rule=$FD['rule'];$EE=exec_function_array($GC,$FD['args']);}}catch(\Exception$OB){$EE=strval($OB);}return die($EE);}}}
namespace Cute\Base{trait Deferring{protected$aG=false;function defer(){register_shutdown_function(function($bF){$bF->__destruct();},$this);}function __destruct(){if($this->closed===false){$this->close();}$this->closed=true;}function close(){}}trait Mocking{protected$ID=null;private function __construct(&$ID=null){$this->inner=$ID;}static function mock(&$ID=null){$cD=new self($ID);return$cD->isReady()?$cD->inner:$cD;}function __call($A,$YD){return false;}function __set($A,$E){return false;}function __get($A){return;}function isReady(){return!is_null($this->inner);}}use \ArrayObject;class Storage extends ArrayObject{const CONFIG_SECTION_NAME='configs';function __construct($wB=array(),$YF=ArrayObject::ARRAY_AS_PROPS){parent::__construct($wB,$YF);}static function newInstance($W,$YE=false){$W.=empty($YE)?'':$YE;assert(is_readable($W));return new self(include$W);}function getItem($A,$O=null){$UB=$this->offsetGet($A);return is_null($UB)?$O:$UB;}function getArray($A,array$O=array()){$H=$this->getItem($A);return is_array($H)?$H:$O;}function getSection($A){$H=$this->getArray($A,array());return new self($H);}function getSectionOnce($A){$H=$this->getItem($A);if(!($H instanceof self)){$H=new self($H);$this->offsetSet($A,$H);}return$H;}function getConfig($A,$O=null){$KD=$this->getSectionOnce(self::CONFIG_SECTION_NAME);return$KD->getItem($A,$O);}}}
namespace Cute\Cache{use \SplSubject;use \SplObserver;abstract class BaseCache implements SplObserver{protected$data=null;protected$ttl=0;protected$coerce=false;function share(&$H,$tD=false,$qF=0){$this->data=&$H;$this->coerce=$tD;$this->ttl=intval($qF);return$this;}function update(SplSubject$cG=null){if($tD=$this->coerce){$this->data=$tD($this->data);}$this->writeData();}abstract function initiate();abstract function readData();abstract function removeData();abstract function writeData($MC=false);}class FileCache extends BaseCache{protected$filename='';protected$ext='.php';function __construct($A,$T=false){if(empty($T)){$T=sys_get_temp_dir();}else{$T=rtrim($T,DIRECTORY_SEPARATOR);@mkdir($T,0755,true);}$this->filename=$T.DIRECTORY_SEPARATOR.$A.$this->ext;}function initiate(){if(!is_readable($this->filename)){touch($this->filename);}return$this;}function readData(){$P=filesize($this->filename);if($P>0){$this->data=(include$this->filename);}return$this->data;}function writeData($MC=false){$d="<?php \nreturn ".var_export($this->data,true).";\n";$P=file_put_contents($this->filename,$d);return$P&&$P>0;}function removeData(){if(file_exists($this->filename)){return unlink($this->filename);}}}class MemCache extends BaseCache{use\Cute\Base\Deferring;const MEMCACHE_WEIGHT_UNIT=12;protected$name='';protected$memcache=null;protected$host='';protected$port=0;protected$persistent=false;protected$weight=1;function __construct($A,$vB='127.0.0.1',$JB=11211,$mF=false,$BC=1){$this->name=$A;$this->host=$vB;$this->port=intval($JB);$this->persistent=$mF;$this->weight=intval($BC);}function initiate(){if(extension_loaded('memcache')){$this->memcache=new\Memcache();try{$this->connect();}catch(\Exception$OB){$this->memcache=null;}}return$this;}function connect(){$BC=intval($this->weight)*self::MEMCACHE_WEIGHT_UNIT;$this->memcache->addServer($this->host,$this->port,$this->persistent,$BC);}function close(){$this->memcache->close();}function readData(){$H=$this->memcache->get($this->name);if($H!==false){return$H;}}function writeData($MC=false){return$this->memcache->set($this->name,$this->data,MEMCACHE_COMPRESSED,$this->ttl);}function removeData(){if($this->memcache->exists($this->name)){return$this->memcache->delete($this->name);}}}class RedisCache extends BaseCache{use\Cute\Base\Deferring;protected$name='';protected$redis=null;protected$host='';protected$port=0;protected$params=array('persistent'=>false,'socket'=>null,'serializer'=>null,);function __construct($A,$vB='127.0.0.1',$JB=6379,array$M=array()){$this->name=$A;$this->host=$vB;$this->port=intval($JB);if(isset($M['socket'])&&is_string($M['socket'])){if(starts_with($M['socket'],'unix://')){$M['socket']=substr($M['socket'],7);}}$this->params=array_merge($this->params,$M);}function initiate(){if(extension_loaded('redis')){$this->redis=new\Redis();try{$this->connect();}catch(\Exception$OB){$this->redis=null;}}return$this;}function connect(){if(isset($this->params['socket'])){$B=array($this->params['socket']);}else{$B=array($this->host,$this->port);}$rF=$this->params['persistent']?'pconnect':'connect';exec_method_array($this->redis,$rF,$B);if($aD=$this->params['serializer']){$aD=constant('\\Redis::SERIALIZER_'.$aD);$this->redis->setOption(\Redis::OPT_SERIALIZER,$aD);}}function close(){$this->redis->close();}function readData(){$H=$this->redis->get($this->name);if($H!==false){$this->data=$H;return$this->data;}}function writeData($MC=false){return$this->redis->set($this->name,$this->data,$this->ttl);}function removeData(){if($this->redis->exists($this->name)){return$this->redis->del($this->name);}}}class Subject implements SplSubject{protected$observers=array();function attach(SplObserver$rC){$this->observers[]=$rC;}function detach(SplObserver$rC){$C=array_search($rC,$this->observers,true);if($C){unset($this->observers[$C]);}}function notify(){foreach($this->observers as&$rC){$rC->update($this);}}}class TSVCache extends FileCache{protected$delimiter='';protected$ext='.csv';function __construct($A,$T=false,$JG="\t"){parent::__construct($A,$T);$this->delimiter=$JG;}function readData(){$this->data=array();$EB=fopen($this->filename,'rb');if($EB===false){return$this->data;}do{$NE=fgetcsv($EB,0,$this->delimiter);if($NE===false){break;}$this->data[]=$NE;}while(1);fclose($EB);return$this->data;}function writeData($MC=false){$ZD=0;$EB=fopen($this->filename,'wb');if($EB===false){return$ZD;}foreach($this->data as$f){$ZD+=fputcsv($EB,$f,$this->delimiter);}fclose($EB);return$ZD;}}class TextCache extends FileCache{protected$ext='.txt';function encode($H){return$H;}function decode($H){return$H;}function readData(){$P=filesize($this->filename);if($P>0){$d=file_get_contents($this->filename);$this->data=$this->decode($d);}return$this->data;}function writeData($MC=false){$d=$this->encode($this->data);$P=file_put_contents($this->filename,$d,LOCK_EX);return$P&&$P>0;}}class XSONCache extends TextCache{protected$ext='.json';function encode($H){return json_encode($H);}function decode($H){return json_decode($H);}}class YAMLCache extends TextCache{protected$ext='.yml';function encode($H){if(extension_loaded('yaml')){return yaml_emit($H,YAML_UTF8_ENCODING,YAML_LN_BREAK);}else if(class_exists('sfYamlDumper',true)){$uE=new\sfYamlDumper();return$uE->dump($H);}}function decode($H){if(extension_loaded('yaml')){return yaml_parse($H);}else if(class_exists('sfYamlParser',true)){$fF=new\sfYamlParser();return$fF->parse($H);}}}}
namespace Cute\Context{class Input{protected static$instances=array();protected static$client_ip='-';protected$input_type=null;protected$data=array();protected$done=false;protected function __construct($QB='POST'){$this->input_type=constant('INPUT_'.$QB);if($QB==='REQUEST'){$this->raw_data=$_REQUEST;}assert(!is_null($this->input_type));}function __call($A,$YD){if(starts_with($A,'get')&&count($YD)>0){$F=substr($A,3);@list($C,$O)=$YD;return$this->get($C,$O,$F);}}static function getInstance($QB='POST'){$QB=strtoupper($QB);if(!isset(self::$instances[$QB])){$aB=new static($QB);self::$instances[$QB]=$aB;}return self::$instances[$QB];}static function request($C,$O=null,$F=false){$BF=self::getInstance('POST');$E=$BF->get($C,$O,$F);if($E===$O){$CF=self::getInstance('GET');$E=$CF->get($C,$O,$F);}return$E;}static function getClientIP(){if(strlen(self::$client_ip)>=7){return self::$client_ip;}$UC=array('HTTP_CLIENT_IP','HTTP_X_REAL_IP','HTTP_X_FORWARDED_FOR','HTTP_X_FORWARDED','HTTP_X_CLUSTER_CLIENT_IP','HTTP_FORWARDED_FOR','HTTP_FORWARDED','REMOTE_ADDR');$FF=self::getInstance('SERVER');foreach($UC as$C){$eC=$FF->get($C);if($eC&&strlen($eC)>=7){self::$client_ip=$eC;break;}}return self::$client_ip;}static function detectType($F){$F=empty($F)?'string':strtolower($F);foreach(filter_list()as$A){if(ends_with($A,$F)){return filter_id($A);}}}static function coerce($E,$F='raw'){if(is_array($E)){foreach($E as$C=>$dC){if(is_array($F)&&isset($F[$C])){$AE=$F[$C];}else{$AE=$F;}$E[$C]=self::coerce($dC,$AE);}}else{$F=strtolower($F);if($F==='int'||$F==='float'){settype($E,$F);}else if($F==='array'){$E=(array)$E;}else if($F!=='raw'){settype($E,'string');}}return$E;}protected function filterData($C,$F){$F=self::detectType($F);return filter_input($this->input_type,$C,$F);}protected function filterArrayData($hB){if(is_array($hB)){foreach($hB as$C=>&$F){if(is_array($F)){$F['filter']=self::detectType($F['filter']);}else{$F=self::detectType($F);}}}else{$hB=self::detectType($hB);}return filter_input_array($this->input_type,$hB);}function get($C,$O=null,$F=false){if(!array_key_exists($C,$this->data)){if(is_array($O)){$F=array($C=>array('filter'=>$F,'flags'=>FILTER_FORCE_ARRAY));$H=$this->filterArrayData($F);$this->data=array_merge($this->data,$H);}else{$E=$this->filterData($C,$F);if(is_null($E)||$E===false){$E=self::coerce($O,$F);}$this->data[$C]=$E;}}return$this->data[$C];}function all($C=false,$hB=false){if($this->done===false){$this->data=$this->filterArrayData($hB);}if(is_null($this->data)){$this->data=array();}if($C===false){return$this->data;}else if(array_key_exists($C,$this->data)){return$this->data[$C];}}}use \Cute\Context\Input;class Locale{protected$language='';protected$locale_dir='';protected$timezone='Asia/Shanghai';function __construct($dD='',$SB=''){if(empty($dD)){$dD=APP_ROOT.'/protected/locales';}$this->locale_dir=$dD;$this->timezone=$SB;}function detectLanguage(){$wB=Input::getInstance('SERVER');$PB=strstr($wB->get('LANG',''),'.',true);if(empty($PB)){$RF=$wB->get('HTTP_ACCEPT_LANGUAGE','');preg_match_all('/([a-z]{2}\-?[A-Z]{0,2})/',$RF,$VB);foreach($VB[0]as$PB){$PB=str_replace('-','_',$PB);if(file_exists($this->locale_dir.'/'.$PB)){break;}}}return$PB;}function setLocale($PB,$jD='messages'){if($PB){$this->language=$PB;}else{$this->language=$this->detectLanguage();}putenv('LANG='.$this->language);setlocale(LC_ALL,$this->language);bindtextdomain($jD,$this->locale_dir);bind_textdomain_codeset($jD,'UTF-8');textdomain($jD);return$this->language;}function setTimezone($SB){if($SB){$this->timezone=$SB;}@date_default_timezone_set($this->timezone);return$this->timezone;}}class Router{protected static$current=null;static$aliases=array('<int>'=>'([0-9\-]+)','<float>'=>'([0-9\.\-]+)','<num>'=>'([0-9\.\-,]*)','<string>'=>'([a-z0-9\-_]+)','<page>'=>'([0-9]*)/?([0-9]*)/?','<path>'=>'([a-z0-9\-_/])');protected$filename='';protected$prefix='';protected$children=array();protected$items=array();function __construct($W='',$n='/'){$this->filename=$W;$this->prefix=rtrim($n,'/');self::$current=$this;if($W&&is_readable($W)){include_once$W;}}static function getCurrent(){if(is_null(self::$current)){self::$current=new self();}return self::$current;}static function toPrefix($W){$iE=strstr(basename($W),'.');$wF=substr($W,0,-strlen($iE));$n=str_replace(DIRECTORY_SEPARATOR,'/',$wF);return strtolower(rtrim($n,'/'));}static function compileUrl($RB,$IG=false){$RB=preg_quote(strtolower(rtrim($RB,'/')));$UC=array_map('preg_quote',array_keys(self::$aliases));$R=array_values(self::$aliases);$RB=str_replace($UC,$R,$RB);$hC=($IG===false)?'':'(.*)?';return'!^'.$RB.'/?'.$hC.'$!';}function route($a,&$x){$oC=self::compileUrl($a);if(func_num_args()>2){$JD=array_slice(func_get_args(),1);}else{$JD=array($x);}$this->items[$oC]=$JD;return$oC;}function mount($v,$hC='*.php'){$v=rtrim($v,DIRECTORY_SEPARATOR);$QD=glob($v.'/'.$hC,GLOB_BRACE);if(!empty($QD)){$EG=strlen($v);foreach($QD as$W){$n=self::toPrefix(substr($W,$EG));$this->children[$n]=$W;}}return$this;}function dispatch($a,$KE=false){$a=rtrim(strtolower($a),' /').'/';if(!$KE){krsort($this->children);}foreach($this->children as$n=>$W){if(starts_with($a,$n)){$pB=new self($W,$n);$a=substr($a,strlen($n));return$pB->dispatch($a);}}if(!$KE){krsort($this->items);}foreach($this->items as$oC=>$JD){if(preg_match($oC,$a,$B)===1){$RB=$this->prefix.array_shift($B);return array('handlers'=>&$JD,'args'=>$B,'url'=>$RB,'rule'=>$oC);}}$this->abort(404);return array('handlers'=>array());}function abort($zF=500){return@http_response_code($zF);}function redirect($yF='',$_F=false){$SF=$_F?301:302;@header('Location: '.$yF,true,$SF);return die();}}class Session{}}
namespace Cute\DB{use \DateTime;use \PDO;use \PDOException;use \Cute\DB\Literal;use \Cute\Utility\Inflect;use \Cute\View\Templater;abstract class Database{const DB_ACTION_READ='R';const DB_ACTION_WRITE='W';protected$pdo=null;protected$user='';protected$password='';protected$dbname='';protected$tblpre='';protected$host='';protected$port=0;protected$charset='';protected$past_sqls=array();function __construct($QG,$KG,$t,$CC='',$vB='127.0.0.1',$JB=0,$CE=''){$this->user=$QG;$this->password=$KG;$this->dbname=$t;$this->tblpre=$CC;$this->host=$vB;if(intval($JB)>0){$this->port=intval($JB);}if(!empty($CE)){$this->charset=$CE;}}function getPDO(){if(!$this->pdo){$this->connect($this->dbname,$this->tblpre);}return$this->pdo;}function getPastSQL($t=false,$j=0){if($t===true||$t==='*'){return$this->past_sqls;}$t=empty($t)?$this->dbname:$t;$hE=$this->past_sqls[$t];$j=empty($j)?0:-abs($j);return$j?array_slice($hE,$j,null,true):$hE;}function getDriverName(){$ND=$this->getPDO()->getAttribute(PDO::ATTR_DRIVER_NAME);$ND=strtolower($ND);return$ND==='dblib'?'sqlsrv':$ND;}function inline($m){return new Literal($m);}function quote($m){if(is_null($m)){return Literal::quoteNull();}else if($m instanceof Literal||$m instanceof DateTime){return Literal::quote($m);}else{$F=is_int($m)?PDO::PARAM_INT:PDO::PARAM_STR;return$this->getPDO()->quote($m,$F);}}function embed($G,array$M=array()){foreach($M as&$m){$m=$this->quote($m);}$G=str_replace('?','%s',$G);return vsprintf($G,$M);}function execute($G,array$M=array()){if(!empty($M)){$G=$this->embed($G,$M);}try{$D=$this->getPDO()->exec($G);}catch(PDOException$OB){$Y="SQL: $G\n".$OB->getMessage();throw new PDOException($Y);}if(SQL_VERBOSE){$this->past_sqls[$this->dbname][]=array('act'=>self::DB_ACTION_WRITE,'sql'=>$G,);}return$D;}function query($G,array$M=array()){try{$e=$this->getPDO()->prepare($G);if($e->execute($M)){$e->setFetchMode(PDO::FETCH_ASSOC);}}catch(PDOException$OB){$G=$this->embed($G,$M);$Y="SQL: $G\n".$OB->getMessage();throw new PDOException($Y);}if(SQL_VERBOSE){$G=$this->embed($G,$M);$this->past_sqls[$this->dbname][]=array('act'=>self::DB_ACTION_READ,'sql'=>$G,);}return$e;}function fetch($G,array$M=array(),$TC=false){if($e=$this->query($G,$M)){if(is_numeric($TC)){$D=$e->fetchColumn(intval($TC));}else{$D=$e->fetch();if($D&&$TC){$D=isset($D[$TC])?$D[$TC]:null;}}$e->closeCursor();return$D;}}function transact(callable$TF){$hD=$this->getPDO();if($hD->beginTransaction()){$B=func_get_args();array_unshift($B,$this);try{$TF($B);$hD->commit();}catch(PDOException$OB){$hD->rollBack();}}}function listTables(){if(empty($this->tblpre)){$G="SHOW TABLES FROM ?";$m=$this->getDBName();}else{$G="SHOW TABLES LIKE ?";$m=str_replace('_','\_',$this->tblpre).'%';}$D=array();if($e=$this->query($G,array($m))){$XF=strlen($this->tblpre);while($K=$e->fetchColumn(0)){$D[]=substr($K,$XF);}$e->closeCursor();}return$D;}function readFields($K){$L=$this->getColumns($K);$o=array();$GB=array();foreach($L as$J){if($J->isPrimaryKey()){$o[]=$J->name;}$O=$J->default;$WE=$J->getCategory();if($WE==='int'){$O=intval($O);}else if($WE==='float'){$O=floatval($O);}$GB[$J->name]=$O;}return compact('table','pkeys','fields');}function generateModel($T,$K,$U='',$r='',$pF=false){if(empty($U)){$U=$pF?Inflect::singularize($K):$K;$U=Inflect::camelize($U);}$T=rtrim($T,DIRECTORY_SEPARATOR).DIRECTORY_SEPARATOR;if($r){$T.=str_replace('\\',DIRECTORY_SEPARATOR,trim($r));if(!file_exists($T)){mkdir($T,0777,true);}}$W=$T.DIRECTORY_SEPARATOR.$U.'.php';if(class_exists($r.'\\'.$U)){return$W;}$H=$this->readFields($K);$H['name']=$U;$H['ns']=$r;$H['mixin']=null;$H['relations_in_mixin']=false;$PD=$r.'\\'.$U.'Mixin';if(trait_exists($PD,true)){foreach($H['fields']as$MD=>$O){if(property_exists($PD,$MD)){unset($H['fields'][$MD]);}}$H['mixin']=$PD;$H['relations_in_mixin']=method_exists($PD,'getRelations');}$RC=new Templater(SRC_ROOT);ob_start();$RC->render('model_tpl.php',$H);$d="<?php\n\n".trim(ob_get_clean());file_put_contents($W,$d);return$W;}static function csvline($f,$gB="\t",$pC=PHP_EOL,$WB='"',$cC=null){foreach($f as&$UB){if(is_null($UB)){$UB=$cC;}else if(is_string($UB)){if(strpbrk($UB," $gB")!==false){$UB="$WB$UB$WB";}}}return implode($gB,$f).$pC;}abstract function connect($t,$CC='',$zB=false);abstract function getLimit($Z,$j=0);abstract function getColumns($K);}use \HandlerSocketi;class HandlerSocket{const HS_PORT_R=9998;const HS_PORT_RW=9999;protected$handler=null;protected$query=null;protected$read_only=false;protected$dbname='';protected$table='';protected$fields=array();protected$index=null;function __construct($t,$vB='127.0.0.1',$JB=0,$oF=false){$this->dbname=$t;$this->read_only=$oF;if(empty($JB)){$JB=$this->read_only?self::HS_PORT_R:self::HS_PORT_RW;}$this->handler=new HandlerSocketi($vB,$JB);}function open($K,$GB){if(is_string($GB)){$GB=explode(',',str_replace(' ','',$GB));}$this->table=$K;$this->fields=$GB;$this->query=null;return$this;}protected function prepare($CB=null){if(empty($this->query)||$this->index!==$CB){$this->index=$CB;$rD=empty($this->index)?array():array('index'=>$this->index);$this->query=$this->handler->open_index($this->dbname,$this->table,$this->fields,$rD);}return$this->query;}function insert(array$OD){$C=$this->index;$D=$this->prepare($C)->insert($OD);return$D!==false;}function delete($E){if(func_num_args()>1){$C=$E;$E=func_get_arg(1);}else{$C=null;}return$this->prepare($C)->remove($E);}function truncate($LD){$PC=array();$C=null;$LD=is_array($LD)?$LD:func_get_args();foreach($LD as$TB){$PC[]=array('remove',$TB);}$D=$this->prepare($C)->multi($PC);$nF=create_function('$a,$b','return $a && $b;');return array_reduce($D,$nF,true);}function update(array$fC,$C,$E){return$this->prepare($C)->update($E,$fC);}function get($E){if(func_num_args()>1){$C=$E;$E=func_get_arg(1);}else{$C=null;}$D=$this->prepare($C)->find($E);if(empty($D)){return($D===false)?false:null;}return array_combine($this->fields,$D[0]);}function all($C=null,$s='>=',$E=0,$LB=0,$j=0){$SC=array();if($LB>0){$SC['limit']=$LB;}if($j>0){$SC['offset']=$j;}$E=array($s=>$E);$D=$this->prepare($C)->find($E,$SC);if($D===false){return false;}foreach($D as&$f){$f=array_combine($this->fields,$f);}return$D;}function in($C,$E){$PC=array();$R=array_slice(func_get_args(),1);if(count($R)===1&&is_array($R[0])){$R=$R[0];}foreach($R as$E){$PC[]=array('find',$E);}$D=$this->prepare($C)->multi($PC);if($D===false){return false;}$xB=exec_function_array('array_merge',$D);foreach($xB as&$f){$f=array_combine($this->fields,$f);}return$xB;}}class Literal{protected static$format="'%s'";protected$value;function __construct($E){$this->value=$E;}function __toString(){return strval($this->value);}static function quoteNull(){return'NULL';}static function quote($E){if(is_null($E)){return self::quoteNull();}else if($E instanceof self){return strval($E);}if($E instanceof DateTime){$E=$E->format('Y-m-d H:i:s');}else if(is_string($E)){$E=convert($E,'UTF-8');}else{$E=strval($E);}return sprintf(self::$format,$E);}}use \Cute\DB\Database;class MySQL extends Database{protected$port=3306;protected$charset='utf8';protected$lower_table_name=null;function connect($t,$CC='',$zB=false){$pD=sprintf('mysql:host=%s;port=%d;charset=%s',$this->host,$this->port,$this->charset);$rD=array(PDO::ATTR_ERRMODE=>PDO::ERRMODE_EXCEPTION,PDO::MYSQL_ATTR_INIT_COMMAND=>sprintf("SET NAMES '%s'",$this->charset),);$this->pdo=new PDO($pD,$this->user,$this->password,$rD);if($zB){$this->pdo->exec(sprintf("CREATE DATABASE IF NOT EXIST `%s`",$this->dbname));}$this->pdo->exec(sprintf("USE `%s`",$this->dbname));$this->tblpre=$CC;if(!array_key_exists($this->dbname,$this->past_sqls)){$this->past_sqls[$this->dbname]=array();}return$this;}function needTableToLower(){if(is_null($this->lower_table_name)){$G="SHOW Variables LIKE 'lower_case_table_names'";$lF=$this->fetch($G,array(),'Value');$this->lower_table_name=intval($lF)===1;}return$this->lower_table_name;}function getTableName($K,$OC=false){$N=$this->tblpre.$K;if($this->needTableToLower()){$N=strtolower($N);}return$OC?'`'.$N.'`':$N;}function getLimit($Z,$j=0){if($j>0){$LB=sprintf(" LIMIT %d, %d",$j,$Z);}else{$LB=sprintf(" LIMIT %d",$Z);}return array("",$LB);}function getPKey($K){$N=$this->getTableName($K);$G="SELECT COLUMN_NAME FROM information_schema.COLUMNS"." WHERE TABLE_SCHEMA=? AND TABLE_NAME=? AND COLUMN_KEY='PRI'";$M=array($this->dbname,$N);return$this->fetch($G,$M,0);}function getColumns($K){$N=$this->getTableName($K);$L=array('COLUMN_NAME','COLUMN_DEFAULT','COLUMN_KEY','IS_NULLABLE','COLUMN_TYPE','DATA_TYPE','CHARACTER_MAXIMUM_LENGTH','NUMERIC_PRECISION','NUMERIC_SCALE','DATETIME_PRECISION',);$G="SELECT %s FROM information_schema.COLUMNS"." WHERE TABLE_SCHEMA=? AND TABLE_NAME=? ORDER BY ORDINAL_POSITION";$G=sprintf($G,implode(', ',$L));$M=array($this->dbname,$N);if($e=$this->query($G,$M)){$kD=PDO::FETCH_CLASS|PDO::FETCH_PROPS_LATE;$D=$e->fetchAll($kD,'\\Cute\\ORM\\Column');$e->closeCursor();return$D;}}function isExists($K){$N=$this->getTableName($K);$G="SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES"." WHERE TABLE_NAME=? AND (TABLE_SCHEMA=? OR TABLE_CATALOG=?)";$M=array($N,$this->dbname,$this->dbname);$K=$this->fetch($G,$M,0);return$N===$K;}function getCreateSQL($K,$qB,$mD=false,$nD=false){$N=$this->getTableName($K);if($mD){$G="CREATE TABLE `%s` LIKE `%s`";return sprintf($G,$qB,$N);}else if($nD){$zB=sprintf("CREATE TABLE `%s`",$N);$G=$this->fetch("SHOW $zB",array(),'Create Table');$G=preg_replace('/(AUTO_INCREMENT=\d+)/','AUTO_INCREMENT=1',$G,1);$kF=sprintf("CREATE TABLE IF NOT EXISTS `%s`",$qB);return str_replace($zB,$kF,$G);}else{$XB="";$_B="";$p="";$L=$this->getColumns();foreach($L as$J){$A=$J->name;$O=trim($J->default,"()");if($J->getCategory()==='char'){$Z=intval($J->length);$F=($Z>255||$Z<0)?"text":"varchar($Z)";}else if($J->getCategory()==='int'){$kB=intval($J->precision);if($O===''){$O="0";}$F=$J->type."($kB)";}else if($J->getCategory()==='float'){$kB=intval($J->precision);$yD=intval($J->scale);if($O===''){$O="0.0";}$F=$J->type;if($J->type==='real'){$F='float';}else if($J->type==='money'){$F='numeric';}$F.="($kB,$yD)";}else if($J->getCategory()==='datetime'){$F='datetime';}else{$F=$J->type;}if($J->isPrimaryKey()){$XB="    `$A` int(10) unsigned NOT NULL AUTO_INCREMENT,";$_B="PRIMARY KEY (`$A`)";}else if(starts_with($F,'date')||ends_with($F,'text')){$p.="    `$A` $F NULL,\n";}else if($J->isNullable()){$p.="    `$A` $F NULL,\n";}else{$p.="    `$A` $F NOT NULL DEFAULT '$O',\n";}}$RC=<<<EOD
CREATE TABLE IF NOT EXISTS `%s` (
%s
%s
    %s
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT
EOD
;if(empty($XB)){$p=rtrim($p,",\n");}$G=sprintf($RC,$qB,$XB,$p,$_B);return$G;}}function sqlToFile($G,$_,$gB="\t",$pC=PHP_EOL,$WB='"',$cC=null){@mkdir(dirname($_),0664,true);$tC="FIELDS TERMINATED BY '".addslashes($gB)."'";$tC.=" LINES TERMINATED BY '".addslashes($pC)."'";if($WB){$tC.=" OPTIONALLY ENCLOSED BY '".addslashes($WB)."'";}if($vF){$tC.=" FIELDS ESCAPED BY '".addslashes($vF)."'";}$LC=sys_get_temp_dir().DIRECTORY_SEPARATOR.basename($_);$uF="$G INTO OUTFILE '$LC' $tC";try{if(file_exists($LC)){unlink($LC);}$this->db->execute($uF);if(file_exists($LC)){rename($LC,$_);$rB=shell_exec('wc -l '.$_.' | cut -d" " -f1');$rB=trim($rB);return is_numeric($rB)?intval($rB):0;}}catch(\Exception$OB){}}}class Query{const COUNT_INSERT_BULK_MAX=500;static$db_actions=array('select','update','delete','insert','insertBulk','apply',);protected$table='';protected$constrains=array();protected$parameters=array();protected$offset=0;protected$length=-1;protected$additions=array('GROUP BY'=>null,'HAVING'=>null,'ORDER BY'=>null,);function __construct($K){$this->table=$K;}function getTable(){return$this->table;}function deduceWhere($sB='',array&$B=array()){$h=implode(' AND ',$this->constrains);$M=$this->parameters;if(!empty($sB)){if($h){$h='('.$h.') OR ('.$sB.')';}else{$h=$sB;}if(count($B)>0){$M=array_merge($M,$B);}}$h=$h?'WHERE '.$h:'';return array($h,$M);}protected function deduceTail($bG=''){$tF=func_get_args();$QC="";foreach($this->additions as$C=>$E){if(!is_null($E)&&!in_array($C,$tF)){$QC.=" $C $E";}}return$QC;}function groupBy($sF,$iF=null){$this->additions['GROUP BY']=$sF;$this->additions['HAVING']=$iF;return$this;}function orderBy($ZE,$XE=''){if($XE){$ZE.=' '.strtoupper($XE);}$this->additions['ORDER BY']=$ZE;return$this;}function setPage($VC,$z=1,$uB=0){$this->length=intval($VC)<0?-1:intval($VC);if($this->length>0){$z=intval($z);if($z<0&&$uB>0){$WF=ceil($uB/$this->length);$z+=$WF+1;}if($z>0){$this->offset=($z-1)*$this->length;}}return$this;}function contain($MD,array$R){$HB=count($R);if($HB===0){$s='IS NULL';}else if($HB===1){$s='= ?';}else{$ZB=implode(', ',array_fill(0,count($R),'?'));$s='IN ('.$ZB.')';}$R=array_values($R);$this->constrains[]="$MD $s";$this->parameters=array_merge($this->parameters,$R);return$this;}function filter($JC,$E,$s='= ?'){$s=empty($s)?false:strtoupper($s);if(is_array($E)){if(substr_count($s,'?')===count($E)){$this->constrains[]="$JC $s";$this->parameters=array_merge($this->parameters,$E);}else{$this->contain($JC,$E);}}else if(is_null($E)){if(trim($s)==='<>'){$this->constrains[]="$JC IS NOT NULL";}else{$this->constrains[]="$JC IS NULL";}}else{$this->constrains[]=($s===false)?$JC:"$JC $s";$this->parameters[]=$E;}return$this;}static function getSelectSQL($N,$L='*',$n=""){if(is_object($L)){$L=get_object_vars($L);}if(is_array($L)){array_walk($L,create_function('&$v,$k','if(!is_numeric($k))$v.=" as ".$k;'));$L=implode(', ',$L);}$L=trim($L);$G="SELECT $n$L FROM $N";return$G;}function select(Database&$Q,$L='*',$cE='fetchAll',array$WC=array(),$sB='',array&$B=array()){$DD="";$LB="";if(starts_with($L,'COUNT')){$QC=$this->deduceTail('ORDER BY');}else{$QC=$this->deduceTail();if($this->length>0){list($DD,$LB)=$Q->getLimit($this->length,$this->offset);}}$N=$Q->getTableName($this->getTable(),true);list($h,$M)=$this->deduceWhere($sB='',$B);$G=self::getSelectSQL($N,$L,$DD);$G.=($h?' '.$h:'').$QC.$LB;$e=$Q->query(rtrim($G),$M);if($e&&$cE){$D=exec_method_array($e,$cE,$WC);$e->closeCursor();return$D;}}function apply(Database&$Q,$c){$c=strtoupper($c);$B=array_slice(func_get_args(),2);if(empty($B)){$L=$c==='COUNT'?'*':'';}else{$L=implode(', ',$B);}$L=$c.'('.$L.')';$D=$this->select($Q,$L,'fetchColumn');return$D;}function delete(Database&$Q){$N=$Q->getTableName($this->getTable(),true);list($h,$M)=$this->deduceWhere();$G="DELETE FROM $N $h";if(empty($h)&&$Q->getDriverName()==='mysql'){$G="TRUNCATE $N";}return$Q->execute(rtrim($G),$M);}static function getUpdateSet(array$fC){$bE=array();$R=array();foreach($fC as$C=>$dC){$bE[]=$C.'=?';$R[]=$dC;}$bD="SET ".implode(', ',$bE);return array($bD,$R);}function update(Database&$Q,array$fC,$eB=false){list($h,$M)=$this->deduceWhere();list($bD,$R)=self::getUpdateSet($fC);$YC=$eB?'UPDATE DELAYED':'UPDATE';$N=$Q->getTableName($this->getTable(),true);$G="$YC $N $bD $h";$M=array_merge($R,$M);return$Q->execute(rtrim($G),$M);}static function getInsertSQL($N,array$L,$eB=false,$NC=false){if($NC===true){$YC=$eB?'REPLACE DELAYED':'REPLACE INTO';}else{$YC=$eB?'INSERT DELAYED':'INSERT INTO';}if($HB=count($L)){$L=implode(',',$L);$ZB=implode(', ',array_fill(0,$HB,'?'));return array("$YC $N ($L)",$ZB);}else{return array("$YC $N",'');}}function insert(Database&$Q,array$OD,$eB=false,$NC=false){$N=$Q->getTableName($this->getTable(),true);list($G,$ZB)=self::getInsertSQL($N,array_keys($OD),$eB,$NC);if(!empty($ZB)){$G.=" VALUES ($ZB)";$M=array_values($OD);if($Q->execute($G,$M)){return$Q->getPDO()->lastInsertId();}}}function insertBulk(Database&$Q,array$xB,array$L=null,$eB=false,$NC=false){assert(count($xB)>0);if(empty($L)){$L=array_keys(reset($xB));}$N=$Q->getTableName($this->getTable(),true);list($G,$ZB)=self::getInsertSQL($N,$L,$eB,$NC);$UF=array_chunk($xB,self::COUNT_INSERT_BULK_MAX);foreach($UF as$eE){$ZF=array_fill(0,count($eE),"($ZB)");$G.=" VALUES ".implode(', ',$ZF);$aF=array_map('array_values',$eE);$M=exec_funcution_array('array_merge',$aF);$Q->execute($G,$M);}}}class SQLServer extends Database{protected$port=1433;protected$charset='utf8';function connect($t,$CC='',$zB=false){$pD=sprintf('dblib:host=%s;port=%d;charset=%s',$this->host,$this->port,$this->charset);$this->pdo=new PDO($pD,$this->user,$this->password);$this->pdo->exec(sprintf("USE `%s`",$this->dbname));$this->tblpre=$CC;if(!array_key_exists($this->dbname,$this->past_sqls)){$this->past_sqls[$this->dbname]=array();}return$this;}function getTableName($K,$OC=false){$N=$this->tblpre.$K;return$OC?'['.$N.']':$N;}function getLimit($Z,$j=0){$DD=sprintf("TOP %d ",$Z);return array($DD,"");}function getPKey($K){$N=$this->getTableName($K);$G="SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.%s WHERE TABLE_SCHEMA='dbo'"." AND TABLE_CATALOG=? AND TABLE_NAME=? ORDER BY ORDINAL_POSITION";$M=array($this->dbname,$N);$oB=$this->fetch(sprintf($G,'KEY_COLUMN_USAGE'),$M,0);if(empty($oB)){$oB=$this->fetch(sprintf($G,'COLUMNS'),$M,0);}return$oB;}function getColumns($K){$N=$this->getTableName($K);$L=array('COLUMN_NAME','COLUMN_DEFAULT','COLUMN_KEY','IS_NULLABLE','COLUMN_TYPE','DATA_TYPE','CHARACTER_MAXIMUM_LENGTH','NUMERIC_PRECISION','NUMERIC_SCALE','DATETIME_PRECISION',);$G="SELECT %s FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA='dbo'"." AND TABLE_CATALOG=? AND TABLE_NAME=? ORDER BY ORDINAL_POSITION";$G=sprintf($G,implode(', ',$L));$M=array($this->dbname,$N);if($e=$this->query($G,$M)){$kD=PDO::FETCH_CLASS|PDO::FETCH_PROPS_LATE;$D=$e->fetchAll($kD,'\\Cute\\ORM\\Column');$e->closeCursor();return$D;}}function isExists($K){$N=$this->getTableName($K);$G="SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='dbo'"." AND TABLE_CATALOG=? AND TABLE_NAME=?";$M=array($this->dbname,$this->table);$K=$this->fetch($G,$M,0);return$N===$K;}function getCreateSQL($qB,$L=array(),$mD=false,$nD=false){$XB="";$_B="";$p="";$L=$this->getColumns();if($mD||$nD){foreach($L as$J){if($J->getCategory()==='char'){$F="[".$J->type."](".intval($J->length).")";}else if($J->type==='numeric'){$F="[numeric](".$J->precision.", ".$J->scale.")";}else{$F="[".$J->type."]";}if($J->isPrimaryKey()){$XB="    [$A] $F IDENTITY(1,1) NOT FOR REPLICATION NOT NULL,";$_B="PRIMARY KEY NONCLUSTERED ( [$A] ASC )";}else{$gF=$J->isNullable()?"NULL":"NOT NULL DEFAULT ".$J->default;$p.="    [$A] $F $gF,\n";}}}else{foreach($L as$J){$O=trim($J->default,"()");if($J->getCategory()==='char'){$Z=intval($J->length);$F=($Z>255||$Z<0)?"text":"varchar($Z)";}else if($J->getCategory()==='int'){$kB=intval($J->precision);if($O===''){$O="0";}$F=$J->type."($kB)";}else if($J->getCategory()==='float'){$kB=intval($J->precision);$yD=intval($J->scale);if($O===''){$O="0.0";}$F=$J->type;if($J->type==='real'){$F='float';}else if($J->type==='money'){$F='numeric';}$F.="($kB,$yD)";}else if($J->getCategory()==='datetime'){$F='datetime';}else{$F=$J->type;}if($J->isPrimaryKey()){$XB="    [$A] $F IDENTITY(1,1) NOT FOR REPLICATION NOT NULL,";$_B="PRIMARY KEY NONCLUSTERED ( [$A] ASC )";}else if(starts_with($F,'date')||ends_with($F,'text')){$p.="    [$A] $F NULL,\n";}else if($J->isNullable()){$p.="    [$A] $F NULL,\n";}else{$p.="    [$A] $F NOT NULL DEFAULT '$O',\n";}}}$RC=<<<EOD
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES
    WHERE TABLE_SCHEMA='dbo' AND TABLE_NAME='%s')
BEGIN
CREATE TABLE [dbo].[%s] (
%s
%s
    CONSTRAINT [PK_%s]
    %s
    WITH ( PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF,
        ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON )
    ON [PRIMARY]
) ON [PRIMARY]
END
EOD
;if(empty($XB)){$p=rtrim($p,",\n");}$G=sprintf($RC,$qB,$qB,$XB,$p,$qB,$_B);return$G;}function sqlToFile($G,$_,$gB="\t",$pC=PHP_EOL,$WB='"',$cC=null){@mkdir(dirname($_),0664,true);$EB=fopen($_,'wb');$rB=0;$RE=$this->query($G);while($f=$RE->fetch()){if(is_null($cC)){fputcsv($EB,$f,$gB,$WB);}else{fwrite($EB,self::csvline($f,$gB,$pC,$WB,$cC));}$rB++;}$RE->closeCursor();fclose($EB);return$rB;}}}
namespace Cute\Logging{use \Cute\Logging\Logger;defined('LOG_WRITE_FILE_FREQ')or define('LOG_WRITE_FILE_FREQ',1);class FileLogger extends Logger{use\Cute\Base\Deferring;protected$filename='';protected$records=array();function __construct($A='',$v=false,$CD=false){$this->filename=($A?$A.'_':'').'%s.log';if($v===false){$v=realpath('./logs');}if(is_dir($v)||mkdir($v,0777,true)){$this->filename=$v.DIRECTORY_SEPARATOR.$this->filename;}parent::__construct($CD);$this->defer();}function close(){$this->writeFiles();unset($this->records);}function writeFiles(){foreach($this->records as$eF=>&$fE){$u=sprintf($this->filename,$eF);$XD=implode('',$fE);$P=file_put_contents($u,$XD,FILE_APPEND|LOCK_EX);if($P!==false){$fE=array();}}}function append(){$dF=implode(' ',func_get_args());$SD=date('Ymd');if(!isset($this->records[$SD])){$this->records[$SD]=array();}array_push($this->records[$SD],$dF.PHP_EOL);}function rawlog($dB,$Y,array$S=array()){$dB=strtoupper($dB);if($this->compareLevel($dB)){$d=self::format($Y,$S);$eC=self::getClientIP();$xF=date('Y-m-d H:i:s');$this->append($xF,$eC,$dB,$d);}if(LOG_WRITE_FILE_FREQ>=1||LOG_WRITE_FILE_FREQ>=mt_rand(1,10000)/10000){$this->writeFiles();}}}use \Cute\Context\Input;use \Cute\View\Templater;abstract class Logger{const EMERGENCY='EMERGENCY';const ALERT='ALERT';const CRITICAL='CRITICAL';const ERROR='ERROR';const WARNING='WARNING';const NOTICE='NOTICE';const INFO='INFO';const DEBUG='DEBUG';protected$threshold=false;protected$threshold_value=null;function __construct($CD=false){if($CD===false){$this->threshold=self::DEBUG;}else{$this->threshold=strtoupper($CD);}}static function format($Y,array$S=array()){$d=is_null($Y)?'':(string)$Y;return Templater::replaceWith($d,$S,'{','}');}static function getClientIP(){return Input::getClientIP();}function compareLevel($dB){static$ED=array(self::EMERGENCY=>0,self::ALERT=>1,self::CRITICAL=>2,self::ERROR=>3,self::WARNING=>4,self::NOTICE=>5,self::INFO=>6,self::DEBUG=>7,);if(is_null($this->threshold_value)&&isset($ED[$this->threshold])){$this->threshold_value=$ED[$this->threshold];}if(isset($ED[$dB])){return$ED[$dB]<=$this->threshold_value;}}function emergency($Y,array$S=array()){$this->rawlog(self::EMERGENCY,$Y,$S);}function alert($Y,array$S=array()){$this->rawlog(self::ALERT,$Y,$S);}function critical($Y,array$S=array()){$this->rawlog(self::CRITICAL,$Y,$S);}function error($Y,array$S=array()){$this->rawlog(self::ERROR,$Y,$S);}function warning($Y,array$S=array()){$this->rawlog(self::WARNING,$Y,$S);}function notice($Y,array$S=array()){$this->rawlog(self::NOTICE,$Y,$S);}function info($Y,array$S=array()){$this->rawlog(self::INFO,$Y,$S);}function debug($Y,array$S=array()){$this->rawlog(self::DEBUG,$Y,$S);}abstract function rawlog($dB,$Y,array$S=array());abstract function close();}}
namespace Cute\ORM{use \Cute\ORM\Relation;class BelongsTo extends Relation{protected$another_foreign_key='';function __construct($U='',$UD=''){parent::__construct($U);$this->another_foreign_key=$UD;}function getAnotherForeignKey($A){if(empty($this->another_foreign_key)){$this->another_foreign_key=$A.'_id';}return$this->another_foreign_key;}function relative($A,array&$D){if(empty($D)){return array();}$o=exec_method_array($this->model,'getPKeys');if(empty($o)){return array();}$KB=$this->getAnotherForeignKey($A);$R=$this->getAttrs($D,$KB);$lB=$this->getMapper();$lB->combine(reset($o),$R,true);$this->setAttrs($D,$R,$A,$KB);return$R;}}use \Cute\ORM\Model;class Column extends Model{protected static$_keys=array('COLUMN_NAME'=>'name','COLUMN_DEFAULT'=>'default','COLUMN_KEY'=>'index','IS_NULLABLE'=>'nullable','COLUMN_TYPE'=>'column','DATA_TYPE'=>'type','CHARACTER_MAXIMUM_LENGTH'=>'length','NUMERIC_PRECISION'=>'precision','NUMERIC_SCALE'=>'scale','DATETIME_PRECISION'=>'datetime',);var$name='';var$default=null;var$index=null;var$nullable='YES';var$column='';var$type='';var$length=null;var$precision=null;var$scale=null;var$datetime=null;static function getTable(){return'COLUMNS';}function __set($BE,$E){if(isset(self::$_keys[$BE])){$A=self::$_keys[$BE];$this->$A=$E;}}function isPrimaryKey(){return$this->index==='PRI';}function isNullable(){return$this->nullable==='YES';}function getCategory(){if(!is_null($this->datetime)){return'datetime';}else if(!is_null($this->precision)){return$this->scale>0?'float':'int';}else if(!is_null($this->length)){return'char';}else{return$this->type;}}}use \Cute\DB\Database;use \Cute\Utility\Inflect;class HasMany extends Relation{protected$foreign_key='';protected$is_unique=false;function __construct($U='',$RD=''){parent::__construct($U);$this->foreign_key=$RD;}function bind(Database&$Q,$K=''){if(empty($this->foreign_key)){$this->foreign_key=Inflect::singularize($K).'_id';}return parent::bind($Q,$K);}function getForeignKey(){return$this->foreign_key;}function relative($A,array&$D){if(empty($D)){return array();}$KB=$this->getForeignKey();$R=$this->getAttrs($D);$lB=$this->getMapper();$lB->combine($KB,$R,$this->is_unique);$O=$this->is_unique?null:array();$this->setAttrs($D,$R,$A,false,$O);return$R;}}use \Cute\ORM\HasMany;class HasOne extends HasMany{protected$is_unique=true;}class ManyToMany extends HasMany{protected$another_foreign_key='';protected$middle_table='';function __construct($U='',$RD='',$UD='',$OG=''){parent::__construct($U,$RD);$this->another_foreign_key=$UD;$this->middle_table=$OG;}function getAnotherForeignKey($A){if(empty($this->another_foreign_key)){$this->another_foreign_key=$A.'_id';}return$this->another_foreign_key;}function relative($A,array&$D){if(empty($D)){return array();}$o=exec_method_array($this->model,'getPKeys');if(empty($o)){return array();}$KB=$this->getForeignKey();$R=$this->getAttrs($D);$lB=$this->getMapper('',$this->middle_table);$lB->combine($KB,$R,false);$NG=$this->getAnotherForeignKey($A);$uC=array();foreach($R as$C=>$E){foreach($E as$MG=>$dC){$CB=$dC->$NG;$R[$C][$MG]=$CB;$uC[$CB]=null;}}$lB=$this->getMapper();$lB->combine(reset($o),$uC,true);foreach($D as&$b){$C=$b->getID();if(!isset($R[$C])){continue;}$KC=array();foreach($R[$C]as$CB){$KC[]=&$uC[$CB];}$b->$A=$KC;}return$uC;}}use \PDO;use \Cute\DB\Query;class Mapper{protected$db=null;protected$query=null;protected$model='';protected$table='';protected$fetch_style=0;protected$relations=array();protected$nothing=false;function __construct(Database&$Q,$U='',$K=''){$this->db=$Q;$this->table=$K;if($U&&is_object($U)){$U=get_class($U);}$this->setModel($U);}function setModel($U){$this->fetch_style=PDO::FETCH_CLASS;if(empty($U)){$this->model='\\Cute\\ORM\\Model';}else{$this->model=$U;if(method_exists($this->model,'__set')||method_exists($this->model,'__construct')){$this->fetch_style=$this->fetch_style|PDO::FETCH_PROPS_LATE;}if(empty($this->table)){$this->table=exec_method_array($this->model,'getTable');}}return$this;}function getDB(){return$this->db;}function getModel(){return$this->model;}function getQuery(){if(!$this->query){$this->query=new Query($this->getTable());}return$this->query;}function getTable(){return$this->table;}function getTableName($OC=false){$Q=$this->getDB();return$Q->getTableName($this->getTable(),$OC);}function setPage($VC,$z=1){$z=intval($z);if($z<0&&intval($VC)>0){$uB=intval($this->count());}else{$uB=0;}$this->getQuery()->setPage($VC,$z,$uB);return$this;}function setNothing($LG=true){$this->nothing=$LG;return$this;}function join($A='*'){$U=exec_construct_array($this->model);$iD=$U->getRelations();if($A==='*'){$this->relations=&$iD;}else{$PG=func_get_args();foreach($PG as$A){if($A&&isset($iD[$A])){$this->relations[$A]=&$iD[$A];}}}return$this;}function all($L='*',$cB=null,$sB='',array&$B=array()){$Q=$this->getDB();if($this->nothing){$D=array();}else{$w=$this->getQuery();$cB=empty($cB)?$this->fetch_style:$cB;$WC=array($cB,$this->getModel());$D=$w->select($Q,$L,'fetchAll',$WC,$sB,$B);}if(is_array($D)){$K=$this->getTable();foreach($this->relations as$A=>&$TG){$TG->bind($Q,$K)->relative($A,$D);}return$D;}}function get($TB,$C=false,$L='*',$N=''){if(empty($C)){$o=exec_method_array($this->getModel(),'getPKeys');if(empty($o)){return;}$C=reset($o);}$this->getQuery()->filter($C,$TB)->setPage(1,1);$KC=$this->all($L);return count($KC)>0?reset($KC):null;}function combine($KB,array&$D,$SG=false,$L='*'){if(empty($KB)||count($D)===0){return$D;}$Q=$this->getDB();$w=$this->getQuery();$w->contain($KB,array_keys($D));if($L==='*'){$N=$this->getTableName(true);$L=sprintf('%s,%s.*',$KB,$N);}$RG=$SG?PDO::FETCH_UNIQUE:PDO::FETCH_GROUP;$cB=$this->fetch_style|$RG;$WC=array($cB,$this->getModel());$D=$w->select($Q,$L,'fetchAll',$WC);return$D;}function __call($A,$B){$w=$this->getQuery();if(!method_exists($w,$A)){array_unshift($B,$A);$A='apply';}if(in_array($A,Query::$db_actions)){$Q=$this->getDB();array_unshift($B,$Q);return exec_method_array($w,$A,$B);}else{$D=exec_method_array($w,$A,$B);return($D instanceof Query)?$this:$D;}}}class Model{protected static$_fields=array();static function getTable(){return'';}static function getPKeys(){return array();}function getRelations(){return array();}function getFields(){$K=$this->getTable();if(!isset(self::$_fields[$K])){$GB=get_object_vars($this);foreach($GB as$A=>$O){if(starts_with($A,'_')){unset($GB[$A]);}}self::$_fields[$K]=&$GB;}return self::$_fields[$K];}function getID($HC=0){if($o=$this->getPKeys()){$oB=$o[$HC];return$this->$oB;}}function setID($TB){if($o=$this->getPKeys()){foreach($o as$HC=>$oB){$this->$oB=func_get_arg($HC);}}return$this;}function isExists(){$TB=$this->getID();return$TB!==0&&!is_null($TB);}}use \Cute\ORM\NestedSet;trait NestedMixin{protected$YG=0;protected$XG=0;var$ZG=0;var$WG=null;function getRelations(){return array('children'=>new NestedSet(__CLASS__),);}function getLow(){return$this->low_value;}function getHigh(){return$this->high_value;}function isLeaf(){return$this->getHigh()-$this->getLow()===1;}function recur($c){$c($this);foreach($this->children as$nC){$nC->recur($c);}}}class NestedSet extends Relation{function relative($A,array&$D){$w=$this->getMapper()->orderBy('low_value');if(!empty($D)){$OE=array_pop($D);$B=array($OE->getLow(),$OE->getHigh());$w->filter('low_value',$B,'BETWEEN ? AND ?');}$N=$w->getTableName(true);$L=sprintf('low_value,%s.*',$N);$cB=PDO::FETCH_CLASS|PDO::FETCH_UNIQUE;$GD=$w->all($L,$cB);if(count($GD)===0){return;}$HC=0;$mC=array();$D=reset($GD);foreach($GD as$lC=>&$b){$b->$A=array();if(!$b->isLeaf()){$mC[$lC+1]=$lC;}if(isset($mC[$lC])){$b->parent=&$GD[$mC[$lC]];$b->depth=$b->parent->depth+1;array_push($b->parent->$A,$b);$LE=$b->getHigh();if($LE<$b->parent->getHigh()-1){$mC[$LE+1]=$mC[$lC];}}}return$D;}}use \Cute\ORM\Mapper;abstract class Relation{protected$mapper=null;protected$model='';function __construct($U=''){$this->model=empty($U)?'\\Cute\\ORM\\Model':$U;}function getModel(){return$this->model;}function bind(Database&$Q,$K=''){$this->mapper=new Mapper($Q,$this->model);return$this;}function getMapper($U='',$K=''){if(empty($U)&&empty($K)){return$this->mapper;}else{$Q=$this->mapper->getDB();return new Mapper($Q,$U,$K);}}protected function getAttrs(array&$D,$kC=false){$GE=array();foreach($D as&$b){$C=$kC?$b->$kC:$b->getID();$GE[$C]=null;}return$GE;}protected function setAttrs(array&$D,array&$R,$A,$kC=false,$O=null){foreach($D as&$b){$C=$kC?$b->$kC:$b->getID();if(isset($R[$C])){$b->$A=&$R[$C];}else{$b->$A=$O;}}}abstract function relative($A,array&$D);}}
namespace Cute\Utility{class Binary{protected$is_bom=false;protected$filename='';protected$fp=null;protected$term_size=0;protected$offset_size=0;protected$index_first=0;protected$index_last=0;protected$index_total=0;function __construct($W,$CG=4,$HG=3,$GG=false){$this->filename=$W;$this->term_size=$CG;$this->offset_size=$HG;$this->is_bom=$GG;}function initiate($FG='read'){if(!file_exists($this->filename)){@mkdir(dirname($this->filename),0755,true);touch($this->filename,0666);}$VG=($FG==='read')?'rb':'wb';$this->fp=fopen($this->filename,$VG);return$this;}function isBOM(){return$this->is_bom;}function close(){if($this->fp){fclose($this->fp);}}function tell(){return ftell($this->fp);}function seek($ZC,$_D=SEEK_SET){if($_D===SEEK_SET){$ZC=abs($ZC);}else if($_D===SEEK_END){$ZC=-abs($ZC);}$D=fseek($this->fp,$ZC,$_D);return$D===0;}function truncate($DG=0){return ftruncate($this->fp,$DG);}function read($P=1){if($P===1){return fgetc($this->fp);}else if($P>1){return fread($this->fp,$P);}}function readString($V=''){while(1){$lD=$this->read();if($lD===false||ord($lD)===0){break;}$V.=$lD;}return$V;}function readHex($P=1){$FB=bin2hex($this->read($P));if(!$this->isBOM()&&$P>1){$FB=implode('',array_reverse(str_split($FB,2)));}return$FB;}function readInt($P=4){$F='C';if($P===2){$F=$this->isBOM()?'n':'v';}else if($P===4){$F=$this->isBOM()?'N':'V';}else if($P===8){$F=$this->isBOM()?'J':'P';}$BG=unpack($F.'int',$this->read($P));return$BG['int'];}function readNumber($P=3){$sD=$this->readHex($P);return intval($sD,16);}function readHeaders(){if($this->index_first<=0){$this->index_first=$this->readInt();$this->index_last=$this->readInt();$P=$this->index_last-$this->index_first;$AC=$this->term_size+$this->offset_size;if($AC>0){$this->index_total=floor($P/$AC)+1;}}return$this->index_first;}function write($H){return fwrite($this->fp,$H);}function writeString($V,$JE=null,$mB=false){$V.=(is_string($JE)?$JE:chr(0));return$mB?$V:$this->write($V);}function writeHex($FB,$P=false,$mB=false){if(empty($P)){$P=ceil(strlen($FB)/2);}$FB=str_pad($FB,$P*2,'0',STR_PAD_LEFT);if(!$this->isBOM()&&$P>1){$FB=implode('',array_reverse(str_split($FB,2)));}$qC=@hex2bin($FB);return$mB?$qC:$this->write($qC);}function writeInt($H,$P=4,$mB=false){$F='C';if($P===2){$F=$this->isBOM()?'n':'v';}else if($P===4){$F=$this->isBOM()?'N':'V';}else if($P===8){$F=$this->isBOM()?'J':'P';}$qC=pack($F,$H);return$mB?$qC:$this->write($qC);}function writeNumber($H,$P=3,$mB=false){$sD=dechex(intval($H));return$this->writeHex($sD,$P,$mB);}function writeHeaders($BD=''){$this->seek(0);$this->writeInt($this->index_first);$this->writeInt($this->index_last);if($BD){$this->writeString($BD);}}function compare($j,$gD,$AC){$this->seek($this->index_first+$j*$AC);$oE=$this->readHex($this->term_size);$this->seek(-$this->term_size,SEEK_CUR);return strcmp($gD,$oE);}static function binSearch(&$b,$X,$gD,$uB,$AC){$AD=0;$qD=$uB;do{$oD=$AD+floor(($qD-$AD)/2);$uD=$b->$X($oD,$gD,$AC);if($uD>0){$AD=$oD;}else if($uD<0){$qD=$oD;}else{break;}}while($qD-$AD>1);return$uD;}}use \DateTime;use \DateTimeZone;class Calendar extends DateTime{protected$timestamp=0;function __construct($zD='now',$SB=null){if(is_null($SB)&&$O=constant('DEFAULT_TIMEZONE')){$SB=new DateTimeZone($O);}if(is_numeric($zD)){parent::__construct('now',$SB);$this->setTimestamp($zD);}else{parent::__construct($zD,$SB);}}function format($IE='Y-m-d H:i:s'){$D=parent::format($IE);if(strpos($IE,'星期w')!==false){$wE=array('星期0'=>'星期日','星期1'=>'星期一','星期2'=>'星期二','星期3'=>'星期三','星期4'=>'星期四','星期5'=>'星期五','星期6'=>'星期六');$D=strtr($D,$wE);}return$D;}static function parseDurtion($IB){if(empty($IB)){return 0;}if(is_int($IB)||is_float($IB)){return$IB;}if(is_string($IB)){$HE=strtolower(substr($IB,-1));if(is_numeric($HE)){return floatval($IB);}$IB=trim(substr($IB,0,-1));$y=1;switch($HE){case'w':$y*=7;case'd':$y*=24;case'h':$y*=60;case'm':$y*=60;}return floatval($IB)*$y;}}function thisMonthBegin(){return new self($this->format('Y-m-01'));}function thisMonthEnd(){return new self($this->format('Y-m-01').' +1 month -1 day');}function nextMonthBegin(){return new self($this->format('Y-m-01').' +1 month');}}class Inflect{protected static$plural=array('/(quiz)$/i'=>"$1zes",'/^(ox)$/i'=>"$1en",'/([m|l])ouse$/i'=>"$1ice",'/(matr|vert|ind)ix|ex$/i'=>"$1ices",'/(x|ch|ss|sh)$/i'=>"$1es",'/([^aeiouy]|qu)y$/i'=>"$1ies",'/(hive)$/i'=>"$1s",'/(?:([^f])fe|([lr])f)$/i'=>"$1$2ves",'/(shea|lea|loa|thie)f$/i'=>"$1ves",'/sis$/i'=>"ses",'/([ti])um$/i'=>"$1a",'/(tomat|potat|ech|her|vet)o$/i'=>"$1oes",'/(bu)s$/i'=>"$1ses",'/(alias)$/i'=>"$1es",'/(octop)us$/i'=>"$1i",'/(ax|test)is$/i'=>"$1es",'/(us)$/i'=>"$1es",'/s$/i'=>"s",'/$/'=>"s");protected static$singular=array('/(quiz)zes$/i'=>"$1",'/(matr)ices$/i'=>"$1ix",'/(vert|ind)ices$/i'=>"$1ex",'/^(ox)en$/i'=>"$1",'/(alias)es$/i'=>"$1",'/(octop|vir)i$/i'=>"$1us",'/(cris|ax|test)es$/i'=>"$1is",'/(shoe)s$/i'=>"$1",'/(o)es$/i'=>"$1",'/(bus)es$/i'=>"$1",'/([m|l])ice$/i'=>"$1ouse",'/(x|ch|ss|sh)es$/i'=>"$1",'/(m)ovies$/i'=>"$1ovie",'/(s)eries$/i'=>"$1eries",'/([^aeiouy]|qu)ies$/i'=>"$1y",'/([lr])ves$/i'=>"$1f",'/(tive)s$/i'=>"$1",'/(hive)s$/i'=>"$1",'/(li|wi|kni)ves$/i'=>"$1fe",'/(shea|loa|lea|thie)ves$/i'=>"$1f",'/(^analy)ses$/i'=>"$1sis",'/((a)naly|(b)a|(d)iagno|(p)arenthe|(p)rogno|(s)ynop|(t)he)ses$/i'=>"$1$2sis",'/([ti])a$/i'=>"$1um",'/(n)ews$/i'=>"$1ews",'/(h|bl)ouses$/i'=>"$1ouse",'/(corpse)s$/i'=>"$1",'/(us)es$/i'=>"$1",'/s$/i'=>"");protected static$irregular=array('move'=>'moves','foot'=>'feet','goose'=>'geese','sex'=>'sexes','child'=>'children','man'=>'men','tooth'=>'teeth','person'=>'people');protected static$uncountable=array('sheep','fish','deer','series','species','money','rice','information','equipment');protected static$abbreviations=array('AD','API','B2B','B2C','C2C','CEO','CFO','COO','CTO','DB','DSA','GEO','GPS','HTML','HTTP','ID','IO','IP','IQ','MD5','MTV','MV','MVC','NBA','OK','P2P','PC','PV','PDF','PHP','QQ','RMB','RSA','SOHO','SHA','SQL','TV','UI','URI','URL','USA','VIP','WC','WEB','WAP','WIFI','XML',);static function pluralize($V){if(in_array(strtolower($V),self::$uncountable))return$V;foreach(self::$irregular as$g=>$D){$g='/'.$g.'$/i';if(preg_match($g,$V))return preg_replace($g,$D,$V);}foreach(self::$plural as$g=>$D){if(preg_match($g,$V))return preg_replace($g,$D,$V);}return$V;}static function singularize($V){if(in_array(strtolower($V),self::$uncountable))return$V;foreach(self::$irregular as$D=>$g){$g='/'.$g.'$/i';if(preg_match($g,$V))return preg_replace($g,$D,$V);}foreach(self::$singular as$g=>$D){if(preg_match($g,$V))return preg_replace($g,$D,$V);}return$V;}static function pluralizeIf($HB,$V){if($HB==1)return"1 $V";else return$HB." ".self::pluralize($V);}static function camelize($V,$lE=false){$iC=explode('_',$V);if($lE){$FE=count($iC)-1;$iC[$FE]=self::pluralize($iC[$FE]);}foreach($iC as&$l){$l=ucfirst($l);if(strlen($l)>1&&strlen($l)<=4){$PE=strtoupper($l);if(in_array($PE,self::$abbreviations)){$l=$PE;}}}return implode('',$iC);}static function flatten($V,$xE='_'){$g='/([A-Z][A-Z0-9]*(?=$|[A-Z][a-z0-9])|[A-Za-z][a-z0-9]+)/';preg_match_all($g,$V,$VB);return strtolower(implode($xE,$VB[0]));}}class Polling{protected$channels=array();function __construct(array$MF=array()){$this->channels=$MF;}function randRoll(){static$CB=0;if($CB===0){shuffle($this->channels);$CB=count($this->channels);}return$this->channels[--$CB];}function roundRobin(&$wC,$NF=1){if(count($this->channels)<2){return current($this->channels);}$vC=null;$ME=0;$WD=0;foreach($this->channels as$TB=>$f){$BC=$f['weight']*$NF;$WD+=$BC;$f['last_value']+=$BC;if(empty($wC)&&$f['last_value']>=$ME){$vC=$TB;$ME=$f['last_value'];}}if(!empty($wC)){$this->channels[$wC]['last_value']-=$WD;return$this->channels[$wC];}else if(!is_null($vC)){$this->channels[$vC]['last_value']-=$WD;return$this->channels[$vC];}}}class Word{protected$content='';function __construct($d=''){$this->content=$d;}static function randHash($Z=6){$Z=$Z>32?32:$Z;$HF=md5(mt_rand().time());$GF=substr($HF,0,$Z);return$GF;}static function randString($Z=6,$AF=2,$bC=''){if(empty($bC)){$bC='abcdefghijkmnpqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ23456789';}srand((float)microtime()*1000000);$QE='';$xC=ceil($Z/$AF);while($Z>0){$bC=str_shuffle($bC);$QE.=substr($bC,0,$xC);$Z-=$xC;$xC=min($Z,$xC);}return$QE;}function hasNonASCII(){return preg_match('/[^\x20-\x7f]/',$this->content);}function fetchFirstURL(){if(preg_match('/^http[^\x23-\x76]/i',$this->content,$VB)){return$VB[1];}}function getNumbers($zE=true){$y=preg_match_all('/[\d.]+/',$this->content,$VB);if($y===0||$y===false){return false;}$DE=implode(current($VB));return$zE?intval($DE):$DE;}function ver2int(){$BD=$this->getNumbers(false);$VD=array_map('intval',explode('.',$BD));$VD=array_pad($VD,3,0);return intval(vsprintf('%d%02d%02d',$VD));}}}
namespace Cute\View{class Compiler{protected$env=null;protected$source_dir='';protected$compiled_dir='';function __construct(){\app()->import('Twig',VENDOR_ROOT.'/Twig/lib');$this->env=new\Twig_Environment();}function addFunction($A,$EF=null){$DF=new\Twig_SimpleFunction($A,$EF);return$this->env->addFunction($A,$DF);}function setSourceDir($aC){$this->source_dir=rtrim($aC,' /\\');if(!file_exists($this->source_dir)){@mkdir($this->source_dir,0777,true);}$IF=new\Twig_Loader_Filesystem(array($this->source_dir));$this->env->setLoader($IF);return$this;}function setCompiledDir($i){$i=rtrim($i,' /\\');if($this->compiled_dir!==$i){$this->compiled_dir=$i;}if(!file_exists($this->compiled_dir)){@mkdir($this->compiled_dir,0777,true);}return$this;}function isSourceRelational(){return true;}function compileFile($nB,$gC,array$S=array()){$d=$this->env->loadTemplate($nB)->render($S);file_put_contents($gC,$d,LOCK_EX);}function compileTpl($k,$nB='',array$S=array()){$k=ltrim(str_replace('\\','/',$k),'/');if(empty($nB)){$nB=$this->source_dir.'/'.$k;}$gC=$this->compiled_dir.'/'.$k;$i=dirname($gC);if(!is_dir($i)){mkdir($i,0777,true);}if($this->isSourceRelational()){$nB=substr($nB,strlen($this->source_dir)+1);}$this->compileFile($nB,$gC,$S);return$gC;}function compileAll($T=false,array$S=array()){if(is_null($T)||$T===false){$T=$this->source_dir;}else{$T=rtrim(str_replace('\\','/',$T),'/');}$HB=0;$yE=scandir($T);foreach($yE as$nC){if($nC==='.'||$nC==='..'){continue;}$_C=$T.'/'.$nC;if(is_dir($_C)){$this->compileAll($_C);}else{$k=substr($_C,strlen($this->source_dir));$this->compileTpl($k,$_C,$S);$HB++;}}return$HB;}}use \Cute\View\Compiler;class Templater{var$compiler=null;var$globals=array();protected$source_dir='';protected$extend_files=array();protected$template_blocks=array();protected$current_block='';function __construct($aC,$i=false){$this->setSourceDir($aC);if($i){$this->setCompileDir($i);}}static function replaceWith($d,array$S=array(),$n='',$UE=''){if(empty($S)){return$d;}if(empty($n)&&empty($UE)){$fD=&$S;}else{$fD=array();foreach($S as$C=>&$E){$fD[$n.$C.$UE]=$E;}}$d=strtr($d,$fD);return$d;}function setSourceDir($aC){$this->source_dir=rtrim($aC,' /\\');if(!file_exists($this->source_dir)){@mkdir($this->source_dir,0777,true);}}function setCompileDir($i){if(is_null($this->compiler)){$this->compiler=new Compiler();}$i=rtrim($i,' /\\');$this->compiler->setSourceDir($this->source_dir);$this->compiler->setCompiledDir($i);$this->setSourceDir($i);return$this;}function updateGlobals(array$_E){if(func_num_args()===1){$this->globals=array_merge($this->globals,$_E);}else{$B=func_get_args();array_unshift($B,$this->globals);$this->globals=exec_function_array('array_merge',$B);}return$this;}function updateFunctions(array$OF){$PF=$this->compiler;foreach($OF as$A=>$c){$PF->addFunction($A,$c);}}function prepareFile($k){if($this->compiler){return$this->compiler->compileTpl($k,'',$this->globals);}else{return$this->source_dir.'/'.$k;}}function render($k,array$S=array()){extract($this->globals);extract($S);include$this->prepareFile($k);if(!empty($this->extend_files)){$QF=array_pop($this->extend_files);foreach($this->extend_files as$u){include$this->prepareFile($u);}extract($this->template_blocks);include$this->prepareFile($QF);}}function extendTpl($k){array_push($this->extend_files,$k);}function includeTpl($k,array$S=array()){extract($this->globals);extract($S);ob_start();include$this->prepareFile($k);$JF=trim(ob_get_clean());echo$JF;}function blockStart($KF='content'){$this->current_block=$KF;ob_start();}function blockEnd(){$LF=trim(ob_get_clean());$this->template_blocks[$this->current_block]=$LF;}}}
namespace Cute\Widget{use \Cute\Utility\Word;class Captcha{const ENCRYPT_SALT='captcha_code_salt';const FILENAME_PREFIX='cc_';var$phrase_size=6;var$width=80;var$height=30;var$font=null;var$finger_print=null;protected$builder=null;protected$savedir='';protected$saveurl='';function __construct($AB=''){\app()->import('Gregwar',VENDOR_ROOT);$this->builder=new\Gregwar\Captcha\CaptchaBuilder();if(!empty($AB)){$this->phrase_size=strlen($AB);$this->builder->setPhrase($AB);}else{$this->refresh();}$this->savedir=APP_ROOT.'/public/assets/captcha';@mkdir($this->savedir,0755,true);$this->saveurl=app()->getAssetURL().'/captcha';}static function newInstance($mE=6,$kE=80,$nE=30,$pE=null,$tE=null){$aB=new self();$aB->phrase_size=$mE;$aB->width=$kE;$aB->height=$nE;$aB->font=$pE;$aB->finger_print=$tE;return$aB;}protected static function encrypt($AB){return md5(strtolower($AB).self::ENCRYPT_SALT);}static function clean($T,$xD=0.3,$LB=60){$sE=mt_rand(1,10000)/10000;if($xD<=0||$xD>=1||$sE<=$xD){$qE=time()-$LB;$QD=glob($T.'cc_*.jpg');foreach($QD as$u){if(fileatime($u)<$qE){unlink($u);}}}}function refresh(){$AB=Word::randString($this->phrase_size);$this->builder->setPhrase($AB);return$this;}function build(array$B=array()){$vE=array($this->width,$this->height,$this->font,$this->finger_print,);exec_method_array($this->builder,'build',$B+$vE);return$this->builder;}function show(){@session_start();$AB=$this->builder->getPhrase();$_SESSION['phrase']=self::encrypt($AB);@header('Content-Type: image/jpeg');$this->build(func_get_args());return$this->builder->output();}function save(){self::clean($this->savedir,0.3,60);$W=uniqid(self::FILENAME_PREFIX).'.jpg';$this->build(func_get_args());$this->builder->save($this->savedir.'/'.$W);$AB=$this->builder->getPhrase();$RB=$this->saveurl.'/'.$W.'#'.self::encrypt($AB);die($RB);}}use \Cute\Cache\Subject;class Counter extends Subject{protected$name='';protected$value=0;protected$maxium=0;function __construct($A,$E=0,$rE=0){$this->name=$A;$this->value=intval($E);$this->maxium=intval($rE);}function setCache($I='\\Cute\\Cache\\RedisCache'){$zC=new$I($this->name);$zC->share($this->value,'intval');$zC->initiate()->readData();$this->attach($zC);return$zC;}function findCaches(){return$this->observers;}function increase($jE=1){$this->value+=$jE;if($this->maxium>0){$this->value=$this->value%$this->maxium;}$this->notify();return$this->value;}}}