<?php
namespace{defined('VENDOR_ROOT')or define('VENDOR_ROOT',APP_ROOT.'/vendor');defined('APP_CLASS')or define('APP_CLASS','\\Cute\\Website');defined('SQL_VERBOSE')or define('SQL_VERBOSE',true);defined('ERROR_LEVEL')or define('ERROR_LEVEL',E_ALL&~E_DEPRECATED&~E_NOTICE);@error_reporting(ERROR_LEVEL);if(!class_exists('\\Cute\\Importer')){require_once SRC_ROOT.'/Cute/Importer.php';}function app($jE=''){static$r=null;if(is_null($r)&&$jE){$iE=\Cute\Importer::getInstance();$iE->addNamespace('Cute',SRC_ROOT);$LC=\Cute\Base\Storage::newInstance($jE);$I=constant('APP_CLASS');$r=new$I($LC);$r->install($iE,array('import'=>'addNamespace'));$r->initiate();}return$r;}function starts_with($RD,$dC){return strncmp($RD,$dC,strlen($dC))===0;}function ends_with($RD,$dC){$eD=strlen($dC);return$eD===0||(strlen($RD)>=$eD&&substr_compare($RD,$dC,-$eD)===0);}function convert($k,$DC='UTF-8'){$DC=strtoupper($DC);if(function_exists('mb_detect_encoding')){return mb_detect_encoding($k,$DC,true)?$k:mb_convert_encoding($k,$DC,'UTF-8, GBK');}else if(function_exists('iconv')){$KF=$DC==='UTF-8'?'GBK':'UTF-8';return iconv($KF,$DC.'//IGNORE',$k);}}function b64decode($k){if(preg_match('!([A-Za-z0-9+/= ]+)!',$k,$XB)){$k=$XB[1];}return base64_decode($k);}function exec_function_array($b,array$B=array()){switch(count($B)){case 0:return$b();case 1:return$b($B[0]);case 2:return$b($B[0],$B[1]);case 3:return$b($B[0],$B[1],$B[2]);case 4:return$b($B[0],$B[1],$B[2],$B[3]);case 5:return$b($B[0],$B[1],$B[2],$B[3],$B[4]);default:if(is_object($b)){$IB=new ReflectionMethod($b,'__invoke');return$IB->invokeArgs($b,$B);}else if(is_callable($b)){$IB=new ReflectionFunction($b);return$IB->invokeArgs($B);}}}function exec_method_array($JB,$X,array$B=array()){if(is_object($JB)){switch(count($B)){case 0:return$JB->{$X}();case 1:return$JB->{$X}($B[0]);case 2:return$JB->{$X}($B[0],$B[1]);case 3:return$JB->{$X}($B[0],$B[1],$B[2]);case 4:return$JB->{$X}($B[0],$B[1],$B[2],$B[3]);case 5:return$JB->{$X}($B[0],$B[1],$B[2],$B[3],$B[4]);}}if(method_exists($JB,$X)){$IB=new ReflectionMethod($JB,$X);if($IB->isPublic()&&!$IB->isAbstract()){if($IB->isStatic()){return$IB->invokeArgs(null,$B);}else{return$IB->invokeArgs($JB,$B);}}}}function exec_construct_array($I,array$B=array()){switch(count($B)){case 0:return new$I();case 1:return new$I($B[0]);case 2:return new$I($B[0],$B[1]);case 3:return new$I($B[0],$B[1],$B[2]);case 4:return new$I($B[0],$B[1],$B[2],$B[3]);case 5:return new$I($B[0],$B[1],$B[2],$B[3],$B[4]);default:if(class_exists($I)){$IB=new ReflectionClass($I);return$IB->newInstanceArgs($B);}}}}
namespace Cute{use \Cute\Importer;use \Cute\Factory;use \Cute\Base\Storage;abstract class Application{protected$shortcuts=array();function __construct(Storage&$LC){$this->install($LC,array('getConfig'));$JF=new Factory($LC);$this->install($JF,array('load'));}function initiate(){return$this;}function install($kD,array$IF){foreach($IF as$PD=>$X){$PD=strtolower(is_numeric($PD)?$X:$PD);$this->shortcuts[$PD]=array($kD,$X);}return$this;}function __call($A,$B){$A=strtolower($A);if(isset($this->shortcuts[$A])){list($kD,$X)=$this->shortcuts[$A];return exec_method_array($kD,$X,$B);}}abstract function run();}abstract class Command{protected$app=null;protected$args=array();protected$pid=0;var$cmdfile='';function __construct($r,$tD,array$hB=array()){$this->app=$r;$this->cmdfile=$tD;list($B,$PB)=self::parse($hB);$this->args=array_merge($B,$PB);}function __clone(){$this->args=array_change_key_case($this->args);}function __toString(){$B=array();foreach($this->args as$C=>$E){if(is_numeric($C)){$B[]=$E;}else if($E===true){$B[]=strlen($C)===1?" -$C":" --$C";}else{$B[]=" --$C='$E'";}}$qB=$this->cmdfile;$qB.=' '.substr(__CLASS__,0,-strlen('Command'));$qB.=' '.implode(' ',$B);return$qB;}static function parse(array$hB){$B=array();$PB=array();foreach($hB as$AC=>$CB){$CB=trim($CB);if($CB==='--'){$B[]=implode(' ',array_slice($hB,$AC+1));break;}if(substr($CB,0,1)!=='-'){$B[]=$CB;}else if(substr($CB,1,1)!=='-'){$gC=str_split(substr($CB,1));foreach($gC as$C){$PB[$C]=true;}}else{if(($aE=strpos($CB,'='))!==false){$C=substr($CB,2,$aE-2);$E=substr($CB,$aE+1);}else{$C=substr($CB,2);$E=true;}if(!array_key_exists($C,$PB)){$PB[$C]=$E;}else{if(!is_array($PB[$C])){$PB[$C]=array($PB[$C]);}$PB[$C][]=$E;}}}return array($B,$PB);}function addArg($E,$C=false){if($C===false||is_null($C)){$this->args[]=$E;}else{$this->args[$C]=$E;}return$this;}function getArg($C=false,$P=null){if($C===false||is_null($C)){return$this->args;}if(isset($this->args[$C])){return$this->args[$C];}else{return$P;}}function popArg($C){if($C===false||is_null($C)){return;}if(isset($this->args[$C])){$E=$this->args[$C];unset($this->args[$C]);return$E;}}function readPid($NC=null){if(!is_null($NC)&&is_readable($NC)){$xB=trim(file_get_contents($NC));if(is_numeric($xB)){$this->pid=$xB;}}return$this->pid;}function isRunning(){if($this->pid>0){try{$D=shell_exec(sprintf('ps %d',$this->pid));return substr_count($D,"\n")>=2;}catch(\Exception$GB){}}return false;}function wait($YF=0.1){while($this->isRunning()){usleep($YF*1000000);}return true;}function stop(){if($this->pid>0&&$this->isRunning()){return posix_kill($this->pid,SIGTERM);}}function fork($NC=null,array$aC=array()){$IC=clone$this;$IC->args=array_merge($IC->args,$aC);$qB=strval($IC);$r=$IC->app;if($r->outfile!==1){$qB.=' > '.$r->getFileSymbol($r->outfile,true);}if($r->errfile!==2){$qB.=' 2 > '.$r->getFileSymbol($r->errfile,true);}if($xB=shell_exec($qB.' & echo $!')){$xB=trim($xB);$IC->pid=intval($xB);if(!is_null($NC)){file_put_contents($NC,$xB.PHP_EOL,LOCK_EX);}}return$IC->pid;}function loop($y=1,$VC=0,$GE=0){if($VC>0){$VC=intval($VC)+time();}do{$this->execute();if($y>0){$y--;}if($GE>0){usleep($GE*1000000);}}while($y===0||$VC<0||$VC<time());}abstract function execute();}use \Cute\Application;use \Cute\Command;use \Cute\Utility\Inflect;class Console extends Application{const STDIN='php://stdin';const STDOUT='php://stdout';const STDERR='php://stderr';const DEVNULL='/dev/null';const COLOR_BLACK=90;const COLOR_RED=91;const COLOR_GREEN=92;const COLOR_YELLOW=93;const COLOR_BLUE=94;const COLOR_MAGENTA=95;const COLOR_CYAN=96;const COLOR_WHITE=97;protected$color=false;var$outfile=1;var$errfile=null;function initiate(){return$this;}static function getFileSymbol($w,$nD=false){if(is_null($w)){return self::DEVNULL;}else if(is_int($w)){if($w===0){return$nD?'&0':self::STDIN;}else if($w===1){return$nD?'&1':self::STDOUT;}else if($w===2){return$nD?'&2':self::STDERR;}}return strval($w);}static function appendTo($QB,$nB=false,$BC=null){if(empty($BC)&&$BC!==0){return 0;}if(is_int($BC)&&is_int($nB)){$QB=sprintf("\033[%dm%s\033[%dm",$nB,$QB,0);}$BC=self::getFileSymbol($BC);return file_put_contents($BC,$QB,FILE_APPEND|LOCK_EX);}function setColor($nB){if(is_string($nB)){$nB='COLOR_'.strtoupper($nB);$this->color=constant(__CLASS__.'::'.$nB);}return$this;}function write($QB){$QB=strval($QB);if(func_num_args()>1){$B=array_slice(func_get_args(),1);$QB=vsprintf($QB,$B);}return self::appendTo($QB,$this->color,$this->outfile);}function writeln($QB){$B=func_get_args();$B[0].=PHP_EOL;return exec_method_array($this,'write',$B);}function mount($c){$TE=func_get_args();foreach($TE as&$c){$c=rtrim($c,DIRECTORY_SEPARATOR);}$VD=PATH_SEPARATOR.implode(PATH_SEPARATOR,$TE);set_include_path(get_include_path().$VD);return$this;}function run(){if(php_sapi_name()!=='cli'){return;}if($_SERVER['argc']<2){return;}$hB=$_SERVER['argv'];$tD=array_shift($hB);$A=array_shift($hB);$I=Inflect::camelize($A).'Command';@require_once$I.'.php';if(class_exists($I)){$a=new$I($this,$tD,$hB);return$a->execute();}}}class Factory{protected$storage=null;protected$objects=array();function __construct(Storage&$LC){$this->storage=$LC;}function normalize($I){return rtrim($I,'\\');}function create($I,$A='default'){$I=$this->normalize($I);$MD=$this->storage->getSectionOnce($I);$H=$MD->getArray($A);if($A!=='default'){$H=array_merge($MD->getArray('default'),$H);}if(class_exists($I)){foreach($H as$C=>&$E){if(starts_with($C,'\\')){$E=$this->load($C,$E);}}return exec_construct_array($I,array_values($H));}}function load($I,$A='default'){$I=$this->normalize($I);if(!isset($this->objects[$I])){$this->objects[$I]=array();if(!isset($this->objects[$I][$A])){$this->objects[$I][$A]=$this->create($I,$A);}}return$this->objects[$I][$A];}}class Handler{protected$app=null;protected$succor=null;function __construct($EC=null){$this->app=app();$this->succor=$EC;}function init($X){return method_exists($this,$X)?$X:'';}function __invoke(){$X=$this->app->getMethod();$B=func_get_args();if($X=$this->init($X)){return exec_method_array($this,$X,$B);}else if($this->succor){return exec_function_array($this->succor,$B);}else{return$this->app->abort(403);}}}if(!function_exists('trait_exists')){function trait_exists($I,$UD){return false;}}final class Importer{private static$instance=null;private$classes=array();private$namespaces=array();private function __construct(){}static function getInstance(){if(is_null(self::$instance)){self::$instance=new self();self::$instance->register();}return self::$instance;}static function exists($I,$UD=true){return class_exists($I,$UD)||interface_exists($I,$UD)||trait_exists($I,$UD);}function autoload($I){$I=trim($I,'\\_');if(isset($this->classes[$I])){require_once$this->classes[$I];return self::exists($I,false);}$QF=$this->checkNamespace($I);return($QF===true);}function register(){return spl_autoload_register(array($this,'autoload'));}function addClass($W,$I){$PE=func_get_args();$W=array_shift($PE);if(is_readable($W)){foreach($PE as$I){$this->classes[trim($I,'\\')]=$W;}}ksort($this->classes);return$this;}function addNamespaceStrip($n,$T){$n=trim($n,'\\');$T=rtrim($T,'\\/');$this->namespaces[$n]=$T;ksort($this->namespaces);return$this;}function addNamespace($n,$T){$n=trim($n,'\\');$cB=strtok($n,'\\_');$T=rtrim($T,'\\/').DIRECTORY_SEPARATOR.$cB;return$this->addNamespaceStrip($n,$T);}function checkNamespace($I){$cB=strtok($I,'\\_');$Y=strlen($cB)+1;if(isset($this->namespaces[$cB])){$c=$this->namespaces[$cB];}else if(isset($this->namespaces[''])){$c=$this->namespaces[''];}else{return false;}$BB=$c.DIRECTORY_SEPARATOR;$BB.=str_replace(array('\\','_'),DIRECTORY_SEPARATOR,substr($I,$Y));if(file_exists($BB.'.php')){require_once$BB.'.php';if(self::exists($I,false)){return true;}}while($cB){$c.=DIRECTORY_SEPARATOR.$cB;if(file_exists($c.'.php')){require_once$c.'.php';if(self::exists($I,false)){return true;}}if(!file_exists($c)){return false;}$cB=strtok('\\_');}}}use \Cute\Context\Router;class Website extends Application{protected$method='';var$url='';var$rule='';function initiate(){$mB=Router::getCurrent();$this->install($mB,array('dispatch','abort','redirect'));$this->install('\\Cute\\Context\\Input',array('getClientIP','input'=>'getInstance',));return$this;}function route($c,$x){$mB=Router::getCurrent();return$mB->route($c,$x);}function mount($_,$YC='*.php'){$mB=Router::getCurrent();$mB->mount($_,$YC);return$this;}function getMethod(){if(empty($this->method)){$vB=$this->input('SERVER');$X=$vB->request('_method','');if(empty($X)){$X=$vB->get('REQUEST_METHOD','GET');}$this->method=strtolower($X);}return$this->method;}function run(){$KG=$this->getConfig('route_key','r');$c=$this->input('GET')->get($KG,'/');try{$TD=$this->dispatch($c);$EC=null;foreach($TD['handlers']as$x){if(empty($x)){continue;}if(is_string($x)&&class_exists($x,true)){$x=new$x($EC);}if($x&&is_callable($x)){$EC=&$x;}}if($EC){$this->url=$TD['url'];$this->rule=$TD['rule'];$OE=exec_function_array($EC,$TD['args']);}}catch(\Exception$GB){$OE=strval($GB);}return die($OE);}}}
namespace Cute\Base{trait Deferring{protected$gG=false;function defer(){register_shutdown_function(function($RG){$RG->__destruct();},$this);}function __destruct(){if($this->closed===false){$this->close();}$this->closed=true;}function close(){}}use \Cute\Context\Input;defined('IP_ECHO_URL')or define('IP_ECHO_URL','http://ipecho.net/plain');class IP{const BYTE_IP_V4=4;const BYTE_IP_V6=6;protected$ipaddr='';function __construct($u=false){$this->ipaddr=$u?:self::getClientIP();}function __toString(){return$this->ipaddr;}static function toHex($u){return sprintf('%08x',ip2long($u));}static function getClientIP(){return Input::getClientIP();;}static function getServerIP(){if($u=file_get_contents(IP_ECHO_URL)){return trim($u);}}static function getHostIP($hC,$AE=array()){$SE=dns_get_record($hC,DNS_A,$hG,$oG);if($SE&&$u=$SE[0]['ip']){return$u;}else if($AE){return$AE[array_rand($AE)];}}}class Mocking{protected$inner=null;private function __construct(&$aD=null){$this->inner=$aD;}static function mock(&$aD=null){$lD=new self($aD);return$lD->isReady()?$lD->inner:$lD;}function __call($A,$mD){return false;}function __set($A,$E){return false;}function __get($A){return;}function isReady(){return!is_null($this->inner);}}use \ArrayObject;class Storage extends ArrayObject{const CONFIG_SECTION_NAME='configs';function __construct($vB=array(),$VG=ArrayObject::ARRAY_AS_PROPS){parent::__construct($vB,$VG);}static function newInstance($W,$IE=false){$W.=empty($IE)?'':$IE;assert(is_readable($W));return new self(include$W);}function getItem($A,$P=null){$WB=$this->offsetGet($A);return is_null($WB)?$P:$WB;}function getArray($A,array$P=array()){$H=$this->getItem($A);return is_array($H)?$H:$P;}function getSection($A){$H=$this->getArray($A,array());return new self($H);}function getSectionOnce($A){$H=$this->getItem($A);if(!($H instanceof self)){$H=new self($H);$this->offsetSet($A,$H);}return$H;}function getConfig($A,$P=null){$MD=$this->getSectionOnce(self::CONFIG_SECTION_NAME);return$MD->getItem($A,$P);}}}
namespace Cute\Cache{use \SplSubject;use \SplObserver;abstract class BaseCache implements SplObserver{protected$data=null;protected$ttl=0;protected$coerce=false;function share(&$H,$dD=false,$dG=0){$this->data=&$H;$this->coerce=$dD;$this->ttl=intval($dG);return$this;}function update(SplSubject$kG=null){if($dD=$this->coerce){$this->data=$dD($this->data);}$this->writeData();}abstract function initiate();abstract function readData();abstract function removeData();abstract function writeData($pC=false);}class FileCache extends BaseCache{protected$filename='';protected$ext='.php';function __construct($A,$T=false){if(empty($T)){$T=sys_get_temp_dir();}else{$T=rtrim($T,DIRECTORY_SEPARATOR);@mkdir($T,0755,true);}$this->filename=$T.DIRECTORY_SEPARATOR.$A.$this->ext;}function initiate(){if(!is_readable($this->filename)){touch($this->filename);}return$this;}function readData(){$O=filesize($this->filename);if($O>0){$this->data=(include$this->filename);}return$this->data;}function writeData($pC=false){$e="<?php \nreturn ".var_export($this->data,true).";\n";$O=file_put_contents($this->filename,$e);return$O&&$O>0;}function removeData(){if(file_exists($this->filename)){return unlink($this->filename);}}}class MemCache extends BaseCache{use\Cute\Base\Deferring;const MEMCACHE_WEIGHT_UNIT=12;protected$name='';protected$memcache=null;protected$host='';protected$port=0;protected$persistent=false;protected$weight=1;function __construct($A,$VB='127.0.0.1',$KB=11211,$fG=false,$KC=1){$this->name=$A;$this->host=$VB;$this->port=intval($KB);$this->persistent=$fG;$this->weight=intval($KC);}function initiate(){if(extension_loaded('memcache')){$this->memcache=new\Memcache();try{$this->connect();}catch(\Exception$GB){$this->memcache=null;}}return$this;}function connect(){$KC=intval($this->weight)*self::MEMCACHE_WEIGHT_UNIT;$this->memcache->addServer($this->host,$this->port,$this->persistent,$KC);}function close(){$this->memcache->close();}function readData(){$H=$this->memcache->get($this->name);if($H!==false){return$H;}}function writeData($pC=false){return$this->memcache->set($this->name,$this->data,MEMCACHE_COMPRESSED,$this->ttl);}function removeData(){if($this->memcache->exists($this->name)){return$this->memcache->delete($this->name);}}}class RedisCache extends BaseCache{use\Cute\Base\Deferring;protected$name='';protected$redis=null;protected$host='';protected$port=0;protected$params=array('persistent'=>false,'socket'=>null,'serializer'=>null,);function __construct($A,$VB='127.0.0.1',$KB=6379,array$M=array()){$this->name=$A;$this->host=$VB;$this->port=intval($KB);if(isset($M['socket'])&&is_string($M['socket'])){if(starts_with($M['socket'],'unix://')){$M['socket']=substr($M['socket'],7);}}$this->params=array_merge($this->params,$M);}function initiate(){if(extension_loaded('redis')){$this->redis=new\Redis();try{$this->connect();}catch(\Exception$GB){$this->redis=null;}}return$this;}function connect(){if(isset($this->params['socket'])){$B=array($this->params['socket']);}else{$B=array($this->host,$this->port);}$bG=$this->params['persistent']?'pconnect':'connect';exec_method_array($this->redis,$bG,$B);if($YD=$this->params['serializer']){$YD=constant('\\Redis::SERIALIZER_'.$YD);$this->redis->setOption(\Redis::OPT_SERIALIZER,$YD);}}function close(){$this->redis->close();}function readData(){$H=$this->redis->get($this->name);if($H!==false){$this->data=$H;return$this->data;}}function writeData($pC=false){return$this->redis->set($this->name,$this->data,$this->ttl);}function removeData(){if($this->redis->exists($this->name)){return$this->redis->del($this->name);}}}class Subject implements SplSubject{protected$observers=array();function attach(SplObserver$oC){$this->observers[]=$oC;}function detach(SplObserver$oC){$C=array_search($oC,$this->observers,true);if($C){unset($this->observers[$C]);}}function notify(){foreach($this->observers as&$oC){$oC->update($this);}}}class TSVCache extends FileCache{protected$delimiter="\t";protected$ext='.csv';function __construct($A,$T=false,$oE=''){parent::__construct($A,$T);if(!empty($oE)){$this->delimiter=$oE;}}function readData($ZE=0){$this->data=array();$HB=fopen($this->filename,'rb');if($HB===false){return$this->data;}do{$GC=fgetcsv($HB,0,$this->delimiter);if(is_null($GC)||$GC===false){break;}if(is_null($GC[0])){$GC=array();}if($ZE>0&&count($GC)<$ZE){continue;}$this->data[]=$GC;}while(1);fclose($HB);return$this->data;}function writeData($pC=false){$bD=0;$HB=fopen($this->filename,'wb');if($HB===false){return$bD;}foreach($this->data as$g){$bD+=fputcsv($HB,$g,$this->delimiter);}fclose($HB);return$bD;}}class TextCache extends FileCache{protected$ext='.txt';function encode($H){return$H;}function decode($H){return$H;}function readData(){$O=filesize($this->filename);if($O>0){$e=file_get_contents($this->filename);$this->data=$this->decode($e);}return$this->data;}function writeData($pC=false){$e=$this->encode($this->data);$O=file_put_contents($this->filename,$e,LOCK_EX);return$O&&$O>0;}}class XSONCache extends TextCache{protected$ext='.json';function encode($H){return json_encode($H);}function decode($H){return json_decode($H);}}class YAMLCache extends TextCache{protected$ext='.yml';function encode($H){if(extension_loaded('yaml')){return yaml_emit($H,YAML_UTF8_ENCODING,YAML_LN_BREAK);}else if(class_exists('sfYamlDumper',true)){$HG=new\sfYamlDumper();return$HG->dump($H);}}function decode($H){if(extension_loaded('yaml')){return yaml_parse($H);}else if(class_exists('sfYamlParser',true)){$GG=new\sfYamlParser();return$GG->parse($H);}}}}
namespace Cute\Commun{use \Cute\Base\Mocking;defined('GEARMAN_SUCCESS')or define('GEARMAN_SUCCESS',0);class WorkerException extends\Exception{}class Job{protected$json='';function __construct($MC){$this->json=$MC;}function workload(){return$this->json;}}class JobServer{use\Cute\Base\Deferring;var$worker_file='';var$callbacks=array();protected$host='';protected$timeout=-1;protected$client=null;protected$worker=null;function __construct($VB='127.0.0.1',$mF=-1,$dE=false){$this->host=$VB;$this->timeout=$mF;if(!empty($dE)){$this->worker_file=$dE;}}function close(){unset($this->client);unset($this->worker);unset($this->callbacks);}function call($A,$MC){$iD=$this->getClient();$D=@exec_method_array($iD,'doNormal',array($A,$MC));if($iD->returnCode()!==GEARMAN_SUCCESS){throw new WorkerException($iD->error());}return$D;}function __call($A,$B){$MC=json_encode($B);try{$D=$this->call($A,$MC);}catch(WorkerException$GB){if($this->worker_file){defined('WORKER_RUNNING')or define('WORKER_RUNNING',true);require_once$this->worker_file;}if($this&&$lF=$this->$A){$nF=new Job($MC);$D=$lF($nF);}}return$D;}function __set($A,$b){$this->callbacks[$A]=$b;$qF=$this->getWorker();return$qF->addFunction($A,$b);}function __get($A){if(isset($this->callbacks[$A])){return$this->callbacks[$A];}}function getClient(){if(!$this->client){if(class_exists('\\GearmanClient')){$this->client=new\GearmanClient();$this->client->addServer($this->host);}else{$this->client=Mocking::mock();}if($this->timeout>=0){$this->client->setTimeout($this->timeout);}}return$this->client;}function getWorker(){if(!$this->worker){if(class_exists('\\GearmanWorker')){$this->worker=new\GearmanWorker();$this->worker->addServer($this->host);}else{$this->worker=Mocking::mock();}}return$this->worker;}function run(){if(!defined('WORKER_RUNNING')){define('WORKER_RUNNING',true);while($this->getWorker()->work());}}}use \Unirest\Request;class cURL{const CONN_FAIL_ERRNO=7;const DNS_FAIL_ERRNO=28;}}
namespace Cute\Context{class Input{protected static$instances=array();protected static$client_ip='-';protected$input_type=null;protected$data=array();protected$done=false;protected function __construct($TB='POST'){$this->input_type=constant('INPUT_'.$TB);if($TB==='REQUEST'){$this->raw_data=$_REQUEST;}assert(!is_null($this->input_type));}function __call($A,$mD){if(starts_with($A,'get')&&count($mD)>0){$F=substr($A,3);@list($C,$P)=$mD;return$this->get($C,$P,$F);}}static function getInstance($TB='POST'){$TB=strtoupper($TB);if(!isset(self::$instances[$TB])){$fB=new static($TB);self::$instances[$TB]=$fB;}return self::$instances[$TB];}static function request($C,$P=null,$F=false){$pF=self::getInstance('POST');$E=$pF->get($C,$P,$F);if($E===$P){$kF=self::getInstance('GET');$E=$kF->get($C,$P,$F);}return$E;}static function getClientIP(){if(strlen(self::$client_ip)>=7){return self::$client_ip;}$gC=array('HTTP_CLIENT_IP','HTTP_X_REAL_IP','HTTP_X_FORWARDED_FOR','HTTP_X_FORWARDED','HTTP_X_CLUSTER_CLIENT_IP','HTTP_FORWARDED_FOR','HTTP_FORWARDED','REMOTE_ADDR');$jF=self::getInstance('SERVER');foreach($gC as$C){$u=$jF->get($C);if($u&&strlen($u)>=7){self::$client_ip=$u;break;}}return self::$client_ip;}static function detectType($F){$F=empty($F)?'string':strtolower($F);foreach(filter_list()as$A){if(ends_with($A,$F)){return filter_id($A);}}}static function coerce($E,$F='raw'){if(is_array($E)){foreach($E as$C=>$nC){if(is_array($F)&&isset($F[$C])){$mE=$F[$C];}else{$mE=$F;}$E[$C]=self::coerce($nC,$mE);}}else{$F=strtolower($F);if($F==='int'||$F==='float'){settype($E,$F);}else if($F==='array'){$E=(array)$E;}else if($F!=='raw'){settype($E,'string');}}return$E;}protected function filterData($C,$F){$F=self::detectType($F);return filter_input($this->input_type,$C,$F);}protected function filterArrayData($kB){if(is_array($kB)){foreach($kB as$C=>&$F){if(is_array($F)){$F['filter']=self::detectType($F['filter']);}else{$F=self::detectType($F);}}}else{$kB=self::detectType($kB);}return filter_input_array($this->input_type,$kB);}function get($C,$P=null,$F=false){if(!array_key_exists($C,$this->data)){if(is_array($P)){$F=array($C=>array('filter'=>$F,'flags'=>FILTER_FORCE_ARRAY));$H=$this->filterArrayData($F);$this->data=array_merge($this->data,$H);}else{$E=$this->filterData($C,$F);if(is_null($E)||$E===false){$E=self::coerce($P,$F);}$this->data[$C]=$E;}}return$this->data[$C];}function all($C=false,$kB=false){if($this->done===false){$this->data=$this->filterArrayData($kB);}if(is_null($this->data)){$this->data=array();}if($C===false){return$this->data;}else if(array_key_exists($C,$this->data)){return$this->data[$C];}}}use \Cute\Context\Input;class Locale{protected$language='';protected$locale_dir='';protected$timezone='Asia/Shanghai';function __construct($WD='',$YB=''){if(empty($WD)){$WD=APP_ROOT.'/protected/locales';}$this->locale_dir=$WD;$this->timezone=$YB;}function detectLanguage(){$vB=Input::getInstance('SERVER');$RB=strstr($vB->get('LANG',''),'.',true);if(empty($RB)){$fF=$vB->get('HTTP_ACCEPT_LANGUAGE','');preg_match_all('/([a-z]{2}\-?[A-Z]{0,2})/',$fF,$XB);foreach($XB[0]as$RB){$RB=str_replace('-','_',$RB);if(file_exists($this->locale_dir.'/'.$RB)){break;}}}return$RB;}function setLocale($RB,$hC='messages'){if($RB){$this->language=$RB;}else{$this->language=$this->detectLanguage();}putenv('LANG='.$this->language);setlocale(LC_ALL,$this->language);bindtextdomain($hC,$this->locale_dir);bind_textdomain_codeset($hC,'UTF-8');textdomain($hC);return$this->language;}function setTimezone($YB){if($YB){$this->timezone=$YB;}@date_default_timezone_set($this->timezone);return$this->timezone;}}class Router{protected static$current=null;static$aliases=array('<int>'=>'([0-9\-]+)','<float>'=>'([0-9\.\-]+)','<num>'=>'([0-9\.\-,]*)','<string>'=>'([a-z0-9\-_]+)','<page>'=>'([0-9]*)/?([0-9]*)/?','<path>'=>'([a-z0-9\-_/])');protected$filename='';protected$prefix='';protected$children=array();protected$items=array();function __construct($W='',$q='/'){$this->filename=$W;$this->prefix=rtrim($q,'/');self::$current=$this;if($W&&is_readable($W)){include_once$W;}}static function getCurrent(){if(is_null(self::$current)){self::$current=new self();}return self::$current;}static function toPrefix($W){$gF=strstr(basename($W),'.');$hF=substr($W,0,-strlen($gF));$q=str_replace(DIRECTORY_SEPARATOR,'/',$hF);return strtolower(rtrim($q,'/'));}static function compileUrl($SB,$sF=false){$SB=preg_quote(strtolower(rtrim($SB,'/')));$gC=array_map('preg_quote',array_keys(self::$aliases));$R=array_values(self::$aliases);$SB=str_replace($gC,$R,$SB);$YC=($sF===false)?'':'(.*)?';return'!^'.$SB.'/?'.$YC.'$!';}function route($c,&$x){$QC=self::compileUrl($c);if(func_num_args()>2){$ND=array_slice(func_get_args(),1);}else{$ND=array($x);}$this->items[$QC]=$ND;return$QC;}function mount($_,$YC='*.php'){$_=rtrim($_,DIRECTORY_SEPARATOR);$LD=glob($_.'/'.$YC,GLOB_BRACE);if(!empty($LD)){$BG=strlen($_);foreach($LD as$W){$q=self::toPrefix(substr($W,$BG));$this->children[$q]=$W;}}return$this;}function dispatch($c,$fE=false){$c=rtrim(strtolower($c),' /').'/';if(!$fE){krsort($this->children);}foreach($this->children as$q=>$W){if(starts_with($c,$q)){$mB=new self($W,$q);$c=substr($c,strlen($q));return$mB->dispatch($c);}}if(!$fE){krsort($this->items);}foreach($this->items as$QC=>$ND){if(preg_match($QC,$c,$B)===1){$SB=$this->prefix.array_shift($B);return array('handlers'=>&$ND,'args'=>$B,'url'=>$SB,'rule'=>$QC);}}$this->abort(404);return array('handlers'=>array());}function abort($CG=500){return@http_response_code($CG);}function redirect($DG='',$FG=false){$_F=$FG?301:302;@header('Location: '.$DG,true,$_F);return die();}}class Session{}}
namespace Cute\DB{use \DateTime;use \PDO;use \PDOException;use \Cute\DB\Literal;use \Cute\Utility\Inflect;use \Cute\View\Templater;abstract class Database{const DB_ACTION_READ='R';const DB_ACTION_WRITE='W';protected$pdo=null;protected$user='';protected$password='';protected$dbname='';protected$tblpre='';protected$host='';protected$port=0;protected$charset='';protected$past_sqls=array();function __construct($zF,$uF,$v,$_B='',$VB='127.0.0.1',$KB=0,$gE=''){$this->user=$zF;$this->password=$uF;$this->dbname=$v;$this->tblpre=$_B;$this->host=$VB;if(intval($KB)>0){$this->port=intval($KB);}if(!empty($gE)){$this->charset=$gE;}}function getPDO(){if(!$this->pdo){$this->connect($this->dbname,$this->tblpre);}return$this->pdo;}function getPastSQL($v=false,$l=0){if($v===true||$v==='*'){return$this->past_sqls;}$v=empty($v)?$this->dbname:$v;$kE=$this->past_sqls[$v];$l=empty($l)?0:-abs($l);return$l?array_slice($kE,$l,null,true):$kE;}function getDriverName(){$QD=$this->getPDO()->getAttribute(PDO::ATTR_DRIVER_NAME);$QD=strtolower($QD);return$QD==='dblib'?'sqlsrv':$QD;}function inline($p){return new Literal($p);}function quote($p){if(is_null($p)){return Literal::quoteNull();}else if($p instanceof Literal||$p instanceof DateTime){return Literal::quote($p);}else{$F=is_int($p)?PDO::PARAM_INT:PDO::PARAM_STR;return$this->getPDO()->quote($p,$F);}}function embed($G,array$M=array()){foreach($M as&$p){$p=$this->quote($p);}$G=str_replace('?','%s',$G);return vsprintf($G,$M);}function execute($G,array$M=array()){if(!empty($M)){$G=$this->embed($G,$M);}try{$D=$this->getPDO()->exec($G);}catch(PDOException$GB){$Z="SQL: $G\n".$GB->getMessage();throw new PDOException($Z);}if(SQL_VERBOSE){$this->past_sqls[$this->dbname][]=array('act'=>self::DB_ACTION_WRITE,'sql'=>$G,);}return$D;}function query($G,array$M=array()){try{$d=$this->getPDO()->prepare($G);if($d->execute($M)){$d->setFetchMode(PDO::FETCH_ASSOC);}}catch(PDOException$GB){$G=$this->embed($G,$M);$Z="SQL: $G\n".$GB->getMessage();throw new PDOException($Z);}if(SQL_VERBOSE){$G=$this->embed($G,$M);$this->past_sqls[$this->dbname][]=array('act'=>self::DB_ACTION_READ,'sql'=>$G,);}return$d;}function fetch($G,array$M=array(),$rC=false){if($d=$this->query($G,$M)){if(is_numeric($rC)){$D=$d->fetchColumn(intval($rC));}else{$D=$d->fetch();if($D&&$rC){$D=isset($D[$rC])?$D[$rC]:null;}}$d->closeCursor();return$D;}}function transact(callable$vF){$oD=$this->getPDO();if($oD->beginTransaction()){$B=func_get_args();array_unshift($B,$this);try{$vF($B);$oD->commit();}catch(PDOException$GB){$oD->rollBack();}}}function listTables(){if(empty($this->tblpre)){$G="SHOW TABLES FROM ?";$p=$this->getDBName();}else{$G="SHOW TABLES LIKE ?";$p=str_replace('_','\_',$this->tblpre).'%';}$D=array();if($d=$this->query($G,array($p))){$yF=strlen($this->tblpre);while($K=$d->fetchColumn(0)){$D[]=substr($K,$yF);}$d->closeCursor();}return$D;}function readFields($K){$L=$this->getColumns($K);$t=array();$NB=array();foreach($L as$J){if($J->isPrimaryKey()){$t[]=$J->name;}$P=$J->default;$hE=$J->getCategory();if($hE==='int'){$P=intval($P);}else if($hE==='float'){$P=floatval($P);}$NB[$J->name]=$P;}return compact('table','pkeys','fields');}function generateModel($T,$K,$U='',$n='',$xF=false){if(empty($U)){$U=$xF?Inflect::singularize($K):$K;$U=Inflect::camelize($U);}$T=rtrim($T,DIRECTORY_SEPARATOR).DIRECTORY_SEPARATOR;if($n){$T.=str_replace('\\',DIRECTORY_SEPARATOR,trim($n));if(!file_exists($T)){mkdir($T,0777,true);}}$W=$T.DIRECTORY_SEPARATOR.$U.'.php';if(class_exists($n.'\\'.$U)){return$W;}$H=$this->readFields($K);$H['name']=$U;$H['ns']=$n;$H['mixin']=null;$H['relations_in_mixin']=false;$SD=$n.'\\'.$U.'Mixin';if(trait_exists($SD,true)){foreach($H['fields']as$OD=>$P){if(property_exists($SD,$OD)){unset($H['fields'][$OD]);}}$H['mixin']=$SD;$H['relations_in_mixin']=method_exists($SD,'getRelations');}$vC=new Templater(SRC_ROOT);ob_start();$vC->render('model_tpl.php',$H);$e="<?php\n\n".trim(ob_get_clean());file_put_contents($W,$e);return$W;}static function csvline($g,$pB="\t",$cC=PHP_EOL,$ZB='"',$UC=null){foreach($g as&$WB){if(is_null($WB)){$WB=$UC;}else if(is_string($WB)){if(strpbrk($WB," $pB")!==false){$WB="$ZB$WB$ZB";}}}return implode($pB,$g).$cC;}abstract function connect($v,$_B='',$JC=false);abstract function getLimit($Y,$l=0);abstract function getColumns($K);}use \HandlerSocketi;class HandlerSocket{const HS_PORT_R=9998;const HS_PORT_RW=9999;protected$handler=null;protected$query=null;protected$read_only=false;protected$dbname='';protected$table='';protected$fields=array();protected$index=null;function __construct($v,$VB='127.0.0.1',$KB=0,$wF=false){$this->dbname=$v;$this->read_only=$wF;if(empty($KB)){$KB=$this->read_only?self::HS_PORT_R:self::HS_PORT_RW;}$this->handler=new HandlerSocketi($VB,$KB);}function open($K,$NB){if(is_string($NB)){$NB=explode(',',str_replace(' ','',$NB));}$this->table=$K;$this->fields=$NB;$this->query=null;return$this;}protected function prepare($EB=null){if(empty($this->query)||$this->index!==$EB){$this->index=$EB;$zD=empty($this->index)?array():array('index'=>$this->index);$this->query=$this->handler->open_index($this->dbname,$this->table,$this->fields,$zD);}return$this->query;}function insert(array$wC){$C=$this->index;$D=$this->prepare($C)->insert($wC);return$D!==false;}function delete($E){if(func_num_args()>1){$C=$E;$E=func_get_arg(1);}else{$C=null;}return$this->prepare($C)->remove($E);}function truncate($KD){$RC=array();$C=null;$KD=is_array($KD)?$KD:func_get_args();foreach($KD as$UB){$RC[]=array('remove',$UB);}$D=$this->prepare($C)->multi($RC);$tF=create_function('$a,$b','return $a && $b;');return array_reduce($D,$tF,true);}function update(array$OC,$C,$E){return$this->prepare($C)->update($E,$OC);}function get($E){if(func_num_args()>1){$C=$E;$E=func_get_arg(1);}else{$C=null;}$D=$this->prepare($C)->find($E);if(empty($D)){return($D===false)?false:null;}return array_combine($this->fields,$D[0]);}function all($C=null,$o='>=',$E=0,$OB=0,$l=0){$aC=array();if($OB>0){$aC['limit']=$OB;}if($l>0){$aC['offset']=$l;}$E=array($o=>$E);$D=$this->prepare($C)->find($E,$aC);if($D===false){return false;}foreach($D as&$g){$g=array_combine($this->fields,$g);}return$D;}function in($C,$E){$RC=array();$R=array_slice(func_get_args(),1);if(count($R)===1&&is_array($R[0])){$R=$R[0];}foreach($R as$E){$RC[]=array('find',$E);}$D=$this->prepare($C)->multi($RC);if($D===false){return false;}$HC=exec_function_array('array_merge',$D);foreach($HC as&$g){$g=array_combine($this->fields,$g);}return$HC;}}class Literal{protected static$format="'%s'";protected$value;function __construct($E){$this->value=$E;}function __toString(){return strval($this->value);}static function quoteNull(){return'NULL';}static function quote($E){if(is_null($E)){return self::quoteNull();}else if($E instanceof self){return strval($E);}if($E instanceof DateTime){$E=$E->format('Y-m-d H:i:s');}else if(is_string($E)){$E=convert($E,'UTF-8');}else{$E=strval($E);}return sprintf(self::$format,$E);}}use \Cute\DB\Database;class MySQL extends Database{protected$port=3306;protected$charset='utf8';protected$lower_table_name=null;function connect($v,$_B='',$JC=false){$rD=sprintf('mysql:host=%s;port=%d;charset=%s',$this->host,$this->port,$this->charset);$zD=array(PDO::ATTR_ERRMODE=>PDO::ERRMODE_EXCEPTION,PDO::MYSQL_ATTR_INIT_COMMAND=>sprintf("SET NAMES '%s'",$this->charset),);$this->pdo=new PDO($rD,$this->user,$this->password,$zD);if($JC){$this->pdo->exec(sprintf("CREATE DATABASE IF NOT EXIST `%s`",$this->dbname));}$this->pdo->exec(sprintf("USE `%s`",$this->dbname));$this->tblpre=$_B;if(!array_key_exists($this->dbname,$this->past_sqls)){$this->past_sqls[$this->dbname]=array();}return$this;}function needTableToLower(){if(is_null($this->lower_table_name)){$G="SHOW Variables LIKE 'lower_case_table_names'";$EG=$this->fetch($G,array(),'Value');$this->lower_table_name=intval($EG)===1;}return$this->lower_table_name;}function getTableName($K,$PC=false){$N=$this->tblpre.$K;if($this->needTableToLower()){$N=strtolower($N);}return$PC?'`'.$N.'`':$N;}function getLimit($Y,$l=0){if($l>0){$OB=sprintf(" LIMIT %d, %d",$l,$Y);}else{$OB=sprintf(" LIMIT %d",$Y);}return array("",$OB);}function getPKey($K){$N=$this->getTableName($K);$G="SELECT COLUMN_NAME FROM information_schema.COLUMNS"." WHERE TABLE_SCHEMA=? AND TABLE_NAME=? AND COLUMN_KEY='PRI'";$M=array($this->dbname,$N);return$this->fetch($G,$M,0);}function getColumns($K){$N=$this->getTableName($K);$L=array('COLUMN_NAME','COLUMN_DEFAULT','COLUMN_KEY','IS_NULLABLE','COLUMN_TYPE','DATA_TYPE','CHARACTER_MAXIMUM_LENGTH','NUMERIC_PRECISION','NUMERIC_SCALE','DATETIME_PRECISION',);$G="SELECT %s FROM information_schema.COLUMNS"." WHERE TABLE_SCHEMA=? AND TABLE_NAME=? ORDER BY ORDINAL_POSITION";$G=sprintf($G,implode(', ',$L));$M=array($this->dbname,$N);if($d=$this->query($G,$M)){$CE=PDO::FETCH_CLASS|PDO::FETCH_PROPS_LATE;$D=$d->fetchAll($CE,'\\Cute\\ORM\\Column');$d->closeCursor();return$D;}}function isExists($K){$N=$this->getTableName($K);$G="SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES"." WHERE TABLE_NAME=? AND (TABLE_SCHEMA=? OR TABLE_CATALOG=?)";$M=array($N,$this->dbname,$this->dbname);$K=$this->fetch($G,$M,0);return$N===$K;}function getCreateSQL($K,$zB,$EE=false,$DE=false){$N=$this->getTableName($K);if($EE){$G="CREATE TABLE `%s` LIKE `%s`";return sprintf($G,$zB,$N);}else if($DE){$JC=sprintf("CREATE TABLE `%s`",$N);$G=$this->fetch("SHOW $JC",array(),'Create Table');$G=preg_replace('/(AUTO_INCREMENT=\d+)/','AUTO_INCREMENT=1',$G,1);$AG=sprintf("CREATE TABLE IF NOT EXISTS `%s`",$zB);return str_replace($JC,$AG,$G);}else{$gB="";$CC="";$s="";$L=$this->getColumns();foreach($L as$J){$A=$J->name;$P=trim($J->default,"()");if($J->getCategory()==='char'){$Y=intval($J->length);$F=($Y>255||$Y<0)?"text":"varchar($Y)";}else if($J->getCategory()==='int'){$wB=intval($J->precision);if($P===''){$P="0";}$F=$J->type."($wB)";}else if($J->getCategory()==='float'){$wB=intval($J->precision);$pD=intval($J->scale);if($P===''){$P="0.0";}$F=$J->type;if($J->type==='real'){$F='float';}else if($J->type==='money'){$F='numeric';}$F.="($wB,$pD)";}else if($J->getCategory()==='datetime'){$F='datetime';}else{$F=$J->type;}if($J->isPrimaryKey()){$gB="    `$A` int(10) unsigned NOT NULL AUTO_INCREMENT,";$CC="PRIMARY KEY (`$A`)";}else if(starts_with($F,'date')||ends_with($F,'text')){$s.="    `$A` $F NULL,\n";}else if($J->isNullable()){$s.="    `$A` $F NULL,\n";}else{$s.="    `$A` $F NOT NULL DEFAULT '$P',\n";}}$vC=<<<EOD
CREATE TABLE IF NOT EXISTS `%s` (
%s
%s
    %s
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT
EOD
;if(empty($gB)){$s=rtrim($s,",\n");}$G=sprintf($vC,$zB,$gB,$s,$CC);return$G;}}function sqlToFile($G,$BB,$pB="\t",$cC=PHP_EOL,$ZB='"',$UC=null){@mkdir(dirname($BB),0664,true);$JD="FIELDS TERMINATED BY '".addslashes($pB)."'";$JD.=" LINES TERMINATED BY '".addslashes($cC)."'";if($ZB){$JD.=" OPTIONALLY ENCLOSED BY '".addslashes($ZB)."'";}if($rF){$JD.=" FIELDS ESCAPED BY '".addslashes($rF)."'";}$SC=sys_get_temp_dir().DIRECTORY_SEPARATOR.basename($BB);$iF="$G INTO OUTFILE '$SC' $JD";try{if(file_exists($SC)){unlink($SC);}$this->db->execute($iF);if(file_exists($SC)){rename($SC,$BB);$oB=shell_exec('wc -l '.$BB.' | cut -d" " -f1');$oB=trim($oB);return is_numeric($oB)?intval($oB):0;}}catch(\Exception$GB){}}}class Query{const COUNT_INSERT_BULK_MAX=500;static$db_actions=array('select','update','delete','insert','insertBulk','apply',);protected$table='';protected$constrains=array();protected$parameters=array();protected$offset=0;protected$length=-1;protected$additions=array('GROUP BY'=>null,'HAVING'=>null,'ORDER BY'=>null,);function __construct($K){$this->table=$K;}function getTable(){return$this->table;}function deduceWhere($sB='',array&$B=array()){$i=implode(' AND ',$this->constrains);$M=$this->parameters;if(!empty($sB)){if($i){$i='('.$i.') OR ('.$sB.')';}else{$i=$sB;}if(count($B)>0){$M=array_merge($M,$B);}}$i=$i?'WHERE '.$i:'';return array($i,$M);}protected function deduceTail($mG=''){$cF=func_get_args();$uC="";foreach($this->additions as$C=>$E){if(!is_null($E)&&!in_array($C,$cF)){$uC.=" $C $E";}}return$uC;}function groupBy($dF,$eF=null){$this->additions['GROUP BY']=$dF;$this->additions['HAVING']=$eF;return$this;}function orderBy($cE,$FD=''){if($FD){$cE.=' '.strtoupper($FD);}$this->additions['ORDER BY']=$cE;return$this;}function setPage($mC,$DB=1,$rB=0){$this->length=intval($mC)<0?-1:intval($mC);if($this->length>0){$DB=intval($DB);if($DB<0&&$rB>0){$oF=ceil($rB/$this->length);$DB+=$oF+1;}if($DB>0){$this->offset=($DB-1)*$this->length;}}return$this;}function contain($OD,array$R){$AB=count($R);if($AB===0){$o='IS NULL';}else if($AB===1){$o='= ?';}else{$aB=implode(', ',array_fill(0,count($R),'?'));$o='IN ('.$aB.')';}$R=array_values($R);$this->constrains[]="$OD $o";$this->parameters=array_merge($this->parameters,$R);return$this;}function filter($FC,$E,$o='= ?'){$o=empty($o)?false:strtoupper($o);if(is_array($E)){if(substr_count($o,'?')===count($E)){$this->constrains[]="$FC $o";$this->parameters=array_merge($this->parameters,$E);}else{$this->contain($FC,$E);}}else if(is_null($E)){if(trim($o)==='<>'){$this->constrains[]="$FC IS NOT NULL";}else{$this->constrains[]="$FC IS NULL";}}else{$this->constrains[]=($o===false)?$FC:"$FC $o";$this->parameters[]=$E;}return$this;}static function getSelectSQL($N,$L='*',$q=""){if(is_object($L)){$L=get_object_vars($L);}if(is_array($L)){array_walk($L,create_function('&$v,$k','if(!is_numeric($k))$v.=" as ".$k;'));$L=implode(', ',$L);}$L=trim($L);$G="SELECT $q$L FROM $N";return$G;}function select(Database&$Q,$L='*',$eE='fetchAll',array$lC=array(),$sB='',array&$B=array()){$ED="";$OB="";if(starts_with($L,'COUNT')){$uC=$this->deduceTail('ORDER BY');}else{$uC=$this->deduceTail();if($this->length>0){list($ED,$OB)=$Q->getLimit($this->length,$this->offset);}}$N=$Q->getTableName($this->getTable(),true);list($i,$M)=$this->deduceWhere($sB='',$B);$G=self::getSelectSQL($N,$L,$ED);$G.=($i?' '.$i:'').$uC.$OB;$d=$Q->query(rtrim($G),$M);if($d&&$eE){$D=exec_method_array($d,$eE,$lC);$d->closeCursor();return$D;}}function apply(Database&$Q,$b){$b=strtoupper($b);$B=array_slice(func_get_args(),2);if(empty($B)){$L=$b==='COUNT'?'*':'';}else{$L=implode(', ',$B);}$L=$b.'('.$L.')';$D=$this->select($Q,$L,'fetchColumn');return$D;}function delete(Database&$Q){$N=$Q->getTableName($this->getTable(),true);list($i,$M)=$this->deduceWhere();$G="DELETE FROM $N $i";if(empty($i)&&$Q->getDriverName()==='mysql'){$G="TRUNCATE $N";}return$Q->execute(rtrim($G),$M);}static function getUpdateSet(array$OC){$lE=array();$R=array();foreach($OC as$C=>$nC){$lE[]=$C.'=?';$R[]=$nC;}$ZD="SET ".implode(', ',$lE);return array($ZD,$R);}function update(Database&$Q,array$OC,$eB=false){list($i,$M)=$this->deduceWhere();list($ZD,$R)=self::getUpdateSet($OC);$jC=$eB?'UPDATE DELAYED':'UPDATE';$N=$Q->getTableName($this->getTable(),true);$G="$jC $N $ZD $i";$M=array_merge($R,$M);return$Q->execute(rtrim($G),$M);}static function getInsertSQL($N,array$L,$eB=false,$kC=false){if($kC===true){$jC=$eB?'REPLACE DELAYED':'REPLACE INTO';}else{$jC=$eB?'INSERT DELAYED':'INSERT INTO';}if($AB=count($L)){$L=implode(',',$L);$aB=implode(', ',array_fill(0,$AB,'?'));return array("$jC $N ($L)",$aB);}else{return array("$jC $N",'');}}function insert(Database&$Q,array$wC,$eB=false,$kC=false){$N=$Q->getTableName($this->getTable(),true);list($G,$aB)=self::getInsertSQL($N,array_keys($wC),$eB,$kC);if(!empty($aB)){$G.=" VALUES ($aB)";$M=array_values($wC);if($Q->execute($G,$M)){return$Q->getPDO()->lastInsertId();}}}function insertBulk(Database&$Q,array$HC,array$L=null,$eB=false,$kC=false){assert(count($HC)>0);if(empty($L)){$L=array_keys(reset($HC));}$N=$Q->getTableName($this->getTable(),true);list($G,$aB)=self::getInsertSQL($N,$L,$eB,$kC);$cG=array_chunk($HC,self::COUNT_INSERT_BULK_MAX);foreach($cG as$pE){$WG=array_fill(0,count($pE),"($aB)");$G.=" VALUES ".implode(', ',$WG);$XG=array_map('array_values',$pE);$M=exec_funcution_array('array_merge',$XG);$Q->execute($G,$M);}}}class SQLServer extends Database{protected$port=1433;protected$charset='utf8';function connect($v,$_B='',$JC=false){$rD=sprintf('dblib:host=%s;port=%d;charset=%s',$this->host,$this->port,$this->charset);$this->pdo=new PDO($rD,$this->user,$this->password);$this->pdo->exec(sprintf("USE `%s`",$this->dbname));$this->tblpre=$_B;if(!array_key_exists($this->dbname,$this->past_sqls)){$this->past_sqls[$this->dbname]=array();}return$this;}function getTableName($K,$PC=false){$N=$this->tblpre.$K;return$PC?'['.$N.']':$N;}function getLimit($Y,$l=0){$ED=sprintf("TOP %d ",$Y);return array($ED,"");}function getPKey($K){$N=$this->getTableName($K);$G="SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.%s WHERE TABLE_SCHEMA='dbo'"." AND TABLE_CATALOG=? AND TABLE_NAME=? ORDER BY ORDINAL_POSITION";$M=array($this->dbname,$N);$tB=$this->fetch(sprintf($G,'KEY_COLUMN_USAGE'),$M,0);if(empty($tB)){$tB=$this->fetch(sprintf($G,'COLUMNS'),$M,0);}return$tB;}function getColumns($K){$N=$this->getTableName($K);$L=array('COLUMN_NAME','COLUMN_DEFAULT','COLUMN_KEY','IS_NULLABLE','COLUMN_TYPE','DATA_TYPE','CHARACTER_MAXIMUM_LENGTH','NUMERIC_PRECISION','NUMERIC_SCALE','DATETIME_PRECISION',);$G="SELECT %s FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA='dbo'"." AND TABLE_CATALOG=? AND TABLE_NAME=? ORDER BY ORDINAL_POSITION";$G=sprintf($G,implode(', ',$L));$M=array($this->dbname,$N);if($d=$this->query($G,$M)){$CE=PDO::FETCH_CLASS|PDO::FETCH_PROPS_LATE;$D=$d->fetchAll($CE,'\\Cute\\ORM\\Column');$d->closeCursor();return$D;}}function isExists($K){$N=$this->getTableName($K);$G="SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='dbo'"." AND TABLE_CATALOG=? AND TABLE_NAME=?";$M=array($this->dbname,$this->table);$K=$this->fetch($G,$M,0);return$N===$K;}function getCreateSQL($zB,$L=array(),$EE=false,$DE=false){$gB="";$CC="";$s="";$L=$this->getColumns();if($EE||$DE){foreach($L as$J){if($J->getCategory()==='char'){$F="[".$J->type."](".intval($J->length).")";}else if($J->type==='numeric'){$F="[numeric](".$J->precision.", ".$J->scale.")";}else{$F="[".$J->type."]";}if($J->isPrimaryKey()){$gB="    [$A] $F IDENTITY(1,1) NOT FOR REPLICATION NOT NULL,";$CC="PRIMARY KEY NONCLUSTERED ( [$A] ASC )";}else{$YG=$J->isNullable()?"NULL":"NOT NULL DEFAULT ".$J->default;$s.="    [$A] $F $YG,\n";}}}else{foreach($L as$J){$P=trim($J->default,"()");if($J->getCategory()==='char'){$Y=intval($J->length);$F=($Y>255||$Y<0)?"text":"varchar($Y)";}else if($J->getCategory()==='int'){$wB=intval($J->precision);if($P===''){$P="0";}$F=$J->type."($wB)";}else if($J->getCategory()==='float'){$wB=intval($J->precision);$pD=intval($J->scale);if($P===''){$P="0.0";}$F=$J->type;if($J->type==='real'){$F='float';}else if($J->type==='money'){$F='numeric';}$F.="($wB,$pD)";}else if($J->getCategory()==='datetime'){$F='datetime';}else{$F=$J->type;}if($J->isPrimaryKey()){$gB="    [$A] $F IDENTITY(1,1) NOT FOR REPLICATION NOT NULL,";$CC="PRIMARY KEY NONCLUSTERED ( [$A] ASC )";}else if(starts_with($F,'date')||ends_with($F,'text')){$s.="    [$A] $F NULL,\n";}else if($J->isNullable()){$s.="    [$A] $F NULL,\n";}else{$s.="    [$A] $F NOT NULL DEFAULT '$P',\n";}}}$vC=<<<EOD
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES
    WHERE TABLE_SCHEMA='dbo' AND TABLE_NAME='%s')
BEGIN
CREATE TABLE [dbo].[%s] (
%s
%s
    CONSTRAINT [PK_%s]
    %s
    WITH ( PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF,
        ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON )
    ON [PRIMARY]
) ON [PRIMARY]
END
EOD
;if(empty($gB)){$s=rtrim($s,",\n");}$G=sprintf($vC,$zB,$zB,$gB,$s,$zB,$CC);return$G;}function sqlToFile($G,$BB,$pB="\t",$cC=PHP_EOL,$ZB='"',$UC=null){@mkdir(dirname($BB),0664,true);$HB=fopen($BB,'wb');$oB=0;$XE=$this->query($G);while($g=$XE->fetch()){if(is_null($UC)){fputcsv($HB,$g,$pB,$ZB);}else{fwrite($HB,self::csvline($g,$pB,$cC,$ZB,$UC));}$oB++;}$XE->closeCursor();fclose($HB);return$oB;}}}
namespace Cute\Logging{use \Cute\Logging\Logger;defined('LOG_WRITE_FILE_FREQ')or define('LOG_WRITE_FILE_FREQ',1);class FileLogger extends Logger{use\Cute\Base\Deferring;protected$filename='';protected$records=array();function __construct($A='',$_=false,$GD=false){$this->filename=($A?$A.'_':'').'%s.log';if($_===false){$_=realpath('./logs');}if(is_dir($_)||mkdir($_,0777,true)){$this->filename=$_.DIRECTORY_SEPARATOR.$this->filename;}parent::__construct($GD);$this->defer();}function close(){$this->writeFiles();unset($this->records);}function writeFiles(){foreach($this->records as$ZG=>&$FE){$w=sprintf($this->filename,$ZG);$VD=implode('',$FE);$O=file_put_contents($w,$VD,FILE_APPEND|LOCK_EX);if($O!==false){$FE=array();}}}function append(){$aG=implode(' ',func_get_args());$xD=date('Ymd');if(!isset($this->records[$xD])){$this->records[$xD]=array();}array_push($this->records[$xD],$aG.PHP_EOL);}function rawlog($dB,$Z,array$S=array()){$dB=strtoupper($dB);if($this->compareLevel($dB)){$e=self::format($Z,$S);$u=self::getClientIP();$eG=date('Y-m-d H:i:s');$this->append($eG,$u,$dB,$e);}if(LOG_WRITE_FILE_FREQ>=1||LOG_WRITE_FILE_FREQ>=mt_rand(1,10000)/10000){$this->writeFiles();}}}use \Cute\Context\Input;use \Cute\View\Templater;abstract class Logger{const EMERGENCY='EMERGENCY';const ALERT='ALERT';const CRITICAL='CRITICAL';const ERROR='ERROR';const WARNING='WARNING';const NOTICE='NOTICE';const INFO='INFO';const DEBUG='DEBUG';protected$threshold=false;protected$threshold_value=null;function __construct($GD=false){if($GD===false){$this->threshold=self::DEBUG;}else{$this->threshold=strtoupper($GD);}}static function format($Z,array$S=array()){$e=is_null($Z)?'':(string)$Z;return Templater::replaceWith($e,$S,'{','}');}static function getClientIP(){return Input::getClientIP();}function compareLevel($dB){static$HD=array(self::EMERGENCY=>0,self::ALERT=>1,self::CRITICAL=>2,self::ERROR=>3,self::WARNING=>4,self::NOTICE=>5,self::INFO=>6,self::DEBUG=>7,);if(is_null($this->threshold_value)&&isset($HD[$this->threshold])){$this->threshold_value=$HD[$this->threshold];}if(isset($HD[$dB])){return$HD[$dB]<=$this->threshold_value;}}function emergency($Z,array$S=array()){$this->rawlog(self::EMERGENCY,$Z,$S);}function alert($Z,array$S=array()){$this->rawlog(self::ALERT,$Z,$S);}function critical($Z,array$S=array()){$this->rawlog(self::CRITICAL,$Z,$S);}function error($Z,array$S=array()){$this->rawlog(self::ERROR,$Z,$S);}function warning($Z,array$S=array()){$this->rawlog(self::WARNING,$Z,$S);}function notice($Z,array$S=array()){$this->rawlog(self::NOTICE,$Z,$S);}function info($Z,array$S=array()){$this->rawlog(self::INFO,$Z,$S);}function debug($Z,array$S=array()){$this->rawlog(self::DEBUG,$Z,$S);}abstract function rawlog($dB,$Z,array$S=array());abstract function close();}}
namespace Cute\ORM{use \Cute\ORM\Relation;class BelongsTo extends Relation{protected$another_foreign_key='';function __construct($U='',$BE=''){parent::__construct($U);$this->another_foreign_key=$BE;}function getAnotherForeignKey($A){if(empty($this->another_foreign_key)){$this->another_foreign_key=$A.'_id';}return$this->another_foreign_key;}function relative($A,array&$D){if(empty($D)){return array();}$t=exec_method_array($this->model,'getPKeys');if(empty($t)){return array();}$LB=$this->getAnotherForeignKey($A);$R=$this->getAttrs($D,$LB);$yB=$this->getMapper();$yB->combine(reset($t),$R,true);$this->setAttrs($D,$R,$A,$LB);return$R;}}use \Cute\ORM\Model;class Column extends Model{protected static$_keys=array('COLUMN_NAME'=>'name','COLUMN_DEFAULT'=>'default','COLUMN_KEY'=>'index','IS_NULLABLE'=>'nullable','COLUMN_TYPE'=>'column','DATA_TYPE'=>'type','CHARACTER_MAXIMUM_LENGTH'=>'length','NUMERIC_PRECISION'=>'precision','NUMERIC_SCALE'=>'scale','DATETIME_PRECISION'=>'datetime',);var$name='';var$default=null;var$index=null;var$nullable='YES';var$column='';var$type='';var$length=null;var$precision=null;var$scale=null;var$datetime=null;static function getTable(){return'COLUMNS';}function __set($JE,$E){if(isset(self::$_keys[$JE])){$A=self::$_keys[$JE];$this->$A=$E;}}function isPrimaryKey(){return$this->index==='PRI';}function isNullable(){return$this->nullable==='YES';}function getCategory(){if(!is_null($this->datetime)){return'datetime';}else if(!is_null($this->precision)){return$this->scale>0?'float':'int';}else if(!is_null($this->length)){return'char';}else{return$this->type;}}}use \Cute\DB\Database;use \Cute\Utility\Inflect;class HasMany extends Relation{protected$foreign_key='';protected$is_unique=false;function __construct($U='',$gD=''){parent::__construct($U);$this->foreign_key=$gD;}function bind(Database&$Q,$K=''){if(empty($this->foreign_key)){$this->foreign_key=Inflect::singularize($K).'_id';}return parent::bind($Q,$K);}function getForeignKey(){return$this->foreign_key;}function relative($A,array&$D){if(empty($D)){return array();}$LB=$this->getForeignKey();$R=$this->getAttrs($D);$yB=$this->getMapper();$yB->combine($LB,$R,$this->is_unique);$P=$this->is_unique?null:array();$this->setAttrs($D,$R,$A,false,$P);return$R;}}use \Cute\ORM\HasMany;class HasOne extends HasMany{protected$is_unique=true;}class ManyToMany extends HasMany{protected$another_foreign_key='';protected$middle_table='';function __construct($U='',$gD='',$BE='',$UG=''){parent::__construct($U,$gD);$this->another_foreign_key=$BE;$this->middle_table=$UG;}function getAnotherForeignKey($A){if(empty($this->another_foreign_key)){$this->another_foreign_key=$A.'_id';}return$this->another_foreign_key;}function relative($A,array&$D){if(empty($D)){return array();}$t=exec_method_array($this->model,'getPKeys');if(empty($t)){return array();}$LB=$this->getForeignKey();$R=$this->getAttrs($D);$yB=$this->getMapper('',$this->middle_table);$yB->combine($LB,$R,false);$MG=$this->getAnotherForeignKey($A);$xC=array();foreach($R as$C=>$E){foreach($E as$LG=>$nC){$EB=$nC->$MG;$R[$C][$LG]=$EB;$xC[$EB]=null;}}$yB=$this->getMapper();$yB->combine(reset($t),$xC,true);foreach($D as&$a){$C=$a->getID();if(!isset($R[$C])){continue;}$tC=array();foreach($R[$C]as$EB){$tC[]=&$xC[$EB];}$a->$A=$tC;}return$xC;}}use \PDO;use \Cute\DB\Query;class Mapper{protected$db=null;protected$query=null;protected$model='';protected$table='';protected$fetch_style=0;protected$relations=array();protected$nothing=false;function __construct(Database&$Q,$U='',$K=''){$this->db=$Q;$this->table=$K;if($U&&is_object($U)){$U=get_class($U);}$this->setModel($U);}function setModel($U){$this->fetch_style=PDO::FETCH_CLASS;if(empty($U)){$this->model='\\Cute\\ORM\\Model';}else{$this->model=$U;if(method_exists($this->model,'__set')||method_exists($this->model,'__construct')){$this->fetch_style=$this->fetch_style|PDO::FETCH_PROPS_LATE;}if(empty($this->table)){$this->table=exec_method_array($this->model,'getTable');}}return$this;}function getDB(){return$this->db;}function getModel(){return$this->model;}function getQuery(){if(!$this->query){$this->query=new Query($this->getTable());}return$this->query;}function getTable(){return$this->table;}function getTableName($PC=false){$Q=$this->getDB();return$Q->getTableName($this->getTable(),$PC);}function setPage($mC,$DB=1){$DB=intval($DB);if($DB<0&&intval($mC)>0){$rB=intval($this->count());}else{$rB=0;}$this->getQuery()->setPage($mC,$DB,$rB);return$this;}function setNothing($IG=true){$this->nothing=$IG;return$this;}function join($A='*'){$U=exec_construct_array($this->model);$jD=$U->getRelations();if($A==='*'){$this->relations=&$jD;}else{$JG=func_get_args();foreach($JG as$A){if($A&&isset($jD[$A])){$this->relations[$A]=&$jD[$A];}}}return$this;}function all($L='*',$jB=null,$sB='',array&$B=array()){$Q=$this->getDB();if($this->nothing){$D=array();}else{$z=$this->getQuery();$jB=empty($jB)?$this->fetch_style:$jB;$lC=array($jB,$this->getModel());$D=$z->select($Q,$L,'fetchAll',$lC,$sB,$B);}if(is_array($D)){$K=$this->getTable();foreach($this->relations as$A=>&$NG){$NG->bind($Q,$K)->relative($A,$D);}return$D;}}function get($UB,$C=false,$L='*',$N=''){if(empty($C)){$t=exec_method_array($this->getModel(),'getPKeys');if(empty($t)){return;}$C=reset($t);}$this->getQuery()->filter($C,$UB)->setPage(1,1);$tC=$this->all($L);return count($tC)>0?reset($tC):null;}function combine($LB,array&$D,$OG=false,$L='*'){if(empty($LB)||count($D)===0){return$D;}$Q=$this->getDB();$z=$this->getQuery();$z->contain($LB,array_keys($D));if($L==='*'){$N=$this->getTableName(true);$L=sprintf('%s,%s.*',$LB,$N);}$bF=$OG?PDO::FETCH_UNIQUE:PDO::FETCH_GROUP;$jB=$this->fetch_style|$bF;$lC=array($jB,$this->getModel());$D=$z->select($Q,$L,'fetchAll',$lC);return$D;}function __call($A,$B){$z=$this->getQuery();if(!method_exists($z,$A)){array_unshift($B,$A);$A='apply';}if(in_array($A,Query::$db_actions)){$Q=$this->getDB();array_unshift($B,$Q);return exec_method_array($z,$A,$B);}else{$D=exec_method_array($z,$A,$B);return($D instanceof Query)?$this:$D;}}}class Model{protected static$_fields=array();static function getTable(){return'';}static function getPKeys(){return array();}function getRelations(){return array();}function getFields(){$K=$this->getTable();if(!isset(self::$_fields[$K])){$NB=get_object_vars($this);foreach($NB as$A=>$P){if(starts_with($A,'_')){unset($NB[$A]);}}self::$_fields[$K]=&$NB;}return self::$_fields[$K];}function getID($AC=0){if($t=$this->getPKeys()){$tB=$t[$AC];return$this->$tB;}}function setID($UB){if($t=$this->getPKeys()){foreach($t as$AC=>$tB){$this->$tB=func_get_arg($AC);}}return$this;}function isExists(){$UB=$this->getID();return$UB!==0&&!is_null($UB);}}use \Cute\ORM\NestedSet;trait NestedMixin{protected$jG=0;protected$lG=0;var$iG=0;var$nG=null;function getRelations(){return array('children'=>new NestedSet(__CLASS__),);}function getLow(){return$this->low_value;}function getHigh(){return$this->high_value;}function isLeaf(){return$this->getHigh()-$this->getLow()===1;}function recur($b){$b($this);foreach($this->children as$sC){$sC->recur($b);}}}class NestedSet extends Relation{function relative($A,array&$D){$z=$this->getMapper()->orderBy('low_value');if(!empty($D)){$KE=array_pop($D);$B=array($KE->getLow(),$KE->getHigh());$z->filter('low_value',$B,'BETWEEN ? AND ?');}$N=$z->getTableName(true);$L=sprintf('low_value,%s.*',$N);$jB=PDO::FETCH_CLASS|PDO::FETCH_UNIQUE;$ID=$z->all($L,$jB);if(count($ID)===0){return;}$AC=0;$qC=array();$D=reset($ID);foreach($ID as$TC=>&$a){$a->$A=array();if(!$a->isLeaf()){$qC[$TC+1]=$TC;}if(isset($qC[$TC])){$a->parent=&$ID[$qC[$TC]];$a->depth=$a->parent->depth+1;array_push($a->parent->$A,$a);$RE=$a->getHigh();if($RE<$a->parent->getHigh()-1){$qC[$RE+1]=$qC[$TC];}}}return$D;}}use \Cute\ORM\Mapper;abstract class Relation{protected$mapper=null;protected$model='';function __construct($U=''){$this->model=empty($U)?'\\Cute\\ORM\\Model':$U;}function getModel(){return$this->model;}function bind(Database&$Q,$K=''){$this->mapper=new Mapper($Q,$this->model);return$this;}function getMapper($U='',$K=''){if(empty($U)&&empty($K)){return$this->mapper;}else{$Q=$this->mapper->getDB();return new Mapper($Q,$U,$K);}}protected function getAttrs(array&$D,$iC=false){$ME=array();foreach($D as&$a){$C=$iC?$a->$iC:$a->getID();$ME[$C]=null;}return$ME;}protected function setAttrs(array&$D,array&$R,$A,$iC=false,$P=null){foreach($D as&$a){$C=$iC?$a->$iC:$a->getID();if(isset($R[$C])){$a->$A=&$R[$C];}else{$a->$A=$P;}}}abstract function relative($A,array&$D);}}
namespace Cute\Utility{class Binary{use\Cute\Base\Deferring;protected$filename='';protected$fp=null;protected$term_size=0;protected$offset_size=0;protected$index_first=0;protected$index_last=0;protected$index_total=0;function __construct($W='',$LE=0,$NE=0){$this->filename=$W;if($LE>0){$this->term_size=$LE;}if($NE>0){$this->offset_size=$NE;}}function initiate($TG='read'){if(empty($this->filename)){$this->fp=tmpfile();return$this;}if(!file_exists($this->filename)){@mkdir(dirname($this->filename),0755,true);touch($this->filename,0666);}$SG=($TG==='read')?'rb':'wb';$this->fp=fopen($this->filename,$SG);return$this;}function isBOM(){return false;}function isStopNearStart(){return false;}function getIndexSize(){$AB=$this->isStopNearStart()?2:1;return$this->term_size*$AB+$this->offset_size;}function close(){if($this->fp){fclose($this->fp);$this->fp=null;}}function tell(){return ftell($this->fp);}function seek($iB,$yD=SEEK_SET){if($yD===SEEK_SET){$iB=abs($iB);}else if($yD===SEEK_END){$iB=-abs($iB);}$D=fseek($this->fp,$iB,$yD);return$D===0;}function truncate($PG=0){return ftruncate($this->fp,$PG);}function read($O=1){if($O===1){return fgetc($this->fp);}else if($O>1){return fread($this->fp,$O);}}function readString($V=''){while(1){$wD=$this->read();if($wD===false||ord($wD)===0){break;}$V.=$wD;}return$V;}function readHex($O=1){$f=bin2hex($this->read($O));if(!$this->isBOM()&&$O>1){$f=implode('',array_reverse(str_split($f,2)));}return$f;}function readInt($O=4){$F='C';if($O===2){$F=$this->isBOM()?'n':'v';}else if($O===4){$F=$this->isBOM()?'N':'V';}else if($O===8){$F=$this->isBOM()?'J':'P';}$QG=unpack($F.'int',$this->read($O));return$QG['int'];}function readNumber($O=3){$f=$this->readHex($O);return intval($f,16);}function readHeaders(){$this->seek(0);$this->index_first=$this->readInt();$this->index_last=$this->readInt();$O=$this->index_last-$this->index_first;$bB=$this->getIndexSize();if($bB>0){$this->index_total=floor($O/$bB)+1;}return$this->index_total;}function write($H){return fwrite($this->fp,$H);}function writeString($V,$QE=null,$uB=false){$V.=(is_string($QE)?$QE:chr(0));return$uB?$V:$this->write($V);}function writeHex($f,$O=false,$uB=false){if(empty($O)){$O=ceil(strlen($f)/2);}$f=self::padHex($f,$O,'left');if(!$this->isBOM()&&$O>1){$f=implode('',array_reverse(str_split($f,2)));}$ZC=@hex2bin($f);return$uB?$ZC:$this->write($ZC);}function writeInt($H,$O=4,$uB=false){$F='C';if($O===2){$F=$this->isBOM()?'n':'v';}else if($O===4){$F=$this->isBOM()?'N':'V';}else if($O===8){$F=$this->isBOM()?'J':'P';}$ZC=pack($F,$H);return$uB?$ZC:$this->write($ZC);}function writeNumber($H,$O=3,$uB=false){$f=dechex(intval($H));return$this->writeHex($f,$O,$uB);}function writeHeaders($DD=''){$this->seek(0);$this->writeInt($this->index_first);$this->writeInt($this->index_last);if($DD){$this->writeString($DD);}}function writeOffset($iB){return$this->writeNumber($iB,$this->offset_size);}function appendIndexes(Binary&$XC){$this->index_first=$this->tell();$O=$XC->tell();if($O===0){$XC->seek(0,SEEK_END);$O=$XC->tell();}$XC->seek(0);$this->write($XC->read($O));$bB=$this->getIndexSize();$this->index_last=$this->tell()-$bB;return$this->writeNumber($iB,$this->term_size);}function compare($l,$hD,$bB){$this->seek($this->index_first+$l*$bB);$FF=$this->readHex($this->term_size);$this->seek(-$this->term_size,SEEK_CUR);return strcmp($hD,$FF);}static function binSearch(&$a,$X,$hD,$rB,$bB){$CD=0;$vD=$rB;do{$qD=$CD+floor(($vD-$CD)/2);$sD=$a->$X($qD,$hD,$bB);if($sD>0){$CD=$qD;}else if($sD<0){$vD=$qD;}else{break;}}while($vD-$CD>1);return$sD;}static function padHex($f,$O,$FD='left'){if(is_int($f)){$f=dechex($f);}$EF=(strtolower($FD)==='left')?STR_PAD_LEFT:STR_PAD_RIGHT;return str_pad($f,$O*2,'0',$EF);}}use \DateTime;use \DateTimeZone;class Calendar extends DateTime{protected$timestamp=0;function __construct($cD='now',$YB=null){if(is_null($YB)&&$P=constant('DEFAULT_TIMEZONE')){$YB=new DateTimeZone($P);}if(is_numeric($cD)){parent::__construct('now',$YB);$this->setTimestamp($cD);}else{parent::__construct($cD,$YB);}}function format($WE='Y-m-d H:i:s'){$D=parent::format($WE);if(strpos($WE,'星期w')!==false){$VF=array('星期0'=>'星期日','星期1'=>'星期一','星期2'=>'星期二','星期3'=>'星期三','星期4'=>'星期四','星期5'=>'星期五','星期6'=>'星期六');$D=strtr($D,$VF);}return$D;}static function parseDurtion($MB){if(empty($MB)){return 0;}if(is_int($MB)||is_float($MB)){return$MB;}if(is_string($MB)){$VE=strtolower(substr($MB,-1));if(is_numeric($VE)){return floatval($MB);}$MB=trim(substr($MB,0,-1));$y=1;switch($VE){case'w':$y*=7;case'd':$y*=24;case'h':$y*=60;case'm':$y*=60;}return floatval($MB)*$y;}}function thisMonthBegin(){return new self($this->format('Y-m-01'));}function thisMonthEnd(){return new self($this->format('Y-m-01').' +1 month -1 day');}function nextMonthBegin(){return new self($this->format('Y-m-01').' +1 month');}}class Inflect{protected static$plural=array('/(quiz)$/i'=>"$1zes",'/^(ox)$/i'=>"$1en",'/([m|l])ouse$/i'=>"$1ice",'/(matr|vert|ind)ix|ex$/i'=>"$1ices",'/(x|ch|ss|sh)$/i'=>"$1es",'/([^aeiouy]|qu)y$/i'=>"$1ies",'/(hive)$/i'=>"$1s",'/(?:([^f])fe|([lr])f)$/i'=>"$1$2ves",'/(shea|lea|loa|thie)f$/i'=>"$1ves",'/sis$/i'=>"ses",'/([ti])um$/i'=>"$1a",'/(tomat|potat|ech|her|vet)o$/i'=>"$1oes",'/(bu)s$/i'=>"$1ses",'/(alias)$/i'=>"$1es",'/(octop)us$/i'=>"$1i",'/(ax|test)is$/i'=>"$1es",'/(us)$/i'=>"$1es",'/s$/i'=>"s",'/$/'=>"s");protected static$singular=array('/(quiz)zes$/i'=>"$1",'/(matr)ices$/i'=>"$1ix",'/(vert|ind)ices$/i'=>"$1ex",'/^(ox)en$/i'=>"$1",'/(alias)es$/i'=>"$1",'/(octop|vir)i$/i'=>"$1us",'/(cris|ax|test)es$/i'=>"$1is",'/(shoe)s$/i'=>"$1",'/(o)es$/i'=>"$1",'/(bus)es$/i'=>"$1",'/([m|l])ice$/i'=>"$1ouse",'/(x|ch|ss|sh)es$/i'=>"$1",'/(m)ovies$/i'=>"$1ovie",'/(s)eries$/i'=>"$1eries",'/([^aeiouy]|qu)ies$/i'=>"$1y",'/([lr])ves$/i'=>"$1f",'/(tive)s$/i'=>"$1",'/(hive)s$/i'=>"$1",'/(li|wi|kni)ves$/i'=>"$1fe",'/(shea|loa|lea|thie)ves$/i'=>"$1f",'/(^analy)ses$/i'=>"$1sis",'/((a)naly|(b)a|(d)iagno|(p)arenthe|(p)rogno|(s)ynop|(t)he)ses$/i'=>"$1$2sis",'/([ti])a$/i'=>"$1um",'/(n)ews$/i'=>"$1ews",'/(h|bl)ouses$/i'=>"$1ouse",'/(corpse)s$/i'=>"$1",'/(us)es$/i'=>"$1",'/s$/i'=>"");protected static$irregular=array('move'=>'moves','foot'=>'feet','goose'=>'geese','sex'=>'sexes','child'=>'children','man'=>'men','tooth'=>'teeth','person'=>'people');protected static$uncountable=array('sheep','fish','deer','series','species','money','rice','information','equipment');protected static$abbreviations=array('AD','API','B2B','B2C','C2C','CEO','CFO','COO','CTO','DB','DSA','GEO','GPS','HTML','HTTP','ID','IO','IP','IQ','MD5','MTV','MV','MVC','NBA','OK','P2P','PC','PV','PDF','PHP','QQ','RMB','RSA','SOHO','SHA','SQL','TV','UI','URI','URL','USA','VIP','WC','WEB','WAP','WIFI','XML',);static function pluralize($V){if(in_array(strtolower($V),self::$uncountable))return$V;foreach(self::$irregular as$h=>$D){$h='/'.$h.'$/i';if(preg_match($h,$V))return preg_replace($h,$D,$V);}foreach(self::$plural as$h=>$D){if(preg_match($h,$V))return preg_replace($h,$D,$V);}return$V;}static function singularize($V){if(in_array(strtolower($V),self::$uncountable))return$V;foreach(self::$irregular as$D=>$h){$h='/'.$h.'$/i';if(preg_match($h,$V))return preg_replace($h,$D,$V);}foreach(self::$singular as$h=>$D){if(preg_match($h,$V))return preg_replace($h,$D,$V);}return$V;}static function pluralizeIf($AB,$V){if($AB==1)return"1 $V";else return$AB." ".self::pluralize($V);}static function camelize($V,$RF=false){$WC=explode('_',$V);if($RF){$UE=count($WC)-1;$WC[$UE]=self::pluralize($WC[$UE]);}foreach($WC as&$k){$k=ucfirst($k);if(strlen($k)>1&&strlen($k)<=4){$YE=strtoupper($k);if(in_array($YE,self::$abbreviations)){$k=$YE;}}}return implode('',$WC);}static function flatten($V,$PF='_'){$h='/([A-Z][A-Z0-9]*(?=$|[A-Z][a-z0-9])|[A-Za-z][a-z0-9]+)/';preg_match_all($h,$V,$XB);return strtolower(implode($PF,$XB[0]));}}class Polling{protected$channels=array();function __construct(array$NF=array()){$this->channels=$NF;}function randRoll(){static$EB=0;if($EB===0){shuffle($this->channels);$EB=count($this->channels);}return$this->channels[--$EB];}function roundRobin(&$zC,$OF=1){if(count($this->channels)<2){return current($this->channels);}$yC=null;$HE=0;$_D=0;foreach($this->channels as$UB=>$g){$KC=$g['weight']*$OF;$_D+=$KC;$g['last_value']+=$KC;if(empty($zC)&&$g['last_value']>=$HE){$yC=$UB;$HE=$g['last_value'];}}if(!empty($zC)){$this->channels[$zC]['last_value']-=$_D;return$this->channels[$zC];}else if(!is_null($yC)){$this->channels[$yC]['last_value']-=$_D;return$this->channels[$yC];}}}class Word{protected$content='';function __construct($e=''){$this->content=$e;}static function randHash($Y=6){$Y=$Y>32?32:$Y;$GF=md5(mt_rand().time());$DF=substr($GF,0,$Y);return$DF;}static function randString($Y=6,$AF=2,$bC=''){if(empty($bC)){$bC='abcdefghijkmnpqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ23456789';}srand((float)microtime()*1000000);$nE='';$_C=ceil($Y/$AF);while($Y>0){$bC=str_shuffle($bC);$nE.=substr($bC,0,$_C);$Y-=$_C;$_C=min($Y,$_C);}return$nE;}function hasNonASCII(){return preg_match('/[^\x20-\x7f]/',$this->content);}function fetchFirstURL(){if(preg_match('/^http[^\x23-\x76]/i',$this->content,$XB)){return$XB[1];}}function getNumbers($ZF=true){$y=preg_match_all('/[\d.]+/',$this->content,$XB);if($y===0||$y===false){return false;}$qE=implode(current($XB));return$ZF?intval($qE):$qE;}function ver2int(){$DD=$this->getNumbers(false);$fD=array_map('intval',explode('.',$DD));$fD=array_pad($fD,3,0);return intval(vsprintf('%d%02d%02d',$fD));}}}
namespace Cute\View{class Compiler{protected$env=null;protected$source_dir='';protected$compiled_dir='';function __construct(){\app()->import('Twig',VENDOR_ROOT.'/Twig/lib');$this->env=new\Twig_Environment();}function addFunction($A,$aF=null){$MF=new\Twig_SimpleFunction($A,$aF);return$this->env->addFunction($A,$MF);}function setSourceDir($fC){$this->source_dir=rtrim($fC,' /\\');if(!file_exists($this->source_dir)){@mkdir($this->source_dir,0777,true);}$LF=new\Twig_Loader_Filesystem(array($this->source_dir));$this->env->setLoader($LF);return$this;}function setCompiledDir($m){$m=rtrim($m,' /\\');if($this->compiled_dir!==$m){$this->compiled_dir=$m;}if(!file_exists($this->compiled_dir)){@mkdir($this->compiled_dir,0777,true);}return$this;}function isSourceRelational(){return true;}function compileFile($lB,$eC,array$S=array()){$e=$this->env->loadTemplate($lB)->render($S);file_put_contents($eC,$e,LOCK_EX);}function compileTpl($j,$lB='',array$S=array()){$j=ltrim(str_replace('\\','/',$j),'/');if(empty($lB)){$lB=$this->source_dir.'/'.$j;}$eC=$this->compiled_dir.'/'.$j;$m=dirname($eC);if(!is_dir($m)){mkdir($m,0777,true);}if($this->isSourceRelational()){$lB=substr($lB,strlen($this->source_dir)+1);}$this->compileFile($lB,$eC,$S);return$eC;}function compileAll($T=false,array$S=array()){if(is_null($T)||$T===false){$T=$this->source_dir;}else{$T=rtrim(str_replace('\\','/',$T),'/');}$AB=0;$XF=scandir($T);foreach($XF as$sC){if($sC==='.'||$sC==='..'){continue;}$AD=$T.'/'.$sC;if(is_dir($AD)){$this->compileAll($AD);}else{$j=substr($AD,strlen($this->source_dir));$this->compileTpl($j,$AD,$S);$AB++;}}return$AB;}}use \Cute\View\Compiler;class Templater{var$compiler=null;var$globals=array();protected$source_dir='';protected$extend_files=array();protected$template_blocks=array();protected$current_block='';function __construct($fC,$m=false){$this->setSourceDir($fC);if($m){$this->setCompileDir($m);}}static function replaceWith($e,array$S=array(),$q='',$bE=''){if(empty($S)){return$e;}if(empty($q)&&empty($bE)){$XD=&$S;}else{$XD=array();foreach($S as$C=>&$E){$XD[$q.$C.$bE]=$E;}}$e=strtr($e,$XD);return$e;}function setSourceDir($fC){$this->source_dir=rtrim($fC,' /\\');if(!file_exists($this->source_dir)){@mkdir($this->source_dir,0777,true);}}function setCompileDir($m){if(is_null($this->compiler)){$this->compiler=new Compiler();}$m=rtrim($m,' /\\');$this->compiler->setSourceDir($this->source_dir);$this->compiler->setCompiledDir($m);$this->setSourceDir($m);return$this;}function updateGlobals(array$WF){if(func_num_args()===1){$this->globals=array_merge($this->globals,$WF);}else{$B=func_get_args();array_unshift($B,$this->globals);$this->globals=exec_function_array('array_merge',$B);}return$this;}function updateFunctions(array$SF){$TF=$this->compiler;foreach($SF as$A=>$b){$TF->addFunction($A,$b);}}function prepareFile($j){if($this->compiler){return$this->compiler->compileTpl($j,'',$this->globals);}else{return$this->source_dir.'/'.$j;}}function render($j,array$S=array()){extract($this->globals);extract($S);include$this->prepareFile($j);if(!empty($this->extend_files)){$UF=array_pop($this->extend_files);foreach($this->extend_files as$w){include$this->prepareFile($w);}extract($this->template_blocks);include$this->prepareFile($UF);}}function extendTpl($j){array_push($this->extend_files,$j);}function includeTpl($j,array$S=array()){extract($this->globals);extract($S);ob_start();include$this->prepareFile($j);$HF=trim(ob_get_clean());echo$HF;}function blockStart($vE='content'){$this->current_block=$vE;ob_start();}function blockEnd(){$yE=trim(ob_get_clean());$this->template_blocks[$this->current_block]=$yE;}}}
namespace Cute\Widget{use \Cute\Utility\Word;class Captcha{const ENCRYPT_SALT='captcha_code_salt';const FILENAME_PREFIX='cc_';var$phrase_size=6;var$width=80;var$height=30;var$font=null;var$finger_print=null;protected$builder=null;protected$savedir='';protected$saveurl='';function __construct($FB=''){\app()->import('Gregwar',VENDOR_ROOT);$this->builder=new\Gregwar\Captcha\CaptchaBuilder();if(!empty($FB)){$this->phrase_size=strlen($FB);$this->builder->setPhrase($FB);}else{$this->refresh();}$this->savedir=APP_ROOT.'/public/assets/captcha';@mkdir($this->savedir,0755,true);$this->saveurl=app()->getAssetURL().'/captcha';}static function newInstance($xE=6,$uE=80,$rE=30,$tE=null,$sE=null){$fB=new self();$fB->phrase_size=$xE;$fB->width=$uE;$fB->height=$rE;$fB->font=$tE;$fB->finger_print=$sE;return$fB;}protected static function encrypt($FB){return md5(strtolower($FB).self::ENCRYPT_SALT);}static function clean($T,$uD=0.3,$OB=60){$wE=mt_rand(1,10000)/10000;if($uD<=0||$uD>=1||$wE<=$uD){$zE=time()-$OB;$LD=glob($T.'cc_*.jpg');foreach($LD as$w){if(fileatime($w)<$zE){unlink($w);}}}}function refresh(){$FB=Word::randString($this->phrase_size);$this->builder->setPhrase($FB);return$this;}function build(array$B=array()){$CF=array($this->width,$this->height,$this->font,$this->finger_print,);exec_method_array($this->builder,'build',$B+$CF);return$this->builder;}function show(){@session_start();$FB=$this->builder->getPhrase();$_SESSION['phrase']=self::encrypt($FB);@header('Content-Type: image/jpeg');$this->build(func_get_args());return$this->builder->output();}function save(){self::clean($this->savedir,0.3,60);$W=uniqid(self::FILENAME_PREFIX).'.jpg';$this->build(func_get_args());$this->builder->save($this->savedir.'/'.$W);$FB=$this->builder->getPhrase();$SB=$this->saveurl.'/'.$W.'#'.self::encrypt($FB);die($SB);}}use \Cute\Cache\Subject;class Counter extends Subject{protected$name='';protected$value=0;protected$maxium=0;function __construct($A,$E=0,$_E=0){$this->name=$A;$this->value=intval($E);$this->maxium=intval($_E);}function setCache($I='\\Cute\\Cache\\RedisCache'){$BD=new$I($this->name);$BD->share($this->value,'intval');$BD->initiate()->readData();$this->attach($BD);return$BD;}function findCaches(){return$this->observers;}function increase($BF=1){$this->value+=$BF;if($this->maxium>0){$this->value=$this->value%$this->maxium;}$this->notify();return$this->value;}}}