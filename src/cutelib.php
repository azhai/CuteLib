<?php
namespace{defined('VENDOR_ROOT')or define('VENDOR_ROOT',APP_ROOT.'/vendor');defined('APP_CLASS')or define('APP_CLASS','\\Cute\\Website');defined('ERROR_LEVEL')or define('ERROR_LEVEL',E_ALL&~E_DEPRECATED&~E_NOTICE);@error_reporting(ERROR_LEVEL);if(!class_exists('\\Cute\\Importer')){require_once SRC_ROOT.'/Cute/Importer.php';}function app($kD=''){static$h=null;if(is_null($h)&&$kD){$iD=\Cute\Importer::getInstance();$iD->addNamespace('Cute',SRC_ROOT);$kB=\Cute\Base\Storage::newInstance($kD);$H=constant('APP_CLASS');$h=new$H($kB);$h->install($iD,array('import'=>'addNamespace'));$h->initialize();}return$h;}function starts_with($dC,$wB){return strncmp($dC,$wB,strlen($wB))===0;}function ends_with($dC,$wB){$vC=strlen($wB);return$vC===0||(strlen($dC)>=$vC&&substr_compare($dC,$wB,-$vC)===0);}function convert($f,$tB='UTF-8'){$tB=strtoupper($tB);if(function_exists('mb_detect_encoding')){return mb_detect_encoding($f,$tB,true)?$f:mb_convert_encoding($f,$tB,'UTF-8, GBK');}else if(function_exists('iconv')){$hE=$tB==='UTF-8'?'GBK':'UTF-8';return iconv($hE,$tB.'//IGNORE',$f);}}function b64decode($f){if(preg_match('!([A-Za-z0-9+/= ]+)!',$f,$EB)){$f=$EB[1];}return base64_decode($f);}function exec_function_array($l,array$B=array()){switch(count($B)){case 0:return$l();case 1:return$l($B[0]);case 2:return$l($B[0],$B[1]);case 3:return$l($B[0],$B[1],$B[2]);case 4:return$l($B[0],$B[1],$B[2],$B[3]);case 5:return$l($B[0],$B[1],$B[2],$B[3],$B[4]);default:if(is_object($l)){$z=new ReflectionMethod($l,'__invoke');return$z->invokeArgs($l,$B);}else if(is_callable($l)){$z=new ReflectionFunction($l);return$z->invokeArgs($B);}}}function exec_method_array($CB,$U,array$B=array()){if(is_object($CB)){switch(count($B)){case 0:return$CB->{$U}();case 1:return$CB->{$U}($B[0]);case 2:return$CB->{$U}($B[0],$B[1]);case 3:return$CB->{$U}($B[0],$B[1],$B[2]);case 4:return$CB->{$U}($B[0],$B[1],$B[2],$B[3]);case 5:return$CB->{$U}($B[0],$B[1],$B[2],$B[3],$B[4]);}}if(method_exists($CB,$U)){$z=new ReflectionMethod($CB,$U);if($z->isPublic()&&!$z->isAbstract()){if($z->isStatic()){return$z->invokeArgs(null,$B);}else{return$z->invokeArgs($CB,$B);}}}}function exec_construct_array($H,array$B=array()){switch(count($B)){case 0:return new$H();case 1:return new$H($B[0]);case 2:return new$H($B[0],$B[1]);case 3:return new$H($B[0],$B[1],$B[2]);case 4:return new$H($B[0],$B[1],$B[2],$B[3]);case 5:return new$H($B[0],$B[1],$B[2],$B[3],$B[4]);default:if(class_exists($H)){$z=new ReflectionClass($H);return$z->newInstanceArgs($B);}}}}
namespace Cute{use \Cute\Importer;use \Cute\Factory;use \Cute\Base\Storage;abstract class Application{protected$shortcuts=array();function __construct(Storage&$kB){$this->install($kB,array('getConfig'));$gE=new Factory($kB);$this->install($gE,array('load'));}function initialize(){return$this;}function install($LD,array$fE){foreach($fE as$jC=>$U){$jC=strtolower(is_numeric($jC)?$U:$jC);$this->shortcuts[$jC]=array($LD,$U);}return$this;}function __call($A,$B){$A=strtolower($A);if(isset($this->shortcuts[$A])){list($LD,$U)=$this->shortcuts[$A];return exec_method_array($LD,$U,$B);}}abstract function run();}abstract class Command{protected$app=null;protected$args=array();protected$pid=0;var$cmdfile='';function __construct($h,$GD,array$SB=array()){$this->app=$h;$this->cmdfile=$GD;list($B,$BB)=self::parse($SB);$this->args=array_merge($B,$BB);}function __clone(){$this->args=array_change_key_case($this->args);}function __toString(){$B=array();foreach($this->args as$D=>$C){if(is_numeric($D)){$B[]=$C;}else if($C===true){$B[]=strlen($D)===1?" -$D":" --$D";}else{$B[]=" --$D='$C'";}}$YB=$this->cmdfile;$YB.=' '.substr(__CLASS__,0,-strlen('Command'));$YB.=' '.implode(' ',$B);return$YB;}static function parse(array$SB){$B=array();$BB=array();foreach($SB as$PC=>$u){$u=trim($u);if($u==='--'){$B[]=implode(' ',array_slice($SB,$PC+1));break;}if(substr($u,0,1)!=='-'){$B[]=$u;}else if(substr($u,1,1)!=='-'){$RC=str_split(substr($u,1));foreach($RC as$D){$BB[$D]=true;}}else{if(($UD=strpos($u,'='))!==false){$D=substr($u,2,$UD-2);$C=substr($u,$UD+1);}else{$D=substr($u,2);$C=true;}if(!array_key_exists($D,$BB)){$BB[$D]=$C;}else{if(!is_array($BB[$D])){$BB[$D]=array($BB[$D]);}$BB[$D][]=$C;}}}return array($B,$BB);}function addArg($C,$D=false){if($D===false||is_null($D)){$this->args[]=$C;}else{$this->args[$D]=$C;}return$this;}function getArg($D=false,$L=null){if($D===false||is_null($D)){return$this->args;}if(isset($this->args[$D])){return$this->args[$D];}else{return$L;}}function popArg($D){if($D===false||is_null($D)){return;}if(isset($this->args[$D])){$C=$this->args[$D];unset($this->args[$D]);return$C;}}function readPid($rB=null){if(!is_null($rB)&&is_readable($rB)){$jB=trim(file_get_contents($rB));if(is_numeric($jB)){$this->pid=$jB;}}return$this->pid;}function isRunning(){if($this->pid>0){try{$F=shell_exec(sprintf('ps %d',$this->pid));return substr_count($F,"\n")>=2;}catch(\Exception$NB){}}return false;}function wait($eE=0.1){while($this->isRunning()){usleep($eE*1000000);}return true;}function stop(){if($this->pid>0&&$this->isRunning()){return posix_kill($this->pid,SIGTERM);}}function fork($rB=null,array$NC=array()){$nB=clone$this;$nB->args=array_merge($nB->args,$NC);$YB=strval($nB);$h=$nB->app;if($h->outfile!==1){$YB.=' > '.$h->getFileSymbol($h->outfile,true);}if($h->errfile!==2){$YB.=' 2 > '.$h->getFileSymbol($h->errfile,true);}if($jB=shell_exec($YB.' & echo $!')){$jB=trim($jB);$nB->pid=intval($jB);if(!is_null($rB)){file_put_contents($rB,$jB.PHP_EOL,LOCK_EX);}}return$nB->pid;}function loop($r=1,$vB=0,$bD=0){if($vB>0){$vB=intval($vB)+time();}do{$this->execute();if($r>0){$r--;}if($bD>0){usleep($bD*1000000);}}while($r===0||$vB<0||$vB<time());}abstract function execute();}use \Cute\Application;use \Cute\Command;use \Cute\Utility\Inflect;class Console extends Application{const STDIN='php://stdin';const STDOUT='php://stdout';const STDERR='php://stderr';const DEVNULL='/dev/null';const COLOR_BLACK=90;const COLOR_RED=91;const COLOR_GREEN=92;const COLOR_YELLOW=93;const COLOR_BLUE=94;const COLOR_MAGENTA=95;const COLOR_CYAN=96;const COLOR_WHITE=97;protected$color=false;var$outfile=1;var$errfile=null;function initialize(){return$this;}static function getFileSymbol($p,$sC=false){if(is_null($p)){return self::DEVNULL;}else if(is_int($p)){if($p===0){return$sC?'&0':self::STDIN;}else if($p===1){return$sC?'&1':self::STDOUT;}else if($p===2){return$sC?'&2':self::STDERR;}}return strval($p);}static function appendTo($gB,$fB=false,$lB=null){if(empty($lB)&&$lB!==0){return 0;}if(is_int($lB)&&is_int($fB)){$gB=sprintf("\033[%dm%s\033[%dm",$fB,$gB,0);}$lB=self::getFileSymbol($lB);return file_put_contents($lB,$gB,FILE_APPEND|LOCK_EX);}function setColor($fB){if(is_string($fB)){$fB='COLOR_'.strtoupper($fB);$this->color=constant(__CLASS__.'::'.$fB);}return$this;}function write($gB){if(func_num_args()>1){$gB=exec_function_array('sprintf',func_get_args());}return self::appendTo($gB,$this->color,$this->outfile);}function writeln($gB){$B=func_get_args();$B[0].=PHP_EOL;return exec_method_array($this,'write',$B);}function mount($V){$cD=func_get_args();foreach($cD as&$V){$V=rtrim($V,DIRECTORY_SEPARATOR);}$_C=PATH_SEPARATOR.implode(PATH_SEPARATOR,$cD);set_include_path(get_include_path().$_C);return$this;}function run(){if(php_sapi_name()!=='cli'){return;}if($_SERVER['argc']<2){return;}$SB=$_SERVER['argv'];$GD=array_shift($SB);$A=array_shift($SB);$H=Inflect::camelize($A).'Command';@require_once$H.'.php';if(class_exists($H)){$m=new$H($this,$GD,$SB);return$m->execute();}}}class Factory{protected$storage=null;protected$objects=array();function __construct(Storage&$kB){$this->storage=$kB;}function normalize($H){return rtrim($H,'\\');}function create($H,$A='default'){$H=$this->normalize($H);$iC=$this->storage->getSectionOnce($H);$R=$iC->getArray($A);if($A!=='default'){$R=array_merge($iC->getArray('default'),$R);}if(class_exists($H)){foreach($R as$D=>&$C){if(starts_with($D,'\\')){$C=$this->load($D,$C);}}return exec_construct_array($H,array_values($R));}}function load($H,$A='default'){$H=$this->normalize($H);if(!isset($this->objects[$H])){$this->objects[$H]=array();if(!isset($this->objects[$H][$A])){$this->objects[$H][$A]=$this->create($H,$A);}}return$this->objects[$H][$A];}}class Handler{protected$app=null;protected$succor=null;function __construct($uB=null){$this->app=app();$this->succor=$uB;}function init($U){return method_exists($this,$U)?$U:'';}function __invoke(){$U=$this->app->getMethod();$B=func_get_args();if($U=$this->init($U)){return exec_method_array($this,$U,$B);}else if($this->succor){return exec_function_array($this->succor,$B);}else{return$this->app->abort(403);}}}if(!function_exists('trait_exists')){function trait_exists($H,$eC){return false;}}final class Importer{private static$instance=null;private$classes=array();private$namespaces=array();private function __construct(){}static function getInstance(){if(is_null(self::$instance)){self::$instance=new self();self::$instance->register();}return self::$instance;}static function exists($H,$eC=true){return class_exists($H,$eC)||interface_exists($H,$eC)||trait_exists($H,$eC);}function autoload($H){$H=trim($H,'\\_');if(isset($this->classes[$H])){require_once$this->classes[$H];return self::exists($H,false);}$iE=$this->checkNamespace($H);return($iE===true);}function register(){return spl_autoload_register(array($this,'autoload'));}function addClass($S,$H){$QD=func_get_args();$S=array_shift($QD);if(is_readable($S)){foreach($QD as$H){$this->classes[trim($H,'\\')]=$S;}}ksort($this->classes);return$this;}function addNamespaceStrip($s,$Q){$s=trim($s,'\\');$Q=rtrim($Q,'\\/');$this->namespaces[$s]=$Q;ksort($this->namespaces);return$this;}function addNamespace($s,$Q){$s=trim($s,'\\');$UB=strtok($s,'\\_');$Q=rtrim($Q,'\\/').DIRECTORY_SEPARATOR.$UB;return$this->addNamespaceStrip($s,$Q);}function checkNamespace($H){$UB=strtok($H,'\\_');$b=strlen($UB)+1;if(isset($this->namespaces[$UB])){$V=$this->namespaces[$UB];}else if(isset($this->namespaces[''])){$V=$this->namespaces[''];}else{return false;}$w=$V.DIRECTORY_SEPARATOR;$w.=str_replace(array('\\','_'),DIRECTORY_SEPARATOR,substr($H,$b));if(file_exists($w.'.php')){require_once$w.'.php';if(self::exists($H,false)){return true;}}while($UB){$V.=DIRECTORY_SEPARATOR.$UB;if(file_exists($V.'.php')){require_once$V.'.php';if(self::exists($H,false)){return true;}}if(!file_exists($V)){return false;}$UB=strtok('\\_');}}}use \Cute\Context\Router;class Website extends Application{protected$method='';var$url='';var$rule='';function initialize(){$hB=Router::getCurrent();$this->install($hB,array('dispatch','abort','redirect'));$this->install('\\Cute\\Context\\Input',array('getClientIP','input'=>'getInstance',));return$this;}function route($V,$y){$hB=Router::getCurrent();return$hB->route($V,$y);}function mount($q,$SC='*.php'){$hB=Router::getCurrent();$hB->mount($q,$SC);return$this;}function getMethod(){if(empty($this->method)){$iB=$this->input('SERVER');$U=$iB->request('_method','');if(empty($U)){$U=$iB->get('REQUEST_METHOD','GET');}$this->method=strtolower($U);}return$this->method;}function run(){$jE=$this->getConfig('route_key','r');$V=$this->input('GET')->get($jE,'/');try{$nC=$this->dispatch($V);$uB=null;foreach($nC['handlers']as$y){if($y&&class_exists($y,true)){$y=new$y($uB);}if($y&&is_callable($y)){$uB=&$y;}}if($uB){$this->url=$nC['url'];$this->rule=$nC['rule'];$ND=exec_function_array($uB,$nC['args']);}}catch(\Exception$NB){$ND=strval($NB);}return die($ND);}}}
namespace Cute\Base{trait Deferring{protected$MF=false;function defer(){register_shutdown_function(function($nE){$nE->__destruct();},$this);}function __destruct(){if($this->closed===false){$this->close();}$this->closed=true;}function close(){}}trait Mocking{protected$mC=null;private function __construct(&$mC=null){$this->inner=$mC;}static function mock(&$mC=null){$KB=new self($mC);return$KB->isReady()?$KB->inner:$KB;}function __call($A,$xC){return false;}function __set($A,$C){return false;}function __get($A){return;}function isReady(){return!is_null($this->inner);}}use \ArrayObject;class Storage extends ArrayObject{const CONFIG_SECTION_NAME='configs';function __construct($iB=array(),$mE=ArrayObject::ARRAY_AS_PROPS){parent::__construct($iB,$mE);}static function newInstance($S,$eD=false){$S.=empty($eD)?'':$eD;assert(is_readable($S));return new self(include$S);}function getItem($A,$L=null){$oD=$this->offsetGet($A);return is_null($oD)?$L:$oD;}function getArray($A,array$L=array()){$R=$this->getItem($A);return is_array($R)?$R:$L;}function getSection($A){$R=$this->getArray($A,array());return new self($R);}function getSectionOnce($A){$R=$this->getItem($A);if(!($R instanceof self)){$R=new self($R);$this->offsetSet($A,$R);}return$R;}function getConfig($A,$L=null){$iC=$this->getSectionOnce(self::CONFIG_SECTION_NAME);return$iC->getItem($A,$L);}}}
namespace Cute\Context{class Input{protected static$instances=array();protected static$client_ip='-';protected$input_type=null;protected$data=array();protected$done=false;protected function __construct($GB='POST'){$this->input_type=constant('INPUT_'.$GB);if($GB==='REQUEST'){$this->raw_data=$_REQUEST;}assert(!is_null($this->input_type));}function __call($A,$xC){if(starts_with($A,'get')&&count($xC)>0){$E=substr($A,3);@list($D,$L)=$xC;return$this->get($D,$L,$E);}}static function getInstance($GB='POST'){$GB=strtoupper($GB);if(!isset(self::$instances[$GB])){$WB=new static($GB);self::$instances[$GB]=$WB;}return self::$instances[$GB];}static function request($D,$L=null,$E=false){$lE=self::getInstance('POST');$C=$lE->get($D,$L,$E);if($C===$L){$kE=self::getInstance('GET');$C=$kE->get($D,$L,$E);}return$C;}static function getClientIP(){if(strlen(self::$client_ip)>=7){return self::$client_ip;}$RC=array('HTTP_CLIENT_IP','HTTP_X_REAL_IP','HTTP_X_FORWARDED_FOR','HTTP_X_FORWARDED','HTTP_X_CLUSTER_CLIENT_IP','HTTP_FORWARDED_FOR','HTTP_FORWARDED','REMOTE_ADDR');$dE=self::getInstance('SERVER');foreach($RC as$D){$JC=$dE->get($D);if($JC&&strlen($JC)>=7){self::$client_ip=$JC;break;}}return self::$client_ip;}static function detectType($E){$E=empty($E)?'string':strtolower($E);foreach(filter_list()as$A){if(ends_with($A,$E)){return filter_id($A);}}}static function coerce($C,$E='raw'){if(is_array($C)){foreach($C as$D=>$HC){if(is_array($E)&&isset($E[$D])){$mD=$E[$D];}else{$mD=$E;}$C[$D]=self::coerce($HC,$mD);}}else{$E=strtolower($E);if($E==='int'||$E==='float'){settype($C,$E);}else if($E==='array'){$C=(array)$C;}else if($E!=='raw'){settype($C,'string');}}return$C;}protected function filterData($D,$E){$E=self::detectType($E);return filter_input($this->input_type,$D,$E);}protected function filterArrayData($eB){if(is_array($eB)){foreach($eB as$D=>&$E){if(is_array($E)){$E['filter']=self::detectType($E['filter']);}else{$E=self::detectType($E);}}}else{$eB=self::detectType($eB);}return filter_input_array($this->input_type,$eB);}function get($D,$L=null,$E=false){if(!array_key_exists($D,$this->data)){if(is_array($L)){$E=array($D=>array('filter'=>$E,'flags'=>FILTER_FORCE_ARRAY));$R=$this->filterArrayData($E);$this->data=array_merge($this->data,$R);}else{$C=$this->filterData($D,$E);if(is_null($C)||$C===false){$C=self::coerce($L,$E);}$this->data[$D]=$C;}}return$this->data[$D];}function all($D=false,$eB=false){if($this->done===false){$this->data=$this->filterArrayData($eB);}if(is_null($this->data)){$this->data=array();}if($D===false){return$this->data;}else if(array_key_exists($D,$this->data)){return$this->data[$D];}}}use \Cute\Context\Input;class Locale{protected$language='';protected$locale_dir='';protected$timezone='Asia/Shanghai';function __construct($tC='',$MB=''){if(empty($tC)){$tC=APP_ROOT.'/protected/locales';}$this->locale_dir=$tC;$this->timezone=$MB;}function detectLanguage(){$iB=Input::getInstance('SERVER');$FB=strstr($iB->get('LANG',''),'.',true);if(empty($FB)){$cE=$iB->get('HTTP_ACCEPT_LANGUAGE','');preg_match_all('/([a-z]{2}\-?[A-Z]{0,2})/',$cE,$EB);foreach($EB[0]as$FB){$FB=str_replace('-','_',$FB);if(file_exists($this->locale_dir.'/'.$FB)){break;}}}return$FB;}function setLocale($FB,$rC='messages'){if($FB){$this->language=$FB;}else{$this->language=$this->detectLanguage();}putenv('LANG='.$this->language);setlocale(LC_ALL,$this->language);bindtextdomain($rC,$this->locale_dir);bind_textdomain_codeset($rC,'UTF-8');textdomain($rC);return$this->language;}function setTimezone($MB){if($MB){$this->timezone=$MB;}@date_default_timezone_set($this->timezone);return$this->timezone;}}class Router{protected static$current=null;static$aliases=array('<int>'=>'([0-9\-]+)','<float>'=>'([0-9\.\-]+)','<num>'=>'([0-9\.\-,]*)','<string>'=>'([a-z0-9\-_]+)','<page>'=>'([0-9]*)/?([0-9]*)/?','<path>'=>'([a-z0-9\-_/])');protected$filename='';protected$prefix='';protected$children=array();protected$items=array();function __construct($S='',$j='/'){$this->filename=$S;$this->prefix=rtrim($j,'/');self::$current=$this;if($S&&is_readable($S)){include_once$S;}}static function getCurrent(){if(is_null(self::$current)){self::$current=new self();}return self::$current;}static function toPrefix($S){$VE=strstr(basename($S),'.');$UE=substr($S,0,-strlen($VE));$j=str_replace(DIRECTORY_SEPARATOR,'/',$UE);return strtolower(rtrim($j,'/'));}static function compileUrl($IB,$TE=false){$IB=preg_quote(strtolower(rtrim($IB,'/')));$RC=array_map('preg_quote',array_keys(self::$aliases));$P=array_values(self::$aliases);$IB=str_replace($RC,$P,$IB);$SC=($TE===false)?'':'(.*)?';return'!^'.$IB.'/?'.$SC.'$!';}function route($V,&$y){$OC=self::compileUrl($V);if(func_num_args()>2){$kC=array_slice(func_get_args(),1);}else{$kC=array($y);}$this->items[$OC]=$kC;return$OC;}function mount($q,$SC='*.php'){$q=rtrim($q,DIRECTORY_SEPARATOR);$hC=glob($q.'/'.$SC,GLOB_BRACE);if(!empty($hC)){$SE=strlen($q);foreach($hC as$S){$j=self::toPrefix(substr($S,$SE));$this->children[$j]=$S;}}return$this;}function dispatch($V,$fD=false){$V=rtrim(strtolower($V),' /').'/';if(!$fD){krsort($this->children);}foreach($this->children as$j=>$S){if(starts_with($V,$j)){$hB=new self($S,$j);$V=substr($V,strlen($j));return$hB->dispatch($V);}}if(!$fD){krsort($this->items);}foreach($this->items as$OC=>$kC){if(preg_match($OC,$V,$B)===1){$IB=$this->prefix.array_shift($B);return array('handlers'=>&$kC,'args'=>$B,'url'=>$IB,'rule'=>$OC);}}$this->abort(404);return array('handlers'=>array());}function abort($WE=500){return@http_response_code($WE);}function redirect($XE='',$bE=false){$aE=$bE?301:302;@header('Location: '.$XE,true,$aE);return die();}}class Session{}}
namespace Cute\DB{use \DateTime;use \PDO;use \PDOException;use \Cute\DB\Literal;class Database{const TYPE_UNSUPPORT=0;const TYPE_TOP=1;const TYPE_LIMIT=2;protected$pdo=null;protected$dbname='';protected$prefix='';function __construct(PDO&$ZE,$RB='',$j=''){$this->pdo=$ZE;if($RB){$this->useDB($RB,$j);}}function useDB($RB,$j='',$fC=false){assert(!is_null($this->pdo));if($fC&&$this->getDriverName()==='mysql'){$this->pdo->exec("CREATE DATABASE IF NOT EXIST `$RB`");}$this->pdo->exec("USE `$RB`");$this->dbname=$RB;$this->prefix=empty($j)?'':$j;return$this;}function getPDO(){return$this->pdo;}function getDriverName(){assert(!is_null($this->pdo));$LB=$this->pdo->getAttribute(PDO::ATTR_DRIVER_NAME);$LB=strtolower($LB);return$LB==='dblib'?'sqlsrv':$LB;}function getDBName(){return$this->dbname;}function getTableName($N,$oC=false){$Y=$this->prefix.$N;$hD=$this->getDriverName();if($hD==='mysql'){$G="SHOW Variables LIKE 'lower_case_table_names'";$YE=$this->fetch($G,array(),'Value');if(intval($YE)===1){$Y=strtolower($Y);}}if($oC===false){return$Y;}switch($hD){case'mysql':$Y="`$Y`";break;case'sqlite':case'sqlsrv':$Y="[$Y]";break;}return$Y;}function inline($v){return new Literal($v);}function quote($v){if(is_null($this->pdo)||is_null($v)||$v instanceof Literal||$v instanceof DateTime){return Literal::quote($v);}else{$E=is_int($v)?PDO::PARAM_INT:PDO::PARAM_STR;return$this->pdo->quote($v,$E);}}function embed($G,array$K=array()){foreach($K as&$v){$v=$this->quote($v);}$G=str_replace('?','%s',$G);return vsprintf($G,$K);}function execute($G,array$K=array()){assert(!is_null($this->pdo));if(!empty($K)){$G=$this->embed($G,$K);}try{$F=$this->pdo->exec($G);}catch(PDOException$NB){$T="SQL: $G\n".$NB->getMessage();throw new PDOException($T);}return$F;}function query($G,array$K=array()){assert(!is_null($this->pdo));try{$O=$this->pdo->prepare($G);if($O->execute($K)){$O->setFetchMode(PDO::FETCH_ASSOC);}}catch(PDOException$NB){$G=$this->embed($G,$K);$T="SQL: $G\n".$NB->getMessage();throw new PDOException($T);}return$O;}function fetch($G,array$K=array(),$yB=false){if($O=$this->query($G,$K)){if(is_numeric($yB)){$F=$O->fetchColumn(intval($yB));}else{$F=$O->fetch();if($F&&$yB){$F=isset($F[$yB])?$F[$yB]:null;}}$O->closeCursor();return$F;}}function listTables(){if(empty($this->prefix)){$G=sprintf("SHOW TABLES FROM %s",$this->getDBName());}else{$a=$this->quote(str_replace('_','\_',$this->prefix).'%');$G=sprintf("SHOW TABLES LIKE %s",$a);}$F=array();if($O=$this->query($G)){$oE=strlen($this->prefix);while($N=$O->fetchColumn(0)){$F[]=substr($N,$oE);}$O->closeCursor();}return$F;}function transact(callable$pE){assert(!is_null($this->pdo));if($this->pdo->beginTransaction()){$B=func_get_args();array_unshift($B,$this);try{$pE($B);$this->pdo->commit();}catch(PDOException$NB){$this->pdo->rollBack();}}}function readFields($N){$LB=$this->getDriverName();$H='\\Cute\\DB\\'.ucfirst($LB).'Schema';$LF=new$H($this,$N);$J=$LF->getColumns();$t=array();$AB=array();foreach($J as$I){if($I->isPrimaryKey()){$t[]=$I->name;}$L=$I->default;$jD=$I->getCategory();if($jD==='int'){$L=intval($L);}else if($jD==='float'){$L=floatval($L);}$AB[$I->name]=$L;}return compact('table','pkeys','fields');}}use \HandlerSocketi;class HandlerSocket{const HS_PORT_R=9998;const HS_PORT_RW=9999;protected$handler=null;protected$query=null;protected$read_only=false;protected$dbname='';protected$table='';protected$fields=array();protected$index=null;function __construct($RB,$wC='127.0.0.1',$KC=0,$EF=false){$this->dbname=$RB;$this->read_only=$EF;if(empty($KC)){$KC=$this->read_only?self::HS_PORT_R:self::HS_PORT_RW;}$this->handler=new HandlerSocketi($wC,$KC);}function open($N,$AB){if(is_string($AB)){$AB=explode(',',str_replace(' ','',$AB));}$this->table=$N;$this->fields=$AB;$this->query=null;return$this;}protected function prepare($pB=null){if(empty($this->query)||$this->index!==$pB){$this->index=$pB;$RE=empty($this->index)?array():array('index'=>$this->index);$this->query=$this->handler->open_index($this->dbname,$this->table,$this->fields,$RE);}return$this->query;}function insert(array$TC){$D=$this->index;$F=$this->prepare($D)->insert($TC);return$F!==false;}function delete($C){if(func_num_args()>1){$D=$C;$C=func_get_arg(1);}else{$D=null;}return$this->prepare($D)->remove($C);}function truncate($cC){$BC=array();$D=null;$cC=is_array($cC)?$cC:func_get_args();foreach($cC as$JB){$BC[]=array('remove',$JB);}$F=$this->prepare($D)->multi($BC);$DF=create_function('$a,$b','return $a && $b;');return array_reduce($F,$DF,true);}function update(array$AC,$D,$C){return$this->prepare($D)->update($C,$AC);}function get($C){if(func_num_args()>1){$D=$C;$C=func_get_arg(1);}else{$D=null;}$F=$this->prepare($D)->find($C);if(empty($F)){return($F===false)?false:null;}return array_combine($this->fields,$F[0]);}function all($D=null,$n='>=',$C=0,$HB=0,$oB=0){$NC=array();if($HB>0){$NC['limit']=$HB;}if($oB>0){$NC['offset']=$oB;}$C=array($n=>$C);$F=$this->prepare($D)->find($C,$NC);if($F===false){return false;}foreach($F as&$c){$c=array_combine($this->fields,$c);}return$F;}function in($D,$C){$BC=array();$P=array_slice(func_get_args(),1);if(count($P)===1&&is_array($P[0])){$P=$P[0];}foreach($P as$C){$BC[]=array('find',$C);}$F=$this->prepare($D)->multi($BC);if($F===false){return false;}$mB=exec_function_array('array_merge',$F);foreach($mB as&$c){$c=array_combine($this->fields,$c);}return$mB;}}class Literal{protected$value;function __construct($C){$this->value=$C;}function __toString(){return strval($this->value);}static function quote($C){$DD="'%s'";if(is_null($C)){$C='NULL';}else if($C instanceof self){$C=strval($C);}else if($C instanceof DateTime){$C=sprintf($DD,$C->format('Y-m-d H:i:s'));}else if(is_string($C)){$C=sprintf($DD,convert($C,'UTF-8'));}else{$C=sprintf($DD,strval($C));}return$C;}}use \Cute\DB\Database;class MssqlSchema{protected$db=null;protected$dbname='';protected$table='';function __construct(Database&$W,$N){$this->db=$W;$this->dbname=$W->getDBName();$this->table=$W->getTableName($N,false);}function getLimitType(){return DB::TYPE_TOP;}function getPKey(){$G="SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.%s WHERE TABLE_SCHEMA='dbo'"." AND TABLE_CATALOG=? AND TABLE_NAME=? ORDER BY ORDINAL_POSITION";$K=array($this->dbname,$this->table);$bB=$this->db->fetch(sprintf($G,'KEY_COLUMN_USAGE'),$K,0);if(empty($bB)){$bB=$this->db->fetch(sprintf($G,'COLUMNS'),$K,0);}return$bB;}function getColumns(){$J=array('COLUMN_NAME','COLUMN_DEFAULT','COLUMN_KEY','IS_NULLABLE','COLUMN_TYPE','DATA_TYPE','CHARACTER_MAXIMUM_LENGTH','NUMERIC_PRECISION','NUMERIC_SCALE','DATETIME_PRECISION',);$G="SELECT %s FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA='dbo'"." AND TABLE_CATALOG=? AND TABLE_NAME=? ORDER BY ORDINAL_POSITION";$G=sprintf($G,implode(', ',$J));$K=array($this->dbname,$this->table);if($O=$this->db->query($G,$K)){$JD=PDO::FETCH_CLASS|PDO::FETCH_PROPS_LATE;$F=$O->fetchAll($JD,'\\Cute\\ORM\\Column');$O->closeCursor();return$F;}}function isExists(){$G="SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='dbo'"." AND TABLE_CATALOG=? AND TABLE_NAME=?";$K=array($this->dbname,$this->table);$N=$this->db->fetch($G,$K,0);return$this->db->getTableName($N,false)===$this->table;}function getCreateSQL($cB,$J=array(),$MD=false,$KD=false){$QB="";$sB="";$k="";$J=$this->getColumns();if($MD||$KD){foreach($J as$I){if($I->getCategory()==='char'){$E="[".$I->type."](".intval($I->length).")";}else if($I->type==='numeric'){$E="[numeric](".$I->precision.", ".$I->scale.")";}else{$E="[".$I->type."]";}if($I->isPrimaryKey()){$QB="    [$A] $E IDENTITY(1,1) NOT FOR REPLICATION NOT NULL,";$sB="PRIMARY KEY NONCLUSTERED ( [$A] ASC )";}else{$CF=$I->isNullable()?"NULL":"NOT NULL DEFAULT ".$I->default;$k.="    [$A] $E $CF,\n";}}}else{foreach($J as$I){$L=trim($I->default,"()");if($I->getCategory()==='char'){$b=intval($I->length);$E=($b>255||$b<0)?"text":"varchar($b)";}else if($I->getCategory()==='int'){$dB=intval($I->precision);if($L===''){$L="0";}$E=$I->type."($dB)";}else if($I->getCategory()==='float'){$dB=intval($I->precision);$CD=intval($I->scale);if($L===''){$L="0.0";}$E=$I->type;if($I->type==='real'){$E='float';}else if($I->type==='money'){$E='numeric';}$E.="($dB,$CD)";}else if($I->getCategory()==='datetime'){$E='datetime';}else{$E=$I->type;}if($I->isPrimaryKey()){$QB="    [$A] $E IDENTITY(1,1) NOT FOR REPLICATION NOT NULL,";$sB="PRIMARY KEY NONCLUSTERED ( [$A] ASC )";}else if(starts_with($E,'date')||ends_with($E,'text')){$k.="    [$A] $E NULL,\n";}else if($I->isNullable()){$k.="    [$A] $E NULL,\n";}else{$k.="    [$A] $E NOT NULL DEFAULT '$L',\n";}}}$EC=<<<EOD
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES
    WHERE TABLE_SCHEMA='dbo' AND TABLE_NAME='%s')
BEGIN
CREATE TABLE [dbo].[%s] (
%s
%s
    CONSTRAINT [PK_%s]
    %s
    WITH ( PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF,
        ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON )
    ON [PRIMARY]
) ON [PRIMARY]
END
EOD
;if(empty($QB)){$k=rtrim($k,",\n");}$G=sprintf($EC,$cB,$cB,$QB,$k,$cB,$sB);return$G;}function sqlToFile($G,$w,$aC="\t",$uC=PHP_EOL,$GC='"',$pC=null){@mkdir(dirname($w),0664,true);$qC=fopen($w,'wb');$aB=0;$gD=$this->db->query($G);while($c=$gD->fetch()){if(is_null($pC)){fputcsv($qC,$c,$aC,$GC);}else{fwrite($qC,self::csvline($c,$aC,$uC,$GC,$pC));}$aB++;}$gD->closeCursor();fclose($qC);return$aB;}}class MysqlSchema{protected$db=null;protected$dbname='';protected$table='';function __construct(Database&$W,$N){$this->db=$W;$this->dbname=$W->getDBName();$this->table=$W->getTableName($N,false);}function getLimitType(){return DB::TYPE_LIMIT;}function getPKey(){$G="SELECT COLUMN_NAME FROM information_schema.COLUMNS"." WHERE TABLE_SCHEMA=? AND TABLE_NAME=? AND COLUMN_KEY='PRI'";$K=array($this->dbname,$this->table);return$this->db->fetch($G,$K,0);}function getColumns(){$J=array('COLUMN_NAME','COLUMN_DEFAULT','COLUMN_KEY','IS_NULLABLE','COLUMN_TYPE','DATA_TYPE','CHARACTER_MAXIMUM_LENGTH','NUMERIC_PRECISION','NUMERIC_SCALE','DATETIME_PRECISION',);$G="SELECT %s FROM information_schema.COLUMNS"." WHERE TABLE_SCHEMA=? AND TABLE_NAME=? ORDER BY ORDINAL_POSITION";$G=sprintf($G,implode(', ',$J));$K=array($this->dbname,$this->table);if($O=$this->db->query($G,$K)){$JD=PDO::FETCH_CLASS|PDO::FETCH_PROPS_LATE;$F=$O->fetchAll($JD,'\\Cute\\ORM\\Column');$O->closeCursor();return$F;}}function isExists(){$G="SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES"." WHERE TABLE_NAME=? AND (TABLE_SCHEMA=? OR TABLE_CATALOG=?)";$K=array($this->table,$this->dbname,$this->dbname);$N=$this->db->fetch($G,$K,0);return$this->db->getTableName($N,false)===$this->table;}function getCreateSQL($cB,$MD=false,$KD=false){if($MD){$G="CREATE TABLE `%s` LIKE `%s`";return sprintf($G,$cB,$this->table);}else if($KD){$fC=sprintf("CREATE TABLE `%s`",$this->table);$G=$this->db->fetch("SHOW $fC",array(),'Create Table');$G=preg_replace('/(AUTO_INCREMENT=\d+)/','AUTO_INCREMENT=1',$G,1);$BF=sprintf("CREATE TABLE IF NOT EXISTS `%s`",$cB);return str_replace($fC,$BF,$G);}else{$QB="";$sB="";$k="";$J=$this->getColumns();foreach($J as$I){$A=$I->name;$L=trim($I->default,"()");if($I->getCategory()==='char'){$b=intval($I->length);$E=($b>255||$b<0)?"text":"varchar($b)";}else if($I->getCategory()==='int'){$dB=intval($I->precision);if($L===''){$L="0";}$E=$I->type."($dB)";}else if($I->getCategory()==='float'){$dB=intval($I->precision);$CD=intval($I->scale);if($L===''){$L="0.0";}$E=$I->type;if($I->type==='real'){$E='float';}else if($I->type==='money'){$E='numeric';}$E.="($dB,$CD)";}else if($I->getCategory()==='datetime'){$E='datetime';}else{$E=$I->type;}if($I->isPrimaryKey()){$QB="    `$A` int(10) unsigned NOT NULL AUTO_INCREMENT,";$sB="PRIMARY KEY (`$A`)";}else if(starts_with($E,'date')||ends_with($E,'text')){$k.="    `$A` $E NULL,\n";}else if($I->isNullable()){$k.="    `$A` $E NULL,\n";}else{$k.="    `$A` $E NOT NULL DEFAULT '$L',\n";}}$EC=<<<EOD
CREATE TABLE IF NOT EXISTS `%s` (
%s
%s
    %s
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT
EOD
;if(empty($QB)){$k=rtrim($k,",\n");}$G=sprintf($EC,$cB,$QB,$k,$sB);return$G;}}function sqlToFile($G,$w,$aC="\t",$uC=PHP_EOL,$GC='"',$pC=null){@mkdir(dirname($w),0664,true);$bC="FIELDS TERMINATED BY '".addslashes($aC)."'";$bC.=" LINES TERMINATED BY '".addslashes($uC)."'";if($GC){$bC.=" OPTIONALLY ENCLOSED BY '".addslashes($GC)."'";}if($FF){$bC.=" FIELDS ESCAPED BY '".addslashes($FF)."'";}$IC=sys_get_temp_dir().DIRECTORY_SEPARATOR.basename($w);$KF="$G INTO OUTFILE '$IC' $bC";try{if(file_exists($IC)){unlink($IC);}$this->db->execute($KF);if(file_exists($IC)){rename($IC,$w);$aB=shell_exec('wc -l '.$w.' | cut -d" " -f1');$aB=trim($aB);return is_numeric($aB)?intval($aB):0;}}catch(\Exception$NB){}}}}
namespace Cute\Logging{use \Cute\Logging\Logger;use \Cute\Base\Deferring;defined('LOG_WRITE_FILE_FREQ')or define('LOG_WRITE_FILE_FREQ',0.2);class FileLogger extends Logger{protected$filename='';protected$records=array();function __construct($A='',$q=false,$ZC=false){$this->filename=($A?$A.'_':'').'%s.log';if($q===false){$q=realpath('./logs');}if(is_dir($q)||mkdir($q,0777,true)){$this->filename=$q.DIRECTORY_SEPARATOR.$this->filename;}parent::__construct($ZC);$this->defer();}function close(){$this->writeFiles();unset($this->records);}function writeFiles(){foreach($this->records as$JF=>&$lD){$p=sprintf($this->filename,$JF);$_C=implode('',$lD);$qB=file_put_contents($p,$_C,FILE_APPEND|LOCK_EX);if($qB!==false){$lD=array();}}}function append(){$IF=implode(' ',func_get_args());$yC=date('Ymd');if(!isset($this->records[$yC])){$this->records[$yC]=array();}array_push($this->records[$yC],$IF.PHP_EOL);}function rawlog($PB,$T,array$M=array()){$PB=strtoupper($PB);if($this->compareLevel($PB)){$g=self::format($T,$M);$JC=self::getClientIP();$HF=date('Y-m-d H:i:s');$this->append($HF,$JC,$PB,$g);}if(LOG_WRITE_FILE_FREQ>=1||LOG_WRITE_FILE_FREQ>=mt_rand(1,10000)/10000){$this->writeFiles();}}}use \Cute\Context\Input;abstract class Logger{const EMERGENCY='EMERGENCY';const ALERT='ALERT';const CRITICAL='CRITICAL';const ERROR='ERROR';const WARNING='WARNING';const NOTICE='NOTICE';const INFO='INFO';const DEBUG='DEBUG';protected$threshold=false;protected$threshold_value=null;function __construct($ZC=false){if($ZC===false){$this->threshold=self::DEBUG;}else{$this->threshold=strtoupper($ZC);}}static function format($T,array$M=array()){$g=is_null($T)?'':(string)$T;if(!empty($M)){$pD=array();foreach($M as$D=>$HC){$pD['{'.$D.'}']=$HC;}$g=strtr($g,$pD);}return$g;}static function getClientIP(){return Input::getClientIP();}function compareLevel($PB){static$UC=array(self::EMERGENCY=>0,self::ALERT=>1,self::CRITICAL=>2,self::ERROR=>3,self::WARNING=>4,self::NOTICE=>5,self::INFO=>6,self::DEBUG=>7,);if(is_null($this->threshold_value)&&isset($UC[$this->threshold])){$this->threshold_value=$UC[$this->threshold];}if(isset($UC[$PB])){return$UC[$PB]<=$this->threshold_value;}}function emergency($T,array$M=array()){$this->rawlog(self::EMERGENCY,$T,$M);}function alert($T,array$M=array()){$this->rawlog(self::ALERT,$T,$M);}function critical($T,array$M=array()){$this->rawlog(self::CRITICAL,$T,$M);}function error($T,array$M=array()){$this->rawlog(self::ERROR,$T,$M);}function warning($T,array$M=array()){$this->rawlog(self::WARNING,$T,$M);}function notice($T,array$M=array()){$this->rawlog(self::NOTICE,$T,$M);}function info($T,array$M=array()){$this->rawlog(self::INFO,$T,$M);}function debug($T,array$M=array()){$this->rawlog(self::DEBUG,$T,$M);}abstract function rawlog($PB,$T,array$M=array());abstract function close();}}
namespace Cute\ORM{use \Cute\ORM\Relation;class BelongsTo extends Relation{protected$foreign_key='';function __construct($o='\\Cute\\Model',$N='',$MC=''){parent::__construct($o,$N);$this->foreign_key=$MC;}function getForeignKey($A=''){if(empty($this->foreign_key)){$this->foreign_key=$A.'_id';}return$this->foreign_key;}function relative($A,array&$F){if(empty($F)){return array();}$OB=$this->getForeignKey($A);$DC=$this->newQuery();$t=exec_method_array($this->model,'getPKeys');if(empty($t)){return array();}$P=array();foreach($F as&$m){$P[$m->$OB]=null;}$DC->combine(reset($t),$P,true);foreach($F as&$m){$D=$m->$OB;if(isset($P[$D])){$m->$A=&$P[$D];}else{$m->$A=null;}}return$P;}}use \Cute\ORM\Model;class Column extends Model{protected static$_keys=array('COLUMN_NAME'=>'name','COLUMN_DEFAULT'=>'default','COLUMN_KEY'=>'index','IS_NULLABLE'=>'nullable','COLUMN_TYPE'=>'column','DATA_TYPE'=>'type','CHARACTER_MAXIMUM_LENGTH'=>'length','NUMERIC_PRECISION'=>'precision','NUMERIC_SCALE'=>'scale','DATETIME_PRECISION'=>'datetime',);var$name='';var$default=null;var$index=null;var$nullable='YES';var$column='';var$type='';var$length=null;var$precision=null;var$scale=null;var$datetime=null;static function getTable(){return'COLUMNS';}function __set($TD,$C){if(isset(self::$_keys[$TD])){$A=self::$_keys[$TD];$this->$A=$C;}}function isPrimaryKey(){return$this->index==='PRI';}function isNullable(){return$this->nullable==='YES';}function getCategory(){if(!is_null($this->datetime)){return'datetime';}else if(!is_null($this->precision)){return$this->scale>0?'float':'int';}else if(!is_null($this->length)){return'char';}else{return$this->type;}}}use \Cute\Utility\Inflect;class HasMany extends Relation{protected$foreign_key='';function __construct($o='\\Cute\\Model',$N='',$MC=''){parent::__construct($o,$N);$this->foreign_key=$MC;}function getForeignKey($A=''){if(empty($this->foreign_key)){$Y=$this->query->getTable();$this->foreign_key=Inflect::singularize($Y).'_id';}return$this->foreign_key;}function relative($A,array&$F){if(empty($F)){return array();}$OB=$this->getForeignKey();$DC=$this->newQuery();$P=array();foreach($F as&$m){$P[$m->getID()]=null;}$DC->combine($OB,$P,false);foreach($F as&$m){$D=$m->getID();if(isset($P[$D])){$m->$A=&$P[$D];}else{$m->$A=array();}}return$P;}}use \Cute\ORM\Query;use \Cute\ORM\HasMany;class ManyToMany extends HasMany{protected$another_foreign_key='';protected$middle_table='';function __construct($o='\\Cute\\Model',$N='',$MC='',$AF='',$_E=''){parent::__construct($o,$N,$MC);$this->another_foreign_key=$AF;$this->middle_table=$_E;}function getAnotherForeignKey($A=''){if(empty($this->another_foreign_key)){$this->another_foreign_key=$A.'_id';}return$this->another_foreign_key;}function relative($A,array&$F){if(empty($F)){return array();}return$F;}}class Model{protected static$_fields=array();static function getTable(){return'';}static function getPKeys(){return array();}function getRelations(){return array();}function getFields(){$N=$this->getTable();if(!isset(self::$_fields[$N])){$AB=get_object_vars($this);foreach($AB as$A=>$L){if(starts_with($A,'_')){unset($AB[$A]);}}self::$_fields[$N]=&$AB;}return self::$_fields[$N];}function getID($PC=0){if($t=$this->getPKeys()){$bB=$t[$PC];return$this->$bB;}}function setID($JB){if($t=$this->getPKeys()){foreach($t as$PC=>$bB){$this->$bB=func_get_arg($PC);}}return$this;}function isExists(){$JB=$this->getID();return$JB!==0&&!is_null($JB);}}use \PDO;use \Cute\DB\Database;use \Cute\View\Templater;class Query{const COUNT_INSERT_BULK_MAX=500;protected$db=null;protected$table='';protected$model='';protected$fetch_style=0;protected$constrains=array();protected$parameters=array();protected$page=1;protected$size=-1;protected$additions=array('GROUP BY'=>null,'HAVING'=>null,'ORDER BY'=>null,);protected$relations=array();function __construct(Database&$W,$o='\\Cute\\ORM\\Model',$N=''){$this->db=$W;if(is_object($o)){$this->model=get_class($o);}else{$this->model=$o;}$this->fetch_style=PDO::FETCH_CLASS;if(method_exists($this->model,'__set')||method_exists($this->model,'__construct')){$this->fetch_style=$this->fetch_style|PDO::FETCH_PROPS_LATE;}if(empty($N)||$this->model!=='\\Cute\\ORM\\Model'){$this->table=exec_method_array($this->model,'getTable');}else{$this->table=$N;}}function __call($A,$B){$J=empty($B)?'':implode(', ',$B);$A=str_replace('_',' ',strtoupper($A));if($A==='GROUPBY'||$A==='ORDERBY'){$A=substr($A,0,-2).' BY';}if(array_key_exists($A,$this->additions)){$this->additions[$A]=$J;return$this;}else{$O=$this->select("$A($J)");$R=$O->fetchColumn();$O->closeCursor();return$R;}}static function generateModel(Database&$W,$N,$A='',$s='',$tE=false){$R=$W->readFields($N);if(empty($A)){$A=$tE?Inflect::singularize($N):$N;$A=Inflect::camelize($A);}$Q=APP_ROOT.'/models';if($s){$Q.='/'.str_replace('\\','/',trim($s));}if(!file_exists($Q)){mkdir($Q,0777,true);}$S="$Q/$A.php";$R['name']=$A;$R['ns']=$s;$R['protecteds']=array('password','salt');$EC=new Templater(SRC_ROOT);ob_start();$EC->render('model_tpl.php',$R);$g="<?php\n\n".trim(ob_get_clean());file_put_contents($S,$g);return$S;}function getDB(){return$this->db;}function getModel(){return$this->model;}function getTable($oC=null){if(is_null($oC)){return$this->table;}else{assert($W=$this->getDB());return$W->getTableName($this->table,$oC);}}function join($A){$sE=func_get_args();$o=exec_construct_array($this->model);$dD=$o->getRelations();foreach($sE as$A){if(isset($dD[$A])){$this->relations[$A]=&$dD[$A];}}return$this;}function contain($aD,array$P){$_=count($P);if($_===0){$n='IS NULL';}else if($_===1){$n='= ?';}else{$TB=implode(', ',array_fill(0,count($P),'?'));$n='IN ('.$TB.')';}$P=array_values($P);$this->constrains[]="$aD $n";$this->parameters=array_merge($this->parameters,$P);return$this;}function filter($Z,$C,$n='= ?'){$n=empty($n)?false:strtoupper($n);if(is_array($C)){if(substr_count($Z,'?')===count($C)){$this->constrains[]="$aD $n";$this->parameters=array_merge($this->parameters,$C);}else{$this->contain($Z,$C);}}else if(is_null($C)){if(trim($n)==='<>'){$this->constrains[]="$Z IS NOT NULL";}else{$this->constrains[]="$Z IS NULL";}}else{$this->constrains[]=($n===false)?$Z:"$Z $n";$this->parameters[]=$C;}return$this;}function where($Z='',array&$B=array()){$i=implode(' AND ',$this->constrains);$K=$this->parameters;if($Z||count($B)>0){$i.=($i?' AND ':'').$Z;$K=array_merge($K,$B);}$i=$i?'WHERE '.$i:'';return array($i,$K);}function slice($rE,$BD=1){$this->size=intval($rE);$this->page=intval($BD);return$this;}function count($J='*'){$O=$this->select("COUNT($J)");$R=$O->fetchColumn();$O->closeCursor();return$R;}function getLimit($J='*'){$VC="";$HB="";if(!starts_with($J,'COUNT')&&$this->size>0){$LB=$this->getDB()->getDriverName();if($LB==='sqlsrv'){$VC=sprintf("TOP %d ",$this->size);}else if($LB==='mysql'){$oB="";if($this->page>0){$oB=(($this->page-1)*$this->size).", ";}else if($this->page<0){$CC=ceil($this->count()/$this->size);if($CC>0&&($BD=$this->page+$CC)>0){$oB=($BD*$this->size).", ";}}$HB=sprintf(" LIMIT %s%d",$oB,$this->size);}}return array($VC,$HB);}function select($J='*',$Z='',array&$B=array()){$Y=$this->getTable(true);list($i,$K)=$this->where($Z,$B);if(is_object($J)){$J=get_object_vars($J);}if(is_array($J)){array_walk($J,create_function('&$v,$k','if(!is_numeric($k))$v.=" as ".$k;'));$J=implode(', ',$J);}$J=trim($J);$ZD="";foreach($this->additions as$D=>$C){if(!is_null($C)){$ZD.=" $D $C";}}list($VC,$HB)=$this->getLimit($J);$G="SELECT $VC$J FROM $Y";$G.=($i?' '.$i:'').$ZD.$HB;$W=$this->getDB();return$W->query(rtrim($G),$K);}function rows($D=false,$J='*',$Z=''){$B=array_slice(func_get_args(),3);if($O=$this->select($J,$Z,$B)){$F=array();if($D===false||is_null($D)){$F=$O->fetchAll();}else{while($c=$O->fetch()){$F[$c[$D]]=$c;}}$O->closeCursor();return$F;}}function all($J='*',$Z=''){$B=array_slice(func_get_args(),3);if($O=$this->select($J,$Z,$B)){$F=$O->fetchAll($this->fetch_style,$this->getModel());$O->closeCursor();foreach($this->relations as$A=>&$qE){$qE->bind($this)->relative($A,$F);}}return$F;}function combine($OB,array&$F,$uE=false,$J='*'){if(empty($OB)||count($F)===0){return$F;}$this->contain($OB,array_keys($F));if($J==='*'){$J=sprintf('%s,%s.*',$OB,$this->getTable(false));}if($O=$this->select($J)){$vE=$uE?PDO::FETCH_UNIQUE:PDO::FETCH_GROUP;$zE=$this->fetch_style|$vE;$F=$O->fetchAll($zE,$this->getModel());$O->closeCursor();}return$F;}function get($JB,$D=false,$J='*'){if(empty($D)){$t=exec_method_array($this->getModel(),'getPKeys');if(empty($t)){return;}$D=reset($t);}$WD=$this->slice(1)->all($J,"$D = ?",$JB);return count($WD)>0?reset($WD):null;}function delete($Z=''){$B=array_slice(func_get_args(),1);$Y=$this->getTable(true);list($i,$K)=$this->where($Z,$B);$G="DELETE FROM $Y $i";$W=$this->getDB();if(empty($i)&&$W->getDriverName()==='mysql'){$G="TRUNCATE $Y";}return$W->execute(rtrim($G),$K);}function getUpdateSet(array$AC){$YD=array();$P=array();foreach($AC as$D=>$HC){$YD[]=$D.'=?';$P[]=$HC;}$ID="SET ".implode(', ',$YD);return array($ID,$P);}function update(array$AC,$VB=false,$Z=''){$B=array_slice(func_get_args(),3);$Y=$this->getTable(true);list($i,$K)=$this->where($Z,$B);list($ID,$P)=$this->getUpdateSet($AC);$QC=$VB?'UPDATE DELAYED':'UPDATE';$G="$QC $Y $ID $i";$K=array_merge($P,$K);return$this->getDB()->execute(rtrim($G),$K);}function getInsertSQL(array$J,$VB=false,$FC=false){$Y=$this->getTable(true);if($FC===true){$QC=$VB?'REPLACE DELAYED':'REPLACE INTO';}else{$QC=$VB?'INSERT DELAYED':'INSERT INTO';}if($_=count($J)){$J=implode(',',$J);$TB=implode(', ',array_fill(0,$_,'?'));return array("$QC $Y ($J)",$TB);}else{return array("$QC $Y",'');}}function insert(array$TC,$VB=false,$FC=false){assert($W=$this->getDB());list($G,$TB)=$this->getInsertSQL(array_keys($TC),$VB,$FC);if(!empty($TB)){$G.=" VALUES ($TB)";$K=array_values($TC);if($W->execute($G,$K)){return$W->getPDO()->lastInsertId();}}}function insertBulk(array$mB,array$J=null,$VB=false,$FC=false){assert(count($mB)>0);$Y=$this->getTable(true);if(empty($J)){$J=array_keys(reset($mB));}list($G,$TB)=$this->getInsertSQL($J,$VB,$FC);$yE=array_chunk($mB,self::COUNT_INSERT_BULK_MAX);foreach($yE as$OD){$xE=array_fill(0,count($OD),"($TB)");$G.=" VALUES ".implode(', ',$xE);$wE=array_map('array_values',$OD);$K=exec_funcution_array('array_merge',$wE);$this->getDB()->execute($G,$K);}}}abstract class Relation{protected$query=null;protected$model='';protected$table='';function __construct($o='\\Cute\\Model',$N=''){$this->model=$o;$this->table=$N;}function bind(Query&$DC){$this->query=$DC;return$this;}function newQuery(){assert($W=$this->query->getDB());return new Query($W,$this->model,$this->table);}abstract function relative($A,array&$F);}}
namespace Cute\Utility{class Date extends\DateTime{protected$timestamp=0;function __construct($ED='now',$MB=null){if(is_null($MB)&&$L=constant('DEFAULT_TIMEZONE')){$MB=new\DateTimeZone($L);}if(is_numeric($ED)){parent::__construct('now',$MB);$this->setTimestamp($ED);}else{parent::__construct($ED,$MB);}}static function parseDurtion($DB){if(empty($DB)){return 0;}if(is_int($DB)||is_float($DB)){return$DB;}if(is_string($DB)){$RD=strtolower(substr($DB,-1));if(is_numeric($RD)){return floatval($DB);}$DB=trim(substr($DB,0,-1));$r=1;switch($RD){case'w':$r*=7;case'd':$r*=24;case'h':$r*=60;case'm':$r*=60;}return floatval($DB)*$r;}}function thisMonthBegin(){return new self($this->format('Y-m-01'));}function thisMonthEnd(){return new self($this->format('Y-m-01').' +1 month -1 day');}function nextMonthBegin(){return new self($this->format('Y-m-01').' +1 month');}}class Inflect{protected static$plural=array('/(quiz)$/i'=>"$1zes",'/^(ox)$/i'=>"$1en",'/([m|l])ouse$/i'=>"$1ice",'/(matr|vert|ind)ix|ex$/i'=>"$1ices",'/(x|ch|ss|sh)$/i'=>"$1es",'/([^aeiouy]|qu)y$/i'=>"$1ies",'/(hive)$/i'=>"$1s",'/(?:([^f])fe|([lr])f)$/i'=>"$1$2ves",'/(shea|lea|loa|thie)f$/i'=>"$1ves",'/sis$/i'=>"ses",'/([ti])um$/i'=>"$1a",'/(tomat|potat|ech|her|vet)o$/i'=>"$1oes",'/(bu)s$/i'=>"$1ses",'/(alias)$/i'=>"$1es",'/(octop)us$/i'=>"$1i",'/(ax|test)is$/i'=>"$1es",'/(us)$/i'=>"$1es",'/s$/i'=>"s",'/$/'=>"s");protected static$singular=array('/(quiz)zes$/i'=>"$1",'/(matr)ices$/i'=>"$1ix",'/(vert|ind)ices$/i'=>"$1ex",'/^(ox)en$/i'=>"$1",'/(alias)es$/i'=>"$1",'/(octop|vir)i$/i'=>"$1us",'/(cris|ax|test)es$/i'=>"$1is",'/(shoe)s$/i'=>"$1",'/(o)es$/i'=>"$1",'/(bus)es$/i'=>"$1",'/([m|l])ice$/i'=>"$1ouse",'/(x|ch|ss|sh)es$/i'=>"$1",'/(m)ovies$/i'=>"$1ovie",'/(s)eries$/i'=>"$1eries",'/([^aeiouy]|qu)ies$/i'=>"$1y",'/([lr])ves$/i'=>"$1f",'/(tive)s$/i'=>"$1",'/(hive)s$/i'=>"$1",'/(li|wi|kni)ves$/i'=>"$1fe",'/(shea|loa|lea|thie)ves$/i'=>"$1f",'/(^analy)ses$/i'=>"$1sis",'/((a)naly|(b)a|(d)iagno|(p)arenthe|(p)rogno|(s)ynop|(t)he)ses$/i'=>"$1$2sis",'/([ti])a$/i'=>"$1um",'/(n)ews$/i'=>"$1ews",'/(h|bl)ouses$/i'=>"$1ouse",'/(corpse)s$/i'=>"$1",'/(us)es$/i'=>"$1",'/s$/i'=>"");protected static$irregular=array('move'=>'moves','foot'=>'feet','goose'=>'geese','sex'=>'sexes','child'=>'children','man'=>'men','tooth'=>'teeth','person'=>'people');protected static$uncountable=array('sheep','fish','deer','series','species','money','rice','information','equipment');protected static$abbreviations=array('AD','API','B2B','B2C','C2C','CEO','CFO','COO','CTO','DB','DSA','GEO','GPS','HTML','HTTP','ID','IO','IP','IQ','MD5','MTV','MV','MVC','NBA','OK','P2P','PC','PV','PDF','PHP','QQ','RMB','RSA','SOHO','SHA','TV','UI','URI','URL','USA','VIP','WC','WEB','WAP','WIFI','XML',);static function pluralize($X){if(in_array(strtolower($X),self::$uncountable))return$X;foreach(self::$irregular as$a=>$F){$a='/'.$a.'$/i';if(preg_match($a,$X))return preg_replace($a,$F,$X);}foreach(self::$plural as$a=>$F){if(preg_match($a,$X))return preg_replace($a,$F,$X);}return$X;}static function singularize($X){if(in_array(strtolower($X),self::$uncountable))return$X;foreach(self::$irregular as$F=>$a){$a='/'.$a.'$/i';if(preg_match($a,$X))return preg_replace($a,$F,$X);}foreach(self::$singular as$a=>$F){if(preg_match($a,$X))return preg_replace($a,$F,$X);}return$X;}static function pluralizeIf($_,$X){if($_==1)return"1 $X";else return$_." ".self::pluralize($X);}static function camelize($X,$GF=false){$xB=explode('_',$X);if($GF){$CC=count($xB)-1;$xB[$CC]=self::pluralize($xB[$CC]);}foreach($xB as&$f){$f=ucfirst($f);if(strlen($f)>1&&strlen($f)<=4){$PD=strtoupper($f);if(in_array($PD,self::$abbreviations)){$f=$PD;}}}return implode('',$xB);}static function flatten($X,$qD='_'){$a='/([A-Z][A-Z0-9]*(?=$|[A-Z][a-z0-9])|[A-Za-z][a-z0-9]+)/';preg_match_all($a,$X,$EB);return strtolower(implode($qD,$EB[0]));}}class Polling{protected$channels=array();function __construct(array$xD=array()){$this->channels=$xD;}function randRoll(){static$pB=0;if($pB===0){shuffle($this->channels);$pB=count($this->channels);}return$this->channels[--$pB];}function roundRobin(&$XC,$uD=1){if(count($this->channels)<2){return current($this->channels);}$WC=null;$XD=0;$FD=0;foreach($this->channels as$JB=>$c){$VD=$c['weight']*$uD;$FD+=$VD;$c['last_value']+=$VD;if(empty($XC)&&$c['last_value']>=$XD){$WC=$JB;$XD=$c['last_value'];}}if(!empty($XC)){$this->channels[$XC]['last_value']-=$FD;return$this->channels[$XC];}else if(!is_null($WC)){$this->channels[$WC]['last_value']-=$FD;return$this->channels[$WC];}}}class Word{protected$content='';function __construct($g=''){$this->content=$g;}static function randHash($b=6){$b=$b>32?32:$b;$OE=md5(mt_rand().time());$DE=substr($OE,0,$b);return$DE;}static function randString($b=6,$KE=2,$zB=''){if(empty($zB)){$zB='abcdefghijkmnpqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ23456789';}srand((float)microtime()*1000000);$SD='';$YC=ceil($b/$KE);while($b>0){$zB=str_shuffle($zB);$SD.=substr($zB,0,$YC);$b-=$YC;$YC=min($b,$YC);}return$SD;}function hasNonASCII(){return preg_match('/[^\x20-\x7f]/',$this->content);}function fetchFirstURL(){if(preg_match('/^http[^\x23-\x76]/i',$this->content,$EB)){return$EB[1];}}function getNumbers($zD=true){$r=preg_match_all('/[\d.]+/',$this->content,$EB);if($r===0||$r===false){return false;}$nD=implode(current($EB));return$zD?intval($nD):$nD;}function ver2int(){$IE=$this->getNumbers(false);$AD=array_map('intval',explode('.',$IE));$AD=array_pad($AD,3,0);return intval(vsprintf('%d%02d%02d',$AD));}}}
namespace Cute\View{class Compiler{protected$env=null;protected$source_dir='';protected$compiled_dir='';function __construct(){\app()->import('Twig',VENDOR_ROOT.'/Twig/lib');$this->env=new\Twig_Environment();}function addFunction($A,$FE=null){$JE=new\Twig_SimpleFunction($A,$FE);return$this->env->addFunction($A,$JE);}function setSourceDir($LC){$this->source_dir=rtrim($LC,' /\\');if(!file_exists($this->source_dir)){@mkdir($this->source_dir,0777,true);}$BE=new\Twig_Loader_Filesystem(array($this->source_dir));$this->env->setLoader($BE);return$this;}function setCompiledDir($d){$d=rtrim($d,' /\\');if($this->compiled_dir!==$d){$this->compiled_dir=$d;}if(!file_exists($this->compiled_dir)){@mkdir($this->compiled_dir,0777,true);}return$this;}function isSourceRelational(){return true;}function compileFile($XB,$_B,array$M=array()){$g=$this->env->loadTemplate($XB)->render($M);file_put_contents($_B,$g,LOCK_EX);}function compileTpl($e,$XB='',array$M=array()){$e=ltrim(str_replace('\\','/',$e),'/');if(empty($XB)){$XB=$this->source_dir.'/'.$e;}$_B=$this->compiled_dir.'/'.$e;$d=dirname($_B);if(!is_dir($d)){mkdir($d,0777,true);}if($this->isSourceRelational()){$XB=substr($XB,strlen($this->source_dir)+1);}$this->compileFile($XB,$_B,$M);return$_B;}function compileAll($Q=false,array$M=array()){if(is_null($Q)||$Q===false){$Q=$this->source_dir;}else{$Q=rtrim(str_replace('\\','/',$Q),'/');}$_=0;$AE=scandir($Q);foreach($AE as$HD){if($HD==='.'||$HD==='..'){continue;}$gC=$Q.'/'.$HD;if(is_dir($gC)){$this->compileAll($gC);}else{$e=substr($gC,strlen($this->source_dir));$this->compileTpl($e,$gC,$M);$_++;}}return$_;}}use \Cute\View\Compiler;class Templater{var$compiler=null;var$globals=array();protected$source_dir='';protected$extend_files=array();protected$template_blocks=array();protected$current_block='';function __construct($LC,$d=false){$this->setSourceDir($LC);if($d){$this->setCompileDir($d);}}static function replaceWith($g,array$M=array()){if(!empty($M)){$g=strtr($g,$M);}return$g;}function setSourceDir($LC){$this->source_dir=rtrim($LC,' /\\');if(!file_exists($this->source_dir)){@mkdir($this->source_dir,0777,true);}}function setCompileDir($d){if(is_null($this->compiler)){$this->compiler=new Compiler();}$d=rtrim($d,' /\\');$this->compiler->setSourceDir($this->source_dir);$this->compiler->setCompiledDir($d);$this->setSourceDir($d);return$this;}function updateGlobals(array$rD){if(func_num_args()===1){$this->globals=array_merge($this->globals,$rD);}else{$B=func_get_args();array_unshift($B,$this->globals);$this->globals=exec_function_array('array_merge',$B);}return$this;}function updateFunctions(array$vD){$tD=$this->compiler;foreach($vD as$A=>$l){$tD->addFunction($A,$l);}}function prepareFile($e){if($this->compiler){return$this->compiler->compileTpl($e,'',$this->globals);}else{return$this->source_dir.'/'.$e;}}function render($e,array$M=array()){extract($this->globals);extract($M);include$this->prepareFile($e);if(!empty($this->extend_files)){$CE=array_pop($this->extend_files);foreach($this->extend_files as$p){include$this->prepareFile($p);}extract($this->template_blocks);include$this->prepareFile($CE);}}function extendTpl($e){array_push($this->extend_files,$e);}function includeTpl($e,array$M=array()){extract($this->globals);extract($M);ob_start();include$this->prepareFile($e);$QE=trim(ob_get_clean());echo$QE;}function blockStart($ME='content'){$this->current_block=$ME;ob_start();}function blockEnd(){$LE=trim(ob_get_clean());$this->template_blocks[$this->current_block]=$LE;}}}
namespace Cute\Widget{use \Cute\Utility\Word;class Captcha{const ENCRYPT_SALT='captcha_code_salt';const FILENAME_PREFIX='cc_';var$phrase_size=6;var$width=80;var$height=30;var$font=null;var$finger_print=null;protected$builder=null;protected$savedir='';protected$saveurl='';function __construct($x=''){\app()->import('Gregwar',VENDOR_ROOT);$this->builder=new\Gregwar\Captcha\CaptchaBuilder();if(!empty($x)){$this->phrase_size=strlen($x);$this->builder->setPhrase($x);}else{$this->refresh();}$this->savedir=APP_ROOT.'/public/assets/captcha';@mkdir($this->savedir,0755,true);$this->saveurl=app()->getAssetURL().'/captcha';}static function newInstance($PE=6,$EE=80,$GE=30,$wD=null,$NE=null){$WB=new self();$WB->phrase_size=$PE;$WB->width=$EE;$WB->height=$GE;$WB->font=$wD;$WB->finger_print=$NE;return$WB;}protected static function encrypt($x){return md5(strtolower($x).self::ENCRYPT_SALT);}static function clean($Q,$zC=0.3,$HB=60){$_D=mt_rand(1,10000)/10000;if($zC<=0||$zC>=1||$_D<=$zC){$HE=time()-$HB;$hC=glob($Q.'cc_*.jpg');foreach($hC as$p){if(fileatime($p)<$HE){unlink($p);}}}}function refresh(){$x=Word::randString($this->phrase_size);$this->builder->setPhrase($x);return$this;}function build(array$B=array()){$sD=array($this->width,$this->height,$this->font,$this->finger_print,);exec_method_array($this->builder,'build',$B+$sD);return$this->builder;}function show(){@session_start();$x=$this->builder->getPhrase();$_SESSION['phrase']=self::encrypt($x);@header('Content-Type: image/jpeg');$this->build(func_get_args());return$this->builder->output();}function save(){self::clean($this->savedir,0.3,60);$S=uniqid(self::FILENAME_PREFIX).'.jpg';$this->build(func_get_args());$this->builder->save($this->savedir.'/'.$S);$x=$this->builder->getPhrase();$IB=$this->saveurl.'/'.$S.'#'.self::encrypt($x);die($IB);}}use \Cute\Widget\RedisCounter;use \Cute\Widget\FileCounter;abstract class Counter{protected$name='';protected$value=0;protected$maxium=0;function __construct($A,$C=0,$lC=0){$this->name=$A;$this->value=intval($C);$this->maxium=intval($lC);}static function newInstance($A,$C=0,$lC=0){$KB=new RedisCounter($A,$C,$lC);if(!$KB->connect()){$KB=new FileCounter($A,$C,$lC);$KB->connect();}$KB->readValue();return$KB;}function increase($yD=1){$this->value+=$yD;if($this->maxium>0){$this->value=$this->value%$this->maxium;}$this->writeValue();return$this->value;}abstract function connect();abstract function readValue();abstract function writeValue();abstract function remove();}use \Cute\Widget\Counter;class FileCounter extends Counter{protected$filename='';function connect($Q=false){if(empty($Q)&&$Q!==''){$Q=sys_get_temp_dir();}else{$Q=rtrim(str_replace('\\','/',$Q),'/');}$this->filename=$Q.'/'.$this->name.'.txt';if(!is_readable($this->filename)){$ZB=touch($this->filename);}else{$ZB=true;}if(!$ZB){$this->filename='';}return$ZB;}function readValue(){$C=false;$qB=filesize($this->filename);if($qB>0){$C=file_get_contents($this->filename);}if($C!==false&&strlen(trim($C))>0){$this->value=intval($C);}else{$this->writeValue();}return$this->value;}function writeValue(){$qB=file_put_contents($this->filename,$this->value);return$qB&&$qB>0;}function remove(){if(file_exists($this->filename)){return unlink($this->filename);}}}class RedisCounter extends Counter{protected$redis=null;function connect($wC='127.0.0.1',$KC=6379){if(!extension_loaded('redis')){return false;}$this->redis=new\Redis();try{$ZB=$this->redis->connect($wC,$KC);}catch(Exception$NB){$ZB=false;}if(!$ZB){$this->redis=null;}return$ZB;}function readValue(){$C=$this->redis->get($this->name);if($C!==false&&strlen(trim($C))>0){$this->value=intval($C);}else{$this->writeValue();}return$this->value;}function writeValue(){return$this->redis->set($this->name,$this->value);}function remove(){if($this->redis->exists($this->name)){$F=$this->redis->del($this->name);$this->redis->close();return$F;}}}}