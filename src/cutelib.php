<?php
namespace{defined('VENDOR_ROOT')or define('VENDOR_ROOT',APP_ROOT.'/vendor');defined('APP_CLASS')or define('APP_CLASS','\\Cute\\Website');defined('ERROR_LEVEL')or define('ERROR_LEVEL',E_ALL&~E_DEPRECATED&~E_NOTICE);@error_reporting(ERROR_LEVEL);if(!class_exists('\\Cute\\Importer')){require_once SRC_ROOT.'/Cute/Importer.php';}function app($hD=''){static$i=null;if(is_null($i)&&$hD){$KD=\Cute\Importer::getInstance();$KD->addNamespace('Cute',SRC_ROOT);$pB=\Cute\Base\Storage::newInstance($hD);$H=constant('APP_CLASS');$i=new$H($pB);$i->install($KD,array('import'=>'addNamespace'));$i->initialize();}return$i;}function starts_with($eC,$yB){return strncmp($eC,$yB,strlen($yB))===0;}function ends_with($eC,$yB){$GD=strlen($yB);return$GD===0||(strlen($eC)>=$GD&&substr_compare($eC,$yB,-$GD)===0);}function convert($f,$tB='UTF-8'){$tB=strtoupper($tB);if(function_exists('mb_detect_encoding')){return mb_detect_encoding($f,$tB,true)?$f:mb_convert_encoding($f,$tB,'UTF-8, GBK');}else if(function_exists('iconv')){$dE=$tB==='UTF-8'?'GBK':'UTF-8';return iconv($dE,$tB.'//IGNORE',$f);}}function b64decode($f){if(preg_match('!([A-Za-z0-9+/= ]+)!',$f,$JB)){$f=$JB[1];}return base64_decode($f);}function exec_function_array($n,array$A=array()){switch(count($A)){case 0:return$n();case 1:return$n($A[0]);case 2:return$n($A[0],$A[1]);case 3:return$n($A[0],$A[1],$A[2]);case 4:return$n($A[0],$A[1],$A[2],$A[3]);case 5:return$n($A[0],$A[1],$A[2],$A[3],$A[4]);default:if(is_object($n)){$x=new ReflectionMethod($n,'__invoke');return$x->invokeArgs($n,$A);}else if(is_callable($n)){$x=new ReflectionFunction($n);return$x->invokeArgs($A);}}}function exec_method_array($z,$V,array$A=array()){if(is_object($z)){switch(count($A)){case 0:return$z->{$V}();case 1:return$z->{$V}($A[0]);case 2:return$z->{$V}($A[0],$A[1]);case 3:return$z->{$V}($A[0],$A[1],$A[2]);case 4:return$z->{$V}($A[0],$A[1],$A[2],$A[3]);case 5:return$z->{$V}($A[0],$A[1],$A[2],$A[3],$A[4]);}}if(method_exists($z,$V)){$x=new ReflectionMethod($z,$V);if($x->isPublic()&&!$x->isAbstract()){if($x->isStatic()){return$x->invokeArgs(null,$A);}else{return$x->invokeArgs($z,$A);}}}}function exec_construct_array($H,array$A=array()){switch(count($A)){case 0:return new$H();case 1:return new$H($A[0]);case 2:return new$H($A[0],$A[1]);case 3:return new$H($A[0],$A[1],$A[2]);case 4:return new$H($A[0],$A[1],$A[2],$A[3]);case 5:return new$H($A[0],$A[1],$A[2],$A[3],$A[4]);default:if(class_exists($H)){$x=new ReflectionClass($H);return$x->newInstanceArgs($A);}}}}
namespace Cute{use \Cute\Importer;use \Cute\Factory;use \Cute\Base\Storage;abstract class Application{protected$shortcuts=array();function __construct(Storage&$pB){$this->install($pB,array('getConfig'));$cE=new Factory($pB);$this->install($cE,array('load'));}function initialize(){return$this;}function install($_C,array$bE){foreach($bE as$kC=>$V){$kC=strtolower(is_numeric($kC)?$V:$kC);$this->shortcuts[$kC]=array($_C,$V);}return$this;}function __call($B,$A){$B=strtolower($B);if(isset($this->shortcuts[$B])){list($_C,$V)=$this->shortcuts[$B];return exec_method_array($_C,$V,$A);}}abstract function run();}abstract class Command{protected$app=null;protected$args=array();protected$pid=0;var$cmdfile='';function __construct($i,$nC,array$LB=array()){$this->app=$i;$this->cmdfile=$nC;list($A,$AB)=self::parse($LB);$this->args=array_merge($A,$AB);}function __clone(){$this->args=array_change_key_case($this->args);}function __toString(){$A=array();foreach($this->args as$D=>$C){if(is_numeric($D)){$A[]=$C;}else if($C===true){$A[]=strlen($D)===1?" -$D":" --$D";}else{$A[]=" --$D='$C'";}}$YB=$this->cmdfile;$YB.=' '.substr(__CLASS__,0,-strlen('Command'));$YB.=' '.implode(' ',$A);return$YB;}static function parse(array$LB){$A=array();$AB=array();foreach($LB as$FC=>$y){$y=trim($y);if($y==='--'){$A[]=implode(' ',array_slice($LB,$FC+1));break;}if(substr($y,0,1)!=='-'){$A[]=$y;}else if(substr($y,1,1)!=='-'){$DC=str_split(substr($y,1));foreach($DC as$D){$AB[$D]=true;}}else{if(($SD=strpos($y,'='))!==false){$D=substr($y,2,$SD-2);$C=substr($y,$SD+1);}else{$D=substr($y,2);$C=true;}if(!array_key_exists($D,$AB)){$AB[$D]=$C;}else{if(!is_array($AB[$D])){$AB[$D]=array($AB[$D]);}$AB[$D][]=$C;}}}return array($A,$AB);}function addArg($C,$D=false){if($D===false||is_null($D)){$this->args[]=$C;}else{$this->args[$D]=$C;}return$this;}function getArg($D=false,$L=null){if($D===false||is_null($D)){return$this->args;}if(isset($this->args[$D])){return$this->args[$D];}else{return$L;}}function popArg($D){if($D===false||is_null($D)){return;}if(isset($this->args[$D])){$C=$this->args[$D];unset($this->args[$D]);return$C;}}function readPid($jB=null){if(!is_null($jB)&&is_readable($jB)){$iB=trim(file_get_contents($jB));if(is_numeric($iB)){$this->pid=$iB;}}return$this->pid;}function isRunning(){if($this->pid>0){try{$F=shell_exec(sprintf('ps %d',$this->pid));return substr_count($F,"\n")>=2;}catch(\Exception$IB){}}return false;}function wait($aE=0.1){while($this->isRunning()){usleep($aE*1000000);}return true;}function stop(){if($this->pid>0&&$this->isRunning()){return posix_kill($this->pid,SIGTERM);}}function fork($jB=null,array$OC=array()){$kB=clone$this;$kB->args=array_merge($kB->args,$OC);$YB=strval($kB);$i=$kB->app;if($i->outfile!==1){$YB.=' > '.$i->getFileSymbol($i->outfile,true);}if($i->errfile!==2){$YB.=' 2 > '.$i->getFileSymbol($i->errfile,true);}if($iB=shell_exec($YB.' & echo $!')){$iB=trim($iB);$kB->pid=intval($iB);if(!is_null($jB)){file_put_contents($jB,$iB.PHP_EOL,LOCK_EX);}}return$kB->pid;}function loop($p=1,$PC=0,$XD=0){if($PC>0){$PC=intval($PC)+time();}do{$this->execute();if($p>0){$p--;}if($XD>0){usleep($XD*1000000);}}while($p===0||$PC<0||$PC<time());}abstract function execute();}use \Cute\Application;use \Cute\Command;use \Cute\Utility\Inflect;class Console extends Application{const STDIN='php://stdin';const STDOUT='php://stdout';const STDERR='php://stderr';const DEVNULL='/dev/null';const COLOR_BLACK=90;const COLOR_RED=91;const COLOR_GREEN=92;const COLOR_YELLOW=93;const COLOR_BLUE=94;const COLOR_MAGENTA=95;const COLOR_CYAN=96;const COLOR_WHITE=97;protected$color=false;var$outfile=1;var$errfile=null;function initialize(){return$this;}static function getFileSymbol($k,$vC=false){if(is_null($k)){return self::DEVNULL;}else if(is_int($k)){if($k===0){return$vC?'&0':self::STDIN;}else if($k===1){return$vC?'&1':self::STDOUT;}else if($k===2){return$vC?'&2':self::STDERR;}}return strval($k);}static function appendTo($eB,$fB=false,$rB=null){if(empty($rB)&&$rB!==0){return 0;}if(is_int($rB)&&is_int($fB)){$eB=sprintf("\033[%dm%s\033[%dm",$fB,$eB,0);}$rB=self::getFileSymbol($rB);return file_put_contents($rB,$eB,FILE_APPEND|LOCK_EX);}function setColor($fB){if(is_string($fB)){$fB='COLOR_'.strtoupper($fB);$this->color=constant(__CLASS__.'::'.$fB);}return$this;}function write($eB){if(func_num_args()>1){$eB=exec_function_array('sprintf',func_get_args());}return self::appendTo($eB,$this->color,$this->outfile);}function writeln($eB){$A=func_get_args();$A[0].=PHP_EOL;return exec_method_array($this,'write',$A);}function mount($U){$QD=func_get_args();foreach($QD as&$U){$U=rtrim($U,DIRECTORY_SEPARATOR);}$wC=PATH_SEPARATOR.implode(PATH_SEPARATOR,$QD);set_include_path(get_include_path().$wC);return$this;}function run(){if(php_sapi_name()!=='cli'){return;}if($_SERVER['argc']<2){return;}$LB=$_SERVER['argv'];$nC=array_shift($LB);$B=array_shift($LB);$H=Inflect::camelize($B).'Command';@require_once$H.'.php';if(class_exists($H)){$l=new$H($this,$nC,$LB);return$l->execute();}}}class Factory{protected$storage=null;protected$objects=array();function __construct(Storage&$pB){$this->storage=$pB;}function normalize($H){return rtrim($H,'\\');}function create($H,$B='default'){$H=$this->normalize($H);$dC=$this->storage->getSectionOnce($H);$O=$dC->getArray($B);if($B!=='default'){$O=array_merge($dC->getArray('default'),$O);}if(class_exists($H)){foreach($O as$D=>&$C){if(starts_with($D,'\\')){$C=$this->load($D,$C);}}return exec_construct_array($H,array_values($O));}}function load($H,$B='default'){$H=$this->normalize($H);if(!isset($this->objects[$H])){$this->objects[$H]=array();if(!isset($this->objects[$H][$B])){$this->objects[$H][$B]=$this->create($H,$B);}}return$this->objects[$H][$B];}}class Handler{protected$app=null;protected$succor=null;function __construct($sB=null){$this->app=app();$this->succor=$sB;}function init($V){return method_exists($this,$V)?$V:'';}function __invoke(){$V=$this->app->getMethod();$A=func_get_args();if($V=$this->init($V)){return exec_method_array($this,$V,$A);}else if($this->succor){return exec_function_array($this->succor,$A);}else{return$this->app->abort(403);}}}if(!function_exists('trait_exists')){function trait_exists($H,$iC){return false;}}final class Importer{private static$instance=null;private$classes=array();private$namespaces=array();private function __construct(){}static function getInstance(){if(is_null(self::$instance)){self::$instance=new self();self::$instance->register();}return self::$instance;}static function exists($H,$iC=true){return class_exists($H,$iC)||interface_exists($H,$iC)||trait_exists($H,$iC);}function autoload($H){$H=trim($H,'\\_');if(isset($this->classes[$H])){require_once$this->classes[$H];return self::exists($H,false);}$eE=$this->checkNamespace($H);return($eE===true);}function register(){return spl_autoload_register(array($this,'autoload'));}function addClass($S,$H){$LD=func_get_args();$S=array_shift($LD);if(is_readable($S)){foreach($LD as$H){$this->classes[trim($H,'\\')]=$S;}}ksort($this->classes);return$this;}function addNamespaceStrip($q,$P){$q=trim($q,'\\');$P=rtrim($P,'\\/');$this->namespaces[$q]=$P;ksort($this->namespaces);return$this;}function addNamespace($q,$P){$q=trim($q,'\\');$TB=strtok($q,'\\_');$P=rtrim($P,'\\/').DIRECTORY_SEPARATOR.$TB;return$this->addNamespaceStrip($q,$P);}function checkNamespace($H){$TB=strtok($H,'\\_');$a=strlen($TB)+1;if(isset($this->namespaces[$TB])){$U=$this->namespaces[$TB];}else if(isset($this->namespaces[''])){$U=$this->namespaces[''];}else{return false;}$t=$U.DIRECTORY_SEPARATOR;$t.=str_replace(array('\\','_'),DIRECTORY_SEPARATOR,substr($H,$a));if(file_exists($t.'.php')){require_once$t.'.php';if(self::exists($H,false)){return true;}}while($TB){$U.=DIRECTORY_SEPARATOR.$TB;if(file_exists($U.'.php')){require_once$U.'.php';if(self::exists($H,false)){return true;}}if(!file_exists($U)){return false;}$TB=strtok('\\_');}}}use \Cute\Context\Router;class Website extends Application{protected$method='';var$url='';var$rule='';function initialize(){$hB=Router::getCurrent();$this->install($hB,array('dispatch','abort','redirect'));$this->install('\\Cute\\Context\\Input',array('getClientIP','input'=>'getInstance',));return$this;}function route($U,$w){$hB=Router::getCurrent();return$hB->route($U,$w);}function mount($r,$MC='*.php'){$hB=Router::getCurrent();$hB->mount($r,$MC);return$this;}function getMethod(){if(empty($this->method)){$dB=$this->input('SERVER');$V=$dB->request('_method','');if(empty($V)){$V=$dB->get('REQUEST_METHOD','GET');}$this->method=strtolower($V);}return$this->method;}function run(){$fE=$this->getConfig('route_key','r');$U=$this->input('GET')->get($fE,'/');try{$gC=$this->dispatch($U);$sB=null;foreach($gC['handlers']as$w){if($w&&class_exists($w,true)){$w=new$w($sB);}if($w&&is_callable($w)){$sB=&$w;}}if($sB){$this->url=$gC['url'];$this->rule=$gC['rule'];$kD=exec_function_array($sB,$gC['args']);}}catch(\Exception$IB){$kD=strval($IB);}return die($kD);}}}
namespace Cute\Base{trait Deferring{protected$IF=false;function defer(){register_shutdown_function(function($jE){$jE->__destruct();},$this);}function __destruct(){if($this->closed===false){$this->close();}$this->closed=true;}function close(){}}trait Mocking{protected$cC=null;private function __construct(&$cC=null){$this->inner=$cC;}static function mock(&$cC=null){$FB=new self($cC);return$FB->isReady()?$FB->inner:$FB;}function __call($B,$qC){return false;}function __set($B,$C){return false;}function __get($B){return;}function isReady(){return!is_null($this->inner);}}use \ArrayObject;class Storage extends ArrayObject{const CONFIG_SECTION_NAME='configs';function __construct($dB=array(),$iE=ArrayObject::ARRAY_AS_PROPS){parent::__construct($dB,$iE);}static function newInstance($S,$fD=false){$S.=empty($fD)?'':$fD;assert(is_readable($S));return new self(include$S);}function getItem($B,$L=null){$cD=$this->offsetGet($B);return is_null($cD)?$L:$cD;}function getArray($B,array$L=array()){$O=$this->getItem($B);return is_array($O)?$O:$L;}function getSection($B){$O=$this->getArray($B,array());return new self($O);}function getSectionOnce($B){$O=$this->getItem($B);if(!($O instanceof self)){$O=new self($O);$this->offsetSet($B,$O);}return$O;}function getConfig($B,$L=null){$dC=$this->getSectionOnce(self::CONFIG_SECTION_NAME);return$dC->getItem($B,$L);}}}
namespace Cute\Context{class Input{protected static$instances=array();protected static$client_ip='-';protected$input_type=null;protected$data=array();protected$done=false;protected function __construct($GB='POST'){$this->input_type=constant('INPUT_'.$GB);if($GB==='REQUEST'){$this->raw_data=$_REQUEST;}assert(!is_null($this->input_type));}function __call($B,$qC){if(starts_with($B,'get')&&count($qC)>0){$E=substr($B,3);@list($D,$L)=$qC;return$this->get($D,$L,$E);}}static function getInstance($GB='POST'){$GB=strtoupper($GB);if(!isset(self::$instances[$GB])){$RB=new static($GB);self::$instances[$GB]=$RB;}return self::$instances[$GB];}static function request($D,$L=null,$E=false){$hE=self::getInstance('POST');$C=$hE->get($D,$L,$E);if($C===$L){$gE=self::getInstance('GET');$C=$gE->get($D,$L,$E);}return$C;}static function getClientIP(){if(strlen(self::$client_ip)>=7){return self::$client_ip;}$DC=array('HTTP_CLIENT_IP','HTTP_X_REAL_IP','HTTP_X_FORWARDED_FOR','HTTP_X_FORWARDED','HTTP_X_CLUSTER_CLIENT_IP','HTTP_FORWARDED_FOR','HTTP_FORWARDED','REMOTE_ADDR');$ZE=self::getInstance('SERVER');foreach($DC as$D){$HC=$ZE->get($D);if($HC&&strlen($HC)>=7){self::$client_ip=$HC;break;}}return self::$client_ip;}static function detectType($E){$E=empty($E)?'string':strtolower($E);foreach(filter_list()as$B){if(ends_with($B,$E)){return filter_id($B);}}}static function coerce($C,$E='raw'){if(is_array($C)){foreach($C as$D=>$GC){if(is_array($E)&&isset($E[$D])){$eD=$E[$D];}else{$eD=$E;}$C[$D]=self::coerce($GC,$eD);}}else{$E=strtolower($E);if($E==='int'||$E==='float'){settype($C,$E);}else if($E==='array'){$C=(array)$C;}else if($E!=='raw'){settype($C,'string');}}return$C;}protected function filterData($D,$E){$E=self::detectType($E);return filter_input($this->input_type,$D,$E);}protected function filterArrayData($bB){if(is_array($bB)){foreach($bB as$D=>&$E){if(is_array($E)){$E['filter']=self::detectType($E['filter']);}else{$E=self::detectType($E);}}}else{$bB=self::detectType($bB);}return filter_input_array($this->input_type,$bB);}function get($D,$L=null,$E=false){if(!array_key_exists($D,$this->data)){if(is_array($L)){$E=array($D=>array('filter'=>$E,'flags'=>FILTER_FORCE_ARRAY));$O=$this->filterArrayData($E);$this->data=array_merge($this->data,$O);}else{$C=$this->filterData($D,$E);if(is_null($C)||$C===false){$C=self::coerce($L,$E);}$this->data[$D]=$C;}}return$this->data[$D];}function all($D=false,$bB=false){if($this->done===false){$this->data=$this->filterArrayData($bB);}if(is_null($this->data)){$this->data=array();}if($D===false){return$this->data;}else if(array_key_exists($D,$this->data)){return$this->data[$D];}}}use \Cute\Context\Input;class Locale{protected$language='';protected$locale_dir='';protected$timezone='Asia/Shanghai';function __construct($yC='',$HB=''){if(empty($yC)){$yC=APP_ROOT.'/protected/locales';}$this->locale_dir=$yC;$this->timezone=$HB;}function detectLanguage(){$dB=Input::getInstance('SERVER');$EB=strstr($dB->get('LANG',''),'.',true);if(empty($EB)){$YE=$dB->get('HTTP_ACCEPT_LANGUAGE','');preg_match_all('/([a-z]{2}\-?[A-Z]{0,2})/',$YE,$JB);foreach($JB[0]as$EB){$EB=str_replace('-','_',$EB);if(file_exists($this->locale_dir.'/'.$EB)){break;}}}return$EB;}function setLocale($EB,$uC='messages'){if($EB){$this->language=$EB;}else{$this->language=$this->detectLanguage();}putenv('LANG='.$this->language);setlocale(LC_ALL,$this->language);bindtextdomain($uC,$this->locale_dir);bind_textdomain_codeset($uC,'UTF-8');textdomain($uC);return$this->language;}function setTimezone($HB){if($HB){$this->timezone=$HB;}@date_default_timezone_set($this->timezone);return$this->timezone;}}class Router{protected static$current=null;static$aliases=array('<int>'=>'([0-9\-]+)','<float>'=>'([0-9\.\-]+)','<num>'=>'([0-9\.\-,]*)','<string>'=>'([a-z0-9\-_]+)','<page>'=>'([0-9]*)/?([0-9]*)/?','<path>'=>'([a-z0-9\-_/])');protected$filename='';protected$prefix='';protected$children=array();protected$items=array();function __construct($S='',$j='/'){$this->filename=$S;$this->prefix=rtrim($j,'/');self::$current=$this;if($S&&is_readable($S)){include_once$S;}}static function getCurrent(){if(is_null(self::$current)){self::$current=new self();}return self::$current;}static function toPrefix($S){$RE=strstr(basename($S),'.');$QE=substr($S,0,-strlen($RE));$j=str_replace(DIRECTORY_SEPARATOR,'/',$QE);return strtolower(rtrim($j,'/'));}static function compileUrl($DB,$PE=false){$DB=preg_quote(strtolower(rtrim($DB,'/')));$DC=array_map('preg_quote',array_keys(self::$aliases));$N=array_values(self::$aliases);$DB=str_replace($DC,$N,$DB);$MC=($PE===false)?'':'(.*)?';return'!^'.$DB.'/?'.$MC.'$!';}function route($U,&$w){$LC=self::compileUrl($U);if(func_num_args()>2){$hC=array_slice(func_get_args(),1);}else{$hC=array($w);}$this->items[$LC]=$hC;return$LC;}function mount($r,$MC='*.php'){$r=rtrim($r,DIRECTORY_SEPARATOR);$aC=glob($r.'/'.$MC,GLOB_BRACE);if(!empty($aC)){$OE=strlen($r);foreach($aC as$S){$j=self::toPrefix(substr($S,$OE));$this->children[$j]=$S;}}return$this;}function dispatch($U,$bD=false){$U=rtrim(strtolower($U),' /').'/';if(!$bD){krsort($this->children);}foreach($this->children as$j=>$S){if(starts_with($U,$j)){$hB=new self($S,$j);$U=substr($U,strlen($j));return$hB->dispatch($U);}}if(!$bD){krsort($this->items);}foreach($this->items as$LC=>$hC){if(preg_match($LC,$U,$A)===1){$DB=$this->prefix.array_shift($A);return array('handlers'=>&$hC,'args'=>$A,'url'=>$DB,'rule'=>$LC);}}$this->abort(404);return array('handlers'=>array());}function abort($SE=500){return@http_response_code($SE);}function redirect($TE='',$XE=false){$WE=$XE?301:302;@header('Location: '.$TE,true,$WE);return die();}}class Session{}}
namespace Cute\DB{use \DateTime;use \PDO;use \PDOException;use \Cute\DB\Literal;class Database{const TYPE_UNSUPPORT=0;const TYPE_TOP=1;const TYPE_LIMIT=2;protected$pdo=null;protected$dbname='';protected$prefix='';function __construct(PDO&$VE,$OB='',$j=''){$this->pdo=$VE;if($OB){$this->useDB($OB,$j);}}function useDB($OB,$j='',$ZC=false){assert(!is_null($this->pdo));if($ZC&&$this->getDriverName()==='mysql'){$this->pdo->exec("CREATE DATABASE IF NOT EXIST `$OB`");}$this->pdo->exec("USE `$OB`");$this->dbname=$OB;$this->prefix=empty($j)?'':$j;return$this;}function getPDO(){return$this->pdo;}function getDriverName(){assert(!is_null($this->pdo));$lB=$this->pdo->getAttribute(PDO::ATTR_DRIVER_NAME);$lB=strtolower($lB);return$lB==='dblib'?'sqlsrv':$lB;}function getDBName(){return$this->dbname;}function getTableName($R,$fC=false){$Y=$this->prefix.$R;$jD=$this->getDriverName();if($jD==='mysql'){$G="SHOW Variables LIKE 'lower_case_table_names'";$UE=$this->fetch($G,array(),'Value');if(intval($UE)===1){$Y=strtolower($Y);}}if($fC===false){return$Y;}switch($jD){case'mysql':$Y="`$Y`";break;case'sqlite':case'sqlsrv':$Y="[$Y]";break;}return$Y;}function inline($s){return new Literal($s);}function quote($s){if(is_null($this->pdo)||is_null($s)||$s instanceof Literal||$s instanceof DateTime){return Literal::quote($s);}else{$E=is_int($s)?PDO::PARAM_INT:PDO::PARAM_STR;return$this->pdo->quote($s,$E);}}function embed($G,array$K=array()){foreach($K as&$s){$s=$this->quote($s);}$G=str_replace('?','%s',$G);return vsprintf($G,$K);}function execute($G,array$K=array()){assert(!is_null($this->pdo));if(!empty($K)){$G=$this->embed($G,$K);}try{$F=$this->pdo->exec($G);}catch(PDOException$IB){$T="SQL: $G\n".$IB->getMessage();throw new PDOException($T);}return$F;}function query($G,array$K=array()){assert(!is_null($this->pdo));try{$Q=$this->pdo->prepare($G);if($Q->execute($K)){$Q->setFetchMode(PDO::FETCH_ASSOC);}}catch(PDOException$IB){$G=$this->embed($G,$K);$T="SQL: $G\n".$IB->getMessage();throw new PDOException($T);}return$Q;}function fetch($G,array$K=array(),$BC=false){if($Q=$this->query($G,$K)){if(is_numeric($BC)){$F=$Q->fetchColumn(intval($BC));}else{$F=$Q->fetch();if($F&&$BC){$F=isset($F[$BC])?$F[$BC]:null;}}$Q->closeCursor();return$F;}}function listTables(){if(empty($this->prefix)){$G=sprintf("SHOW TABLES FROM %s",$this->getDBName());}else{$b=$this->quote(str_replace('_','\_',$this->prefix).'%');$G=sprintf("SHOW TABLES LIKE %s",$b);}$F=array();if($Q=$this->query($G)){$kE=strlen($this->prefix);while($R=$Q->fetchColumn(0)){$F[]=substr($R,$kE);}$Q->closeCursor();}return$F;}function transact(callable$lE){assert(!is_null($this->pdo));if($this->pdo->beginTransaction()){$A=func_get_args();array_unshift($A,$this);try{$lE($A);$this->pdo->commit();}catch(PDOException$IB){$this->pdo->rollBack();}}}function readFields($R){$lB=$this->getDriverName();$H='\\Cute\\DB\\'.ucfirst($lB).'Schema';$HF=new$H($this,$R);$J=$HF->getColumns();$v=array();$_=array();foreach($J as$I){if($I->isPrimaryKey()){$v[]=$I->name;}$L=$I->default;$lD=$I->getCategory();if($lD==='int'){$L=intval($L);}else if($lD==='float'){$L=floatval($L);}$_[$I->name]=$L;}return compact('table','pkeys','fields');}}use \HandlerSocketi;class HandlerSocket{const HS_PORT_R=9998;const HS_PORT_RW=9999;protected$handler=null;protected$query=null;protected$read_only=false;protected$dbname='';protected$table='';protected$fields=array();protected$index=null;function __construct($OB,$DD='127.0.0.1',$wB=0,$NE=false){$this->dbname=$OB;$this->read_only=$NE;if(empty($wB)){$wB=$this->read_only?self::HS_PORT_R:self::HS_PORT_RW;}$this->handler=new HandlerSocketi($DD,$wB);}function open($R,$_){if(is_string($_)){$_=explode(',',str_replace(' ','',$_));}$this->table=$R;$this->fields=$_;$this->query=null;return$this;}protected function prepare($mB=null){if(empty($this->query)||$this->index!==$mB){$this->index=$mB;$AF=empty($this->index)?array():array('index'=>$this->index);$this->query=$this->handler->open_index($this->dbname,$this->table,$this->fields,$AF);}return$this->query;}function insert(array$QC){$D=$this->index;$F=$this->prepare($D)->insert($QC);return$F!==false;}function delete($C){if(func_num_args()>1){$D=$C;$C=func_get_arg(1);}else{$D=null;}return$this->prepare($D)->remove($C);}function truncate($XC){$_B=array();$D=null;$XC=is_array($XC)?$XC:func_get_args();foreach($XC as$KB){$_B[]=array('remove',$KB);}$F=$this->prepare($D)->multi($_B);$_E=create_function('$a,$b','return $a && $b;');return array_reduce($F,$_E,true);}function update(array$NC,$D,$C){return$this->prepare($D)->update($C,$NC);}function get($C){if(func_num_args()>1){$D=$C;$C=func_get_arg(1);}else{$D=null;}$F=$this->prepare($D)->find($C);if(empty($F)){return($F===false)?false:null;}return array_combine($this->fields,$F[0]);}function all($D=null,$o='>=',$C=0,$ZB=0,$dD=0){$OC=array();if($ZB>0){$OC['limit']=$ZB;}if($dD>0){$OC['offset']=$dD;}$C=array($o=>$C);$F=$this->prepare($D)->find($C,$OC);if($F===false){return false;}foreach($F as&$c){$c=array_combine($this->fields,$c);}return$F;}function in($D,$C){$_B=array();$N=array_slice(func_get_args(),1);if(count($N)===1&&is_array($N[0])){$N=$N[0];}foreach($N as$C){$_B[]=array('find',$C);}$F=$this->prepare($D)->multi($_B);if($F===false){return false;}$nB=exec_function_array('array_merge',$F);foreach($nB as&$c){$c=array_combine($this->fields,$c);}return$nB;}}class Literal{protected$value;function __construct($C){$this->value=$C;}function __toString(){return strval($this->value);}static function quote($C){$BD="'%s'";if(is_null($C)){$C='NULL';}else if($C instanceof self){$C=strval($C);}else if($C instanceof DateTime){$C=sprintf($BD,$C->format('Y-m-d H:i:s'));}else if(is_string($C)){$C=sprintf($BD,convert($C,'UTF-8'));}else{$C=sprintf($BD,strval($C));}return$C;}}use \Cute\DB\Database;class MssqlSchema{protected$db=null;protected$dbname='';protected$table='';function __construct(Database&$W,$R){$this->db=$W;$this->dbname=$W->getDBName();$this->table=$W->getTableName($R,false);}function getLimitType(){return DB::TYPE_TOP;}function getPKey(){$G="SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.%s WHERE TABLE_SCHEMA='dbo'"." AND TABLE_CATALOG=? AND TABLE_NAME=? ORDER BY ORDINAL_POSITION";$K=array($this->dbname,$this->table);$aB=$this->db->fetch(sprintf($G,'KEY_COLUMN_USAGE'),$K,0);if(empty($aB)){$aB=$this->db->fetch(sprintf($G,'COLUMNS'),$K,0);}return$aB;}function getColumns(){$J=array('COLUMN_NAME','COLUMN_DEFAULT','COLUMN_KEY','IS_NULLABLE','COLUMN_TYPE','DATA_TYPE','CHARACTER_MAXIMUM_LENGTH','NUMERIC_PRECISION','NUMERIC_SCALE','DATETIME_PRECISION',);$G="SELECT %s FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA='dbo'"." AND TABLE_CATALOG=? AND TABLE_NAME=? ORDER BY ORDINAL_POSITION";$G=sprintf($G,implode(', ',$J));$K=array($this->dbname,$this->table);if($Q=$this->db->query($G,$K)){$HD=PDO::FETCH_CLASS|PDO::FETCH_PROPS_LATE;$F=$Q->fetchAll($HD,'\\Cute\\ORM\\Column');$Q->closeCursor();return$F;}}function isExists(){$G="SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='dbo'"." AND TABLE_CATALOG=? AND TABLE_NAME=?";$K=array($this->dbname,$this->table);$R=$this->db->fetch($G,$K,0);return$this->db->getTableName($R,false)===$this->table;}function getCreateSQL($VB,$J=array(),$FD=false,$AD=false){$NB="";$qB="";$h="";$J=$this->getColumns();if($FD||$AD){foreach($J as$I){if($I->getCategory()==='char'){$E="[".$I->type."](".intval($I->length).")";}else if($I->type==='numeric'){$E="[numeric](".$I->precision.", ".$I->scale.")";}else{$E="[".$I->type."]";}if($I->isPrimaryKey()){$NB="    [$B] $E IDENTITY(1,1) NOT FOR REPLICATION NOT NULL,";$qB="PRIMARY KEY NONCLUSTERED ( [$B] ASC )";}else{$zE=$I->isNullable()?"NULL":"NOT NULL DEFAULT ".$I->default;$h.="    [$B] $E $zE,\n";}}}else{foreach($J as$I){$L=trim($I->default,"()");if($I->getCategory()==='char'){$a=intval($I->length);$E=($a>255||$a<0)?"text":"varchar($a)";}else if($I->getCategory()==='int'){$UB=intval($I->precision);if($L===''){$L="0";}$E=$I->type."($UB)";}else if($I->getCategory()==='float'){$UB=intval($I->precision);$oC=intval($I->scale);if($L===''){$L="0.0";}$E=$I->type;if($I->type==='real'){$E='float';}else if($I->type==='money'){$E='numeric';}$E.="($UB,$oC)";}else if($I->getCategory()==='datetime'){$E='datetime';}else{$E=$I->type;}if($I->isPrimaryKey()){$NB="    [$B] $E IDENTITY(1,1) NOT FOR REPLICATION NOT NULL,";$qB="PRIMARY KEY NONCLUSTERED ( [$B] ASC )";}else if(starts_with($E,'date')||ends_with($E,'text')){$h.="    [$B] $E NULL,\n";}else if($I->isNullable()){$h.="    [$B] $E NULL,\n";}else{$h.="    [$B] $E NOT NULL DEFAULT '$L',\n";}}}$JC=<<<EOD
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES
    WHERE TABLE_SCHEMA='dbo' AND TABLE_NAME='%s')
BEGIN
CREATE TABLE [dbo].[%s] (
%s
%s
    CONSTRAINT [PK_%s]
    %s
    WITH ( PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF,
        ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON )
    ON [PRIMARY]
) ON [PRIMARY]
END
EOD
;if(empty($NB)){$h=rtrim($h,",\n");}$G=sprintf($JC,$VB,$VB,$NB,$h,$VB,$qB);return$G;}function sqlToFile($G,$t,$YC="\t",$pC=PHP_EOL,$IC='"',$lC=null){@mkdir(dirname($t),0664,true);$xC=fopen($t,'wb');$gB=0;$gD=$this->db->query($G);while($c=$gD->fetch()){if(is_null($lC)){fputcsv($xC,$c,$YC,$IC);}else{fwrite($xC,self::csvline($c,$YC,$pC,$IC,$lC));}$gB++;}$gD->closeCursor();fclose($xC);return$gB;}}class MysqlSchema{protected$db=null;protected$dbname='';protected$table='';function __construct(Database&$W,$R){$this->db=$W;$this->dbname=$W->getDBName();$this->table=$W->getTableName($R,false);}function getLimitType(){return DB::TYPE_LIMIT;}function getPKey(){$G="SELECT COLUMN_NAME FROM information_schema.COLUMNS"." WHERE TABLE_SCHEMA=? AND TABLE_NAME=? AND COLUMN_KEY='PRI'";$K=array($this->dbname,$this->table);return$this->db->fetch($G,$K,0);}function getColumns(){$J=array('COLUMN_NAME','COLUMN_DEFAULT','COLUMN_KEY','IS_NULLABLE','COLUMN_TYPE','DATA_TYPE','CHARACTER_MAXIMUM_LENGTH','NUMERIC_PRECISION','NUMERIC_SCALE','DATETIME_PRECISION',);$G="SELECT %s FROM information_schema.COLUMNS"." WHERE TABLE_SCHEMA=? AND TABLE_NAME=? ORDER BY ORDINAL_POSITION";$G=sprintf($G,implode(', ',$J));$K=array($this->dbname,$this->table);if($Q=$this->db->query($G,$K)){$HD=PDO::FETCH_CLASS|PDO::FETCH_PROPS_LATE;$F=$Q->fetchAll($HD,'\\Cute\\ORM\\Column');$Q->closeCursor();return$F;}}function isExists(){$G="SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES"." WHERE TABLE_NAME=? AND (TABLE_SCHEMA=? OR TABLE_CATALOG=?)";$K=array($this->table,$this->dbname,$this->dbname);$R=$this->db->fetch($G,$K,0);return$this->db->getTableName($R,false)===$this->table;}function getCreateSQL($VB,$FD=false,$AD=false){if($FD){$G="CREATE TABLE `%s` LIKE `%s`";return sprintf($G,$VB,$this->table);}else if($AD){$ZC=sprintf("CREATE TABLE `%s`",$this->table);$G=$this->db->fetch("SHOW $ZC",array(),'Create Table');$G=preg_replace('/(AUTO_INCREMENT=\d+)/','AUTO_INCREMENT=1',$G,1);$yE=sprintf("CREATE TABLE IF NOT EXISTS `%s`",$VB);return str_replace($ZC,$yE,$G);}else{$NB="";$qB="";$h="";$J=$this->getColumns();foreach($J as$I){$B=$I->name;$L=trim($I->default,"()");if($I->getCategory()==='char'){$a=intval($I->length);$E=($a>255||$a<0)?"text":"varchar($a)";}else if($I->getCategory()==='int'){$UB=intval($I->precision);if($L===''){$L="0";}$E=$I->type."($UB)";}else if($I->getCategory()==='float'){$UB=intval($I->precision);$oC=intval($I->scale);if($L===''){$L="0.0";}$E=$I->type;if($I->type==='real'){$E='float';}else if($I->type==='money'){$E='numeric';}$E.="($UB,$oC)";}else if($I->getCategory()==='datetime'){$E='datetime';}else{$E=$I->type;}if($I->isPrimaryKey()){$NB="    `$B` int(10) unsigned NOT NULL AUTO_INCREMENT,";$qB="PRIMARY KEY (`$B`)";}else if(starts_with($E,'date')||ends_with($E,'text')){$h.="    `$B` $E NULL,\n";}else if($I->isNullable()){$h.="    `$B` $E NULL,\n";}else{$h.="    `$B` $E NOT NULL DEFAULT '$L',\n";}}$JC=<<<EOD
CREATE TABLE IF NOT EXISTS `%s` (
%s
%s
    %s
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT
EOD
;if(empty($NB)){$h=rtrim($h,",\n");}$G=sprintf($JC,$VB,$NB,$h,$qB);return$G;}}function sqlToFile($G,$t,$YC="\t",$pC=PHP_EOL,$IC='"',$lC=null){@mkdir(dirname($t),0664,true);$TC="FIELDS TERMINATED BY '".addslashes($YC)."'";$TC.=" LINES TERMINATED BY '".addslashes($pC)."'";if($IC){$TC.=" OPTIONALLY ENCLOSED BY '".addslashes($IC)."'";}if($BF){$TC.=" FIELDS ESCAPED BY '".addslashes($BF)."'";}$EC=sys_get_temp_dir().DIRECTORY_SEPARATOR.basename($t);$GF="$G INTO OUTFILE '$EC' $TC";try{if(file_exists($EC)){unlink($EC);}$this->db->execute($GF);if(file_exists($EC)){rename($EC,$t);$gB=shell_exec('wc -l '.$t.' | cut -d" " -f1');$gB=trim($gB);return is_numeric($gB)?intval($gB):0;}}catch(\Exception$IB){}}}}
namespace Cute\Logging{use \Cute\Logging\Logger;use \Cute\Base\Deferring;defined('LOG_WRITE_FILE_FREQ')or define('LOG_WRITE_FILE_FREQ',0.2);class FileLogger extends Logger{protected$filename='';protected$records=array();function __construct($B='',$r=false,$VC=false){$this->filename=($B?$B.'_':'').'%s.log';if($r===false){$r=realpath('./logs');}if(is_dir($r)||mkdir($r,0777,true)){$this->filename=$r.DIRECTORY_SEPARATOR.$this->filename;}parent::__construct($VC);$this->defer();}function close(){$this->writeFiles();unset($this->records);}function writeFiles(){foreach($this->records as$FF=>&$aD){$k=sprintf($this->filename,$FF);$wC=implode('',$aD);$oB=file_put_contents($k,$wC,FILE_APPEND|LOCK_EX);if($oB!==false){$aD=array();}}}function append(){$EF=implode(' ',func_get_args());$sC=date('Ymd');if(!isset($this->records[$sC])){$this->records[$sC]=array();}array_push($this->records[$sC],$EF.PHP_EOL);}function rawlog($MB,$T,array$M=array()){$MB=strtoupper($MB);if($this->compareLevel($MB)){$d=self::format($T,$M);$HC=self::getClientIP();$DF=date('Y-m-d H:i:s');$this->append($DF,$HC,$MB,$d);}if(LOG_WRITE_FILE_FREQ>=1||LOG_WRITE_FILE_FREQ>=mt_rand(1,10000)/10000){$this->writeFiles();}}}use \Cute\Context\Input;abstract class Logger{const EMERGENCY='EMERGENCY';const ALERT='ALERT';const CRITICAL='CRITICAL';const ERROR='ERROR';const WARNING='WARNING';const NOTICE='NOTICE';const INFO='INFO';const DEBUG='DEBUG';protected$threshold=false;protected$threshold_value=null;function __construct($VC=false){if($VC===false){$this->threshold=self::DEBUG;}else{$this->threshold=strtoupper($VC);}}static function format($T,array$M=array()){$d=is_null($T)?'':(string)$T;if(!empty($M)){$TD=array();foreach($M as$D=>$GC){$TD['{'.$D.'}']=$GC;}$d=strtr($d,$TD);}return$d;}static function getClientIP(){return Input::getClientIP();}function compareLevel($MB){static$SC=array(self::EMERGENCY=>0,self::ALERT=>1,self::CRITICAL=>2,self::ERROR=>3,self::WARNING=>4,self::NOTICE=>5,self::INFO=>6,self::DEBUG=>7,);if(is_null($this->threshold_value)&&isset($SC[$this->threshold])){$this->threshold_value=$SC[$this->threshold];}if(isset($SC[$MB])){return$SC[$MB]<=$this->threshold_value;}}function emergency($T,array$M=array()){$this->rawlog(self::EMERGENCY,$T,$M);}function alert($T,array$M=array()){$this->rawlog(self::ALERT,$T,$M);}function critical($T,array$M=array()){$this->rawlog(self::CRITICAL,$T,$M);}function error($T,array$M=array()){$this->rawlog(self::ERROR,$T,$M);}function warning($T,array$M=array()){$this->rawlog(self::WARNING,$T,$M);}function notice($T,array$M=array()){$this->rawlog(self::NOTICE,$T,$M);}function info($T,array$M=array()){$this->rawlog(self::INFO,$T,$M);}function debug($T,array$M=array()){$this->rawlog(self::DEBUG,$T,$M);}abstract function rawlog($MB,$T,array$M=array());abstract function close();}}
namespace Cute\ORM{use \Cute\ORM\Model;class Column extends Model{protected static$_keys=array('COLUMN_NAME'=>'name','COLUMN_DEFAULT'=>'default','COLUMN_KEY'=>'index','IS_NULLABLE'=>'nullable','COLUMN_TYPE'=>'column','DATA_TYPE'=>'type','CHARACTER_MAXIMUM_LENGTH'=>'length','NUMERIC_PRECISION'=>'precision','NUMERIC_SCALE'=>'scale','DATETIME_PRECISION'=>'datetime',);var$name='';var$default=null;var$index=null;var$nullable='YES';var$column='';var$type='';var$length=null;var$precision=null;var$scale=null;var$datetime=null;static function getTable(){return'COLUMNS';}function __set($ND,$C){if(isset(self::$_keys[$ND])){$B=self::$_keys[$ND];$this->$B=$C;}}function isPrimaryKey(){return$this->index==='PRI';}function isNullable(){return$this->nullable==='YES';}function getCategory(){if(!is_null($this->datetime)){return'datetime';}else if(!is_null($this->precision)){return$this->scale>0?'float':'int';}else if(!is_null($this->length)){return'char';}else{return$this->type;}}}class Model{protected static$_fields=array();static function getTable(){return'';}static function getPKeys(){return array();}function getRelations(){return array();}function getFields(){$R=$this->getTable();if(!isset(self::$_fields[$R])){$_=get_object_vars($this);foreach($_ as$B=>$L){if(starts_with($B,'_')){unset($_[$B]);}}self::$_fields[$R]=&$_;}return self::$_fields[$R];}function getID($FC=0){if($v=$this->getPKeys()){$aB=$v[$FC];return$this->$aB;}}function setID($KB){if($v=$this->getPKeys()){foreach($v as$FC=>$aB){$this->$aB=func_get_arg($FC);}}return$this;}function isExists(){$KB=$this->getID();return$KB!==0&&!is_null($KB);}}use \PDO;use \Cute\DB\Database;use \Cute\View\Templater;use \Cute\Utility\Inflect;class Query{const COUNT_INSERT_BULK_MAX=500;protected$db=null;protected$table='';protected$model='';protected$fetch_style=0;protected$constrains=array();protected$parameters=array();var$additions=array('GROUP BY'=>null,'HAVING'=>null,'ORDER BY'=>null,'LIMIT'=>null,);var$relations=array();function __construct(Database&$W,$cB='\\Cute\\ORM\\Model',$R=''){$this->db=$W;if(is_object($cB)){$this->model=get_class($cB);}else{$this->model=$cB;}$this->fetch_style=PDO::FETCH_CLASS;if(method_exists($this->model,'__set')||method_exists($this->model,'__construct')){$this->fetch_style=$this->fetch_style|PDO::FETCH_PROPS_LATE;}if(empty($R)||$this->model!=='\\Cute\\ORM\\Model'){$this->table=exec_method_array($this->model,'getTable');}else{$this->table=$R;}}function __call($B,$A){$B=str_replace('_',' ',strtoupper($B));if(array_key_exists($B,$this->additions)){$this->additions[$B]=implode(', ',$A);return$this;}else{$J=empty($A)?'*':implode(', ',$A);$Q=$this->select("$B($J)");$O=$Q->fetchColumn();$Q->closeCursor();return$O;}}static function generateModel(Database&$W,$R,$B='',$q='',$xE=false){$O=$W->readFields($R);if(empty($B)){$B=$xE?Inflect::singularize($R):$R;$B=Inflect::camelize($B);}$P=APP_ROOT.'/models';if($q){$P.='/'.str_replace('\\','/',trim($q));}if(!file_exists($P)){mkdir($P,0777,true);}$S="$P/$B.php";$O['name']=$B;$O['ns']=$q;$O['protecteds']=array('password','salt');$JC=new Templater(SRC_ROOT);ob_start();$JC->render('model_tpl.php',$O);$d="<?php\n\n".trim(ob_get_clean());file_put_contents($S,$d);return$S;}function getDB(){return$this->db;}function getModel(){return$this->model;}function getTable($fC=null){if(is_null($fC)){return$this->table;}else{assert($W=$this->getDB());return$W->getTableName($this->table,$fC);}}function join($B){$wE=func_get_args();$cB=exec_construct_array($this->model);$JD=$cB->getRelations();foreach($wE as$B){if(isset($JD[$B])){$this->relations[$B]=&$JD[$B];}}return$this;}function contain($ID,array$N){$CB=count($N);if($CB===0){$o='IS NULL';}else if($CB===1){$o='= ?';}else{$SB=implode(', ',array_fill(0,count($N),'?'));$o='IN ('.$SB.')';}$N=array_values($N);$this->constrains[]="$ID $o";$this->parameters=array_merge($this->parameters,$N);return$this;}function filter($Z,$C,$o='= ?'){$o=empty($o)?false:strtoupper($o);if(is_array($C)){if(substr_count($Z,'?')===count($C)){$this->constrains[]="$ID $o";$this->parameters=array_merge($this->parameters,$C);}else{$this->contain($Z,$C);}}else if(is_null($C)){if(trim($o)==='<>'){$this->constrains[]="$Z IS NOT NULL";}else{$this->constrains[]="$Z IS NULL";}}else{$this->constrains[]=($o===false)?$Z:"$Z $o";$this->parameters[]=$C;}return$this;}function where($Z='',array&$A=array()){$m=implode(' AND ',$this->constrains);$K=$this->parameters;if($Z||count($A)>0){$m.=($m?' AND ':'').$Z;$K=array_merge($K,$A);}$m=$m?'WHERE '.$m:'';return array($m,$K);}function select($J='*',$Z='',array&$A=array()){$Y=$this->getTable(true);list($m,$K)=$this->where($Z,$A);if(is_object($J)){$J=get_object_vars($J);}if(is_array($J)){array_walk($J,create_function('&$v,$k','if(!is_numeric($k))$v.=" as ".$k;'));$J=implode(', ',$J);}$J=trim($J);$G="SELECT $J FROM $Y $m";foreach($this->additions as$D=>$C){if(!is_null($C)){$G.=" $D $C";}}return$this->getDB()->query(rtrim($G),$K);}function rows($D=false,$J='*',$Z=''){$A=array_slice(func_get_args(),3);if($Q=$this->select($J,$Z,$A)){$F=array();if($D===false||is_null($D)){$F=$Q->fetchAll();}else{while($c=$Q->fetch()){$F[$c[$D]]=$c;}}$Q->closeCursor();return$F;}}function all($ZB=-1,$J='*',$Z=''){if($ZB>=0){$this->additions['LIMIT']=intval($ZB);}$A=array_slice(func_get_args(),3);if($Q=$this->select($J,$Z,$A)){$F=$Q->fetchAll($this->fetch_style,$this->getModel());$Q->closeCursor();foreach($this->relations as$B=>&$pE){$pE->bind($this)->relative($B,$F);}}return$F;}function combine($PB,array&$F,$oE=false,$J='*'){if(empty($PB)||count($F)===0){return$F;}$this->contain($PB,array_keys($F));if($J==='*'){$J=sprintf('%s,%s.*',$PB,$this->getTable(false));}if($Q=$this->select($J)){$nE=$oE?PDO::FETCH_UNIQUE:PDO::FETCH_GROUP;$mE=$this->fetch_style|$nE;$F=$Q->fetchAll($mE,$this->getModel());$Q->closeCursor();}return$F;}function get($KB,$D=false,$J='*'){if(empty($D)){$v=exec_method_array($this->getModel(),'getPKeys');if(empty($v)){return;}$D=reset($v);}$VD=$this->all(1,$J,"$D = ?",$KB);return count($VD)>0?reset($VD):null;}function delete($Z=''){$A=array_slice(func_get_args(),1);$Y=$this->getTable(true);list($m,$K)=$this->where($Z,$A);$G="DELETE FROM $Y $m";$W=$this->getDB();if(empty($m)&&$W->getDriverName()==='mysql'){$G="TRUNCATE $Y";}return$W->execute(rtrim($G),$K);}function getUpdateSet(array$NC){$UD=array();$N=array();foreach($NC as$D=>$GC){$UD[]=$D.'=?';$N[]=$GC;}$mC="SET ".implode(', ',$UD);return array($mC,$N);}function update(array$NC,$QB=false,$Z=''){$A=array_slice(func_get_args(),3);$Y=$this->getTable(true);list($m,$K)=$this->where($Z,$A);list($mC,$N)=$this->getUpdateSet($NC);$CC=$QB?'UPDATE DELAYED':'UPDATE';$G="$CC $Y $mC $m";$K=array_merge($N,$K);return$this->getDB()->execute(rtrim($G),$K);}function getInsertSQL(array$J,$QB=false,$vB=false){$Y=$this->getTable(true);if($vB===true){$CC=$QB?'REPLACE DELAYED':'REPLACE INTO';}else{$CC=$QB?'INSERT DELAYED':'INSERT INTO';}if($CB=count($J)){$J=implode(',',$J);$SB=implode(', ',array_fill(0,$CB,'?'));return array("$CC $Y ($J)",$SB);}else{return array("$CC $Y",'');}}function insert(array$QC,$QB=false,$vB=false){assert($W=$this->getDB());list($G,$SB)=$this->getInsertSQL(array_keys($QC),$QB,$vB);if(!empty($SB)){$G.=" VALUES ($SB)";$K=array_values($QC);if($W->execute($G,$K)){return$W->getPDO()->lastInsertId();}}}function insertBulk(array$nB,array$J=null,$QB=false,$vB=false){assert(count($nB)>0);$Y=$this->getTable(true);if(empty($J)){$J=array_keys(reset($nB));}list($G,$SB)=$this->getInsertSQL($J,$QB,$vB);$qE=array_chunk($nB,self::COUNT_INSERT_BULK_MAX);foreach($qE as$YD){$rE=array_fill(0,count($YD),"($SB)");$G.=" VALUES ".implode(', ',$rE);$vE=array_map('array_values',$YD);$K=exec_funcution_array('array_merge',$vE);$this->getDB()->execute($G,$K);}}}use \Cute\ORM\Query;class Relation{const TYPE_ONE_TO_ONE=1;const TYPE_BELONGS_TO=2;const TYPE_HAS_MANY=3;const TYPE_MANY_TO_MANY=4;protected$query=null;protected$type=1;protected$model='';protected$table='';protected$foreign_key='';protected$another_foreign_key='';protected$middle_table='';function __construct($E,$cB='\\Cute\\Model',$R='',$uE='',$tE='',$sE=''){$this->type=$E;$this->model=$cB;$this->table=$R;$this->foreign_key=$uE;$this->another_foreign_key=$tE;$this->middle_table=$sE;}function bind(Query&$AC){$this->query=$AC;return$this;}function relative($B,array&$F){if(empty($F)){return array();}switch($this->type){case self::TYPE_ONE_TO_ONE:case self::TYPE_BELONGS_TO:$O=$this->belongsTo($B,$F);break;case self::TYPE_HAS_MANY:$O=$this->hasMany($B,$F);break;case self::TYPE_MANY_TO_MANY:$O=$this->manyToMany($B,$F);break;default:$O=array();break;}return$O;}function belongsTo($B,array&$F){assert($W=$this->query->getDB());if(empty($this->foreign_key)){$this->foreign_key=$B.'_id';}$PB=$this->foreign_key;$AC=new Query($W,$this->model,$this->table);$v=exec_method_array($this->model,'getPKeys');if(empty($v)){return array();}$N=array();foreach($F as&$l){$N[$l->$PB]=null;}$AC->combine(reset($v),$N,true);foreach($F as&$l){$D=$l->$PB;if(isset($N[$D])){$l->$B=&$N[$D];}else{$l->$B=null;}}return$N;}function hasMany($B,array&$F){assert($W=$this->query->getDB());if(empty($this->foreign_key)){$Y=$this->query->getTable();$this->foreign_key=Inflect::singularize($Y).'_id';}$PB=$this->foreign_key;$AC=new Query($W,$this->model,$this->table);$N=array();foreach($F as&$l){$N[$l->getID()]=null;}$AC->combine($PB,$N,false);foreach($F as&$l){$D=$l->getID();if(isset($N[$D])){$l->$B=&$N[$D];}else{$l->$B=array();}}return$N;}function manyToMany($B,array&$F){throw new\BadMethodCallException();}}}
namespace Cute\Utility{class Date extends\DateTime{protected$timestamp=0;function __construct($ED='now',$HB=null){if(is_null($HB)&&$L=constant('DEFAULT_TIMEZONE')){$HB=new\DateTimeZone($L);}if(is_numeric($ED)){parent::__construct('now',$HB);$this->setTimestamp($ED);}else{parent::__construct($ED,$HB);}}static function parseDurtion($BB){if(empty($BB)){return 0;}if(is_int($BB)||is_float($BB)){return$BB;}if(is_string($BB)){$ZD=strtolower(substr($BB,-1));if(is_numeric($ZD)){return floatval($BB);}$BB=trim(substr($BB,0,-1));$p=1;switch($ZD){case'w':$p*=7;case'd':$p*=24;case'h':$p*=60;case'm':$p*=60;}return floatval($BB)*$p;}}function thisMonthBegin(){return new self($this->format('Y-m-01'));}function thisMonthEnd(){return new self($this->format('Y-m-01').' +1 month -1 day');}function nextMonthBegin(){return new self($this->format('Y-m-01').' +1 month');}}class Inflect{protected static$plural=array('/(quiz)$/i'=>"$1zes",'/^(ox)$/i'=>"$1en",'/([m|l])ouse$/i'=>"$1ice",'/(matr|vert|ind)ix|ex$/i'=>"$1ices",'/(x|ch|ss|sh)$/i'=>"$1es",'/([^aeiouy]|qu)y$/i'=>"$1ies",'/(hive)$/i'=>"$1s",'/(?:([^f])fe|([lr])f)$/i'=>"$1$2ves",'/(shea|lea|loa|thie)f$/i'=>"$1ves",'/sis$/i'=>"ses",'/([ti])um$/i'=>"$1a",'/(tomat|potat|ech|her|vet)o$/i'=>"$1oes",'/(bu)s$/i'=>"$1ses",'/(alias)$/i'=>"$1es",'/(octop)us$/i'=>"$1i",'/(ax|test)is$/i'=>"$1es",'/(us)$/i'=>"$1es",'/s$/i'=>"s",'/$/'=>"s");protected static$singular=array('/(quiz)zes$/i'=>"$1",'/(matr)ices$/i'=>"$1ix",'/(vert|ind)ices$/i'=>"$1ex",'/^(ox)en$/i'=>"$1",'/(alias)es$/i'=>"$1",'/(octop|vir)i$/i'=>"$1us",'/(cris|ax|test)es$/i'=>"$1is",'/(shoe)s$/i'=>"$1",'/(o)es$/i'=>"$1",'/(bus)es$/i'=>"$1",'/([m|l])ice$/i'=>"$1ouse",'/(x|ch|ss|sh)es$/i'=>"$1",'/(m)ovies$/i'=>"$1ovie",'/(s)eries$/i'=>"$1eries",'/([^aeiouy]|qu)ies$/i'=>"$1y",'/([lr])ves$/i'=>"$1f",'/(tive)s$/i'=>"$1",'/(hive)s$/i'=>"$1",'/(li|wi|kni)ves$/i'=>"$1fe",'/(shea|loa|lea|thie)ves$/i'=>"$1f",'/(^analy)ses$/i'=>"$1sis",'/((a)naly|(b)a|(d)iagno|(p)arenthe|(p)rogno|(s)ynop|(t)he)ses$/i'=>"$1$2sis",'/([ti])a$/i'=>"$1um",'/(n)ews$/i'=>"$1ews",'/(h|bl)ouses$/i'=>"$1ouse",'/(corpse)s$/i'=>"$1",'/(us)es$/i'=>"$1",'/s$/i'=>"");protected static$irregular=array('move'=>'moves','foot'=>'feet','goose'=>'geese','sex'=>'sexes','child'=>'children','man'=>'men','tooth'=>'teeth','person'=>'people');protected static$uncountable=array('sheep','fish','deer','series','species','money','rice','information','equipment');protected static$abbreviations=array('AD','API','B2B','B2C','C2C','CEO','CFO','COO','CTO','DB','DSA','GEO','GPS','HTML','HTTP','ID','IO','IP','IQ','MD5','MTV','MV','MVC','NBA','OK','P2P','PC','PV','PDF','PHP','QQ','RMB','RSA','SOHO','SHA','TV','UI','URI','URL','USA','VIP','WC','WEB','WAP','WIFI','XML',);static function pluralize($X){if(in_array(strtolower($X),self::$uncountable))return$X;foreach(self::$irregular as$b=>$F){$b='/'.$b.'$/i';if(preg_match($b,$X))return preg_replace($b,$F,$X);}foreach(self::$plural as$b=>$F){if(preg_match($b,$X))return preg_replace($b,$F,$X);}return$X;}static function singularize($X){if(in_array(strtolower($X),self::$uncountable))return$X;foreach(self::$irregular as$F=>$b){$b='/'.$b.'$/i';if(preg_match($b,$X))return preg_replace($b,$F,$X);}foreach(self::$singular as$b=>$F){if(preg_match($b,$X))return preg_replace($b,$F,$X);}return$X;}static function pluralizeIf($CB,$X){if($CB==1)return"1 $X";else return$CB." ".self::pluralize($X);}static function camelize($X,$CF=false){$xB=explode('_',$X);if($CF){$OD=count($xB)-1;$xB[$OD]=self::pluralize($xB[$OD]);}foreach($xB as&$f){$f=ucfirst($f);if(strlen($f)>1&&strlen($f)<=4){$MD=strtoupper($f);if(in_array($MD,self::$abbreviations)){$f=$MD;}}}return implode('',$xB);}static function flatten($X,$rD='_'){$b='/([A-Z][A-Z0-9]*(?=$|[A-Z][a-z0-9])|[A-Za-z][a-z0-9]+)/';preg_match_all($b,$X,$JB);return strtolower(implode($rD,$JB[0]));}}class Polling{protected$channels=array();function __construct(array$uD=array()){$this->channels=$uD;}function randRoll(){static$mB=0;if($mB===0){shuffle($this->channels);$mB=count($this->channels);}return$this->channels[--$mB];}function roundRobin(&$WC,$nD=1){if(count($this->channels)<2){return current($this->channels);}$RC=null;$WD=0;$CD=0;foreach($this->channels as$KB=>$c){$RD=$c['weight']*$nD;$CD+=$RD;$c['last_value']+=$RD;if(empty($WC)&&$c['last_value']>=$WD){$RC=$KB;$WD=$c['last_value'];}}if(!empty($WC)){$this->channels[$WC]['last_value']-=$CD;return$this->channels[$WC];}else if(!is_null($RC)){$this->channels[$RC]['last_value']-=$CD;return$this->channels[$RC];}}}class Word{protected$content='';function __construct($d=''){$this->content=$d;}static function randHash($a=6){$a=$a>32?32:$a;$JE=md5(mt_rand().time());$LE=substr($JE,0,$a);return$LE;}static function randString($a=6,$KE=2,$zB=''){if(empty($zB)){$zB='abcdefghijkmnpqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ23456789';}srand((float)microtime()*1000000);$PD='';$UC=ceil($a/$KE);while($a>0){$zB=str_shuffle($zB);$PD.=substr($zB,0,$UC);$a-=$UC;$UC=min($a,$UC);}return$PD;}function hasNonASCII(){return preg_match('/[^\x20-\x7f]/',$this->content);}function fetchFirstURL(){if(preg_match('/^http[^\x23-\x76]/i',$this->content,$JB)){return$JB[1];}}function getNumbers($GE=true){$p=preg_match_all('/[\d.]+/',$this->content,$JB);if($p===0||$p===false){return false;}$iD=implode(current($JB));return$GE?intval($iD):$iD;}function ver2int(){$AE=$this->getNumbers(false);$tC=array_map('intval',explode('.',$AE));$tC=array_pad($tC,3,0);return intval(vsprintf('%d%02d%02d',$tC));}}}
namespace Cute\View{class Compiler{protected$env=null;protected$source_dir='';protected$compiled_dir='';function __construct(){\app()->import('Twig',VENDOR_ROOT.'/Twig/lib');$this->env=new\Twig_Environment();}function addFunction($B,$zD=null){$_D=new\Twig_SimpleFunction($B,$zD);return$this->env->addFunction($B,$_D);}function setSourceDir($KC){$this->source_dir=rtrim($KC,' /\\');if(!file_exists($this->source_dir)){@mkdir($this->source_dir,0777,true);}$vD=new\Twig_Loader_Filesystem(array($this->source_dir));$this->env->setLoader($vD);return$this;}function setCompiledDir($g){$g=rtrim($g,' /\\');if($this->compiled_dir!==$g){$this->compiled_dir=$g;}if(!file_exists($this->compiled_dir)){@mkdir($this->compiled_dir,0777,true);}return$this;}function isSourceRelational(){return true;}function compileFile($WB,$uB,array$M=array()){$d=$this->env->loadTemplate($WB)->render($M);file_put_contents($uB,$d,LOCK_EX);}function compileTpl($e,$WB='',array$M=array()){$e=ltrim(str_replace('\\','/',$e),'/');if(empty($WB)){$WB=$this->source_dir.'/'.$e;}$uB=$this->compiled_dir.'/'.$e;$g=dirname($uB);if(!is_dir($g)){mkdir($g,0777,true);}if($this->isSourceRelational()){$WB=substr($WB,strlen($this->source_dir)+1);}$this->compileFile($WB,$uB,$M);return$uB;}function compileAll($P=false,array$M=array()){if(is_null($P)||$P===false){$P=$this->source_dir;}else{$P=rtrim(str_replace('\\','/',$P),'/');}$CB=0;$BE=scandir($P);foreach($BE as$zC){if($zC==='.'||$zC==='..'){continue;}$bC=$P.'/'.$zC;if(is_dir($bC)){$this->compileAll($bC);}else{$e=substr($bC,strlen($this->source_dir));$this->compileTpl($e,$bC,$M);$CB++;}}return$CB;}}use \Cute\View\Compiler;class Templater{var$compiler=null;var$globals=array();protected$source_dir='';protected$extend_files=array();protected$template_blocks=array();protected$current_block='';function __construct($KC,$g=false){$this->setSourceDir($KC);if($g){$this->setCompileDir($g);}}static function replaceWith($d,array$M=array()){if(!empty($M)){$d=strtr($d,$M);}return$d;}function setSourceDir($KC){$this->source_dir=rtrim($KC,' /\\');if(!file_exists($this->source_dir)){@mkdir($this->source_dir,0777,true);}}function setCompileDir($g){if(is_null($this->compiler)){$this->compiler=new Compiler();}$g=rtrim($g,' /\\');$this->compiler->setSourceDir($this->source_dir);$this->compiler->setCompiledDir($g);$this->setSourceDir($g);return$this;}function updateGlobals(array$qD){if(func_num_args()===1){$this->globals=array_merge($this->globals,$qD);}else{$A=func_get_args();array_unshift($A,$this->globals);$this->globals=exec_function_array('array_merge',$A);}return$this;}function updateFunctions(array$sD){$wD=$this->compiler;foreach($sD as$B=>$n){$wD->addFunction($B,$n);}}function prepareFile($e){if($this->compiler){return$this->compiler->compileTpl($e,'',$this->globals);}else{return$this->source_dir.'/'.$e;}}function render($e,array$M=array()){extract($this->globals);extract($M);include$this->prepareFile($e);if(!empty($this->extend_files)){$oD=array_pop($this->extend_files);foreach($this->extend_files as$k){include$this->prepareFile($k);}extract($this->template_blocks);include$this->prepareFile($oD);}}function extendTpl($e){array_push($this->extend_files,$e);}function includeTpl($e,array$M=array()){extract($this->globals);extract($M);ob_start();include$this->prepareFile($e);$mD=trim(ob_get_clean());echo$mD;}function blockStart($tD='content'){$this->current_block=$tD;ob_start();}function blockEnd(){$ME=trim(ob_get_clean());$this->template_blocks[$this->current_block]=$ME;}}}
namespace Cute\Widget{use \Cute\Utility\Word;class Captcha{const ENCRYPT_SALT='captcha_code_salt';const FILENAME_PREFIX='cc_';var$phrase_size=6;var$width=80;var$height=30;var$font=null;var$finger_print=null;protected$builder=null;protected$savedir='';protected$saveurl='';function __construct($u=''){\app()->import('Gregwar',VENDOR_ROOT);$this->builder=new\Gregwar\Captcha\CaptchaBuilder();if(!empty($u)){$this->phrase_size=strlen($u);$this->builder->setPhrase($u);}else{$this->refresh();}$this->savedir=APP_ROOT.'/public/assets/captcha';@mkdir($this->savedir,0755,true);$this->saveurl=app()->getAssetURL().'/captcha';}static function newInstance($HE=6,$xD=80,$IE=30,$EE=null,$yD=null){$RB=new self();$RB->phrase_size=$HE;$RB->width=$xD;$RB->height=$IE;$RB->font=$EE;$RB->finger_print=$yD;return$RB;}protected static function encrypt($u){return md5(strtolower($u).self::ENCRYPT_SALT);}static function clean($P,$rC=0.3,$ZB=60){$CE=mt_rand(1,10000)/10000;if($rC<=0||$rC>=1||$CE<=$rC){$DE=time()-$ZB;$aC=glob($P.'cc_*.jpg');foreach($aC as$k){if(fileatime($k)<$DE){unlink($k);}}}}function refresh(){$u=Word::randString($this->phrase_size);$this->builder->setPhrase($u);return$this;}function build(array$A=array()){$FE=array($this->width,$this->height,$this->font,$this->finger_print,);exec_method_array($this->builder,'build',$A+$FE);return$this->builder;}function show(){@session_start();$u=$this->builder->getPhrase();$_SESSION['phrase']=self::encrypt($u);@header('Content-Type: image/jpeg');$this->build(func_get_args());return$this->builder->output();}function save(){self::clean($this->savedir,0.3,60);$S=uniqid(self::FILENAME_PREFIX).'.jpg';$this->build(func_get_args());$this->builder->save($this->savedir.'/'.$S);$u=$this->builder->getPhrase();$DB=$this->saveurl.'/'.$S.'#'.self::encrypt($u);die($DB);}}use \Cute\Widget\RedisCounter;use \Cute\Widget\FileCounter;abstract class Counter{protected$name='';protected$value=0;protected$maxium=0;function __construct($B,$C=0,$jC=0){$this->name=$B;$this->value=intval($C);$this->maxium=intval($jC);}static function newInstance($B,$C=0,$jC=0){$FB=new RedisCounter($B,$C,$jC);if(!$FB->connect()){$FB=new FileCounter($B,$C,$jC);$FB->connect();}$FB->readValue();return$FB;}function increase($pD=1){$this->value+=$pD;if($this->maxium>0){$this->value=$this->value%$this->maxium;}$this->writeValue();return$this->value;}abstract function connect();abstract function readValue();abstract function writeValue();abstract function remove();}use \Cute\Widget\Counter;class FileCounter extends Counter{protected$filename='';function connect($P=false){if(empty($P)&&$P!==''){$P=sys_get_temp_dir();}else{$P=rtrim(str_replace('\\','/',$P),'/');}$this->filename=$P.'/'.$this->name.'.txt';if(!is_readable($this->filename)){$XB=touch($this->filename);}else{$XB=true;}if(!$XB){$this->filename='';}return$XB;}function readValue(){$C=false;$oB=filesize($this->filename);if($oB>0){$C=file_get_contents($this->filename);}if($C!==false&&strlen(trim($C))>0){$this->value=intval($C);}else{$this->writeValue();}return$this->value;}function writeValue(){$oB=file_put_contents($this->filename,$this->value);return$oB&&$oB>0;}function remove(){if(file_exists($this->filename)){return unlink($this->filename);}}}class RedisCounter extends Counter{protected$redis=null;function connect($DD='127.0.0.1',$wB=6379){if(!extension_loaded('redis')){return false;}$this->redis=new\Redis();try{$XB=$this->redis->connect($DD,$wB);}catch(Exception$IB){$XB=false;}if(!$XB){$this->redis=null;}return$XB;}function readValue(){$C=$this->redis->get($this->name);if($C!==false&&strlen(trim($C))>0){$this->value=intval($C);}else{$this->writeValue();}return$this->value;}function writeValue(){return$this->redis->set($this->name,$this->value);}function remove(){if($this->redis->exists($this->name)){$F=$this->redis->del($this->name);$this->redis->close();return$F;}}}}