<?php
namespace{defined('VENDOR_ROOT')or define('VENDOR_ROOT',APP_ROOT.'/vendor');defined('APP_CLASS')or define('APP_CLASS','\\Cute\\Website');defined('SQL_VERBOSE')or define('SQL_VERBOSE',true);defined('ERROR_LEVEL')or define('ERROR_LEVEL',E_ALL&~E_DEPRECATED&~E_NOTICE);@error_reporting(ERROR_LEVEL);set_error_handler(function($tF,$wF,$xF,$sF,array$EH){if(0===error_reporting()){return false;}throw new ErrorException($wF,0,$tF,$xF,$sF);});if(!class_exists('\\Cute\\Importer')){require_once SRC_ROOT.'/Cute/Importer.php';}function app($SE=''){static$s=null;if(is_null($s)&&$SE){$TE=\Cute\Importer::getInstance();$TE->addNamespace('Cute',SRC_ROOT);$JC=\Cute\Base\Storage::newInstance($SE);$I=constant('APP_CLASS');$s=new$I($JC);$s->install($TE,array('import'=>'addNamespace'));$s->initiate();}return$s;}function starts_with($ND,$qC){return strncmp($ND,$qC,strlen($qC))===0;}function ends_with($ND,$qC){$uD=strlen($qC);return$uD===0||(strlen($ND)>=$uD&&substr_compare($ND,$qC,-$uD)===0);}function convert($m,$EC='UTF-8'){$EC=strtoupper($EC);if(function_exists('mb_detect_encoding')){return mb_detect_encoding($m,$EC,true)?$m:mb_convert_encoding($m,$EC,'UTF-8, GBK');}else if(function_exists('iconv')){$kG=$EC==='UTF-8'?'GBK':'UTF-8';return iconv($kG,$EC.'//IGNORE',$m);}}function b64decode($m){if(preg_match('!([A-Za-z0-9+/= ]+)!',$m,$VB)){$m=$VB[1];}return base64_decode($m);}function exec_function_array($b,array$B=array()){switch(count($B)){case 0:return$b();case 1:return$b($B[0]);case 2:return$b($B[0],$B[1]);case 3:return$b($B[0],$B[1],$B[2]);case 4:return$b($B[0],$B[1],$B[2],$B[3]);case 5:return$b($B[0],$B[1],$B[2],$B[3],$B[4]);default:if(is_object($b)){$NB=new ReflectionMethod($b,'__invoke');return$NB->invokeArgs($b,$B);}else if(is_callable($b)){$NB=new ReflectionFunction($b);return$NB->invokeArgs($B);}}}function exec_method_array($TB,$T,array$B=array()){if(is_object($TB)){switch(count($B)){case 0:return$TB->{$T}();case 1:return$TB->{$T}($B[0]);case 2:return$TB->{$T}($B[0],$B[1]);case 3:return$TB->{$T}($B[0],$B[1],$B[2]);case 4:return$TB->{$T}($B[0],$B[1],$B[2],$B[3]);case 5:return$TB->{$T}($B[0],$B[1],$B[2],$B[3],$B[4]);}}if(method_exists($TB,$T)){$NB=new ReflectionMethod($TB,$T);if($NB->isPublic()&&!$NB->isAbstract()){if($NB->isStatic()){return$NB->invokeArgs(null,$B);}else{return$NB->invokeArgs($TB,$B);}}}}function exec_construct_array($I,array$B=array()){switch(count($B)){case 0:return new$I();case 1:return new$I($B[0]);case 2:return new$I($B[0],$B[1]);case 3:return new$I($B[0],$B[1],$B[2]);case 4:return new$I($B[0],$B[1],$B[2],$B[3]);case 5:return new$I($B[0],$B[1],$B[2],$B[3],$B[4]);default:if(class_exists($I)){$NB=new ReflectionClass($I);return$NB->newInstanceArgs($B);}}}}
namespace Cute{use \Cute\Importer;use \Cute\Factory;use \Cute\Base\Storage;abstract class Application{protected$shortcuts=array();function __construct(Storage&$JC){$this->install($JC,array('getConfig'));$nG=new Factory($JC);$this->install($nG,array('load'));}function initiate(){return$this;}function install($ZD,array$xG){foreach($xG as$RD=>$T){$RD=strtolower(is_numeric($RD)?$T:$RD);$this->shortcuts[$RD]=array($ZD,$T);}return$this;}function __call($A,$B){$A=strtolower($A);if(isset($this->shortcuts[$A])){list($ZD,$T)=$this->shortcuts[$A];return exec_method_array($ZD,$T,$B);}}abstract function run();}abstract class Command{protected$app=null;protected$args=array();protected$pid=0;var$cmdfile='';function __construct($s,$cD,array$gB=array()){$this->app=$s;$this->cmdfile=$cD;list($B,$SB)=self::parse($gB);$this->args=array_merge($B,$SB);}function __clone(){$this->args=array_change_key_case($this->args);}function __toString(){$B=array();foreach($this->args as$C=>$E){if(is_numeric($C)){$B[]=$E;}else if($E===true){$B[]=strlen($C)===1?" -$C":" --$C";}else{$B[]=" --$C='$E'";}}$zB=$this->cmdfile;$zB.=' '.substr(__CLASS__,0,-strlen('Command'));$zB.=' '.implode(' ',$B);return$zB;}static function parse(array$gB){$B=array();$SB=array();foreach($gB as$FC=>$LB){$LB=trim($LB);if($LB==='--'){$B[]=implode(' ',array_slice($gB,$FC+1));break;}if(substr($LB,0,1)!=='-'){$B[]=$LB;}else if(substr($LB,1,1)!=='-'){$wC=str_split(substr($LB,1));foreach($wC as$C){$SB[$C]=true;}}else{if(($nE=strpos($LB,'='))!==false){$C=substr($LB,2,$nE-2);$E=substr($LB,$nE+1);}else{$C=substr($LB,2);$E=true;}if(!array_key_exists($C,$SB)){$SB[$C]=$E;}else{if(!is_array($SB[$C])){$SB[$C]=array($SB[$C]);}$SB[$C][]=$E;}}}return array($B,$SB);}function addArg($E,$C=false){if($C===false||is_null($C)){$this->args[]=$E;}else{$this->args[$C]=$E;}return$this;}function getArg($C=false,$P=null){if($C===false||is_null($C)){return$this->args;}if(isset($this->args[$C])){return$this->args[$C];}else{return$P;}}function popArg($C){if($C===false||is_null($C)){return;}if(isset($this->args[$C])){$E=$this->args[$C];unset($this->args[$C]);return$E;}}function readPid($HC=null){if(!is_null($HC)&&is_readable($HC)){$wB=trim(file_get_contents($HC));if(is_numeric($wB)){$this->pid=$wB;}}return$this->pid;}function isRunning(){if($this->pid>0){try{$D=shell_exec(sprintf('ps %d',$this->pid));return substr_count($D,"\n")>=2;}catch(\Exception$_){}}return false;}function wait($GG=0.1){while($this->isRunning()){usleep($GG*1000000);}return true;}function stop(){if($this->pid>0&&$this->isRunning()){return posix_kill($this->pid,SIGTERM);}}function fork($HC=null,array$tC=array()){$IC=clone$this;$IC->args=array_merge($IC->args,$tC);$zB=strval($IC);$s=$IC->app;if($s->outfile!==1){$zB.=' > '.$s->getFileSymbol($s->outfile,true);}if($s->errfile!==2){$zB.=' 2 > '.$s->getFileSymbol($s->errfile,true);}if($wB=shell_exec($zB.' & echo $!')){$wB=trim($wB);$IC->pid=intval($wB);if(!is_null($HC)){file_put_contents($HC,$wB.PHP_EOL,LOCK_EX);}}return$IC->pid;}function loop($FB=1,$uC=0,$pE=0){if($uC>0){$uC=intval($uC)+time();}do{$this->execute();if($FB>0){$FB--;}if($pE>0){usleep($pE*1000000);}}while($FB===0||$uC<0||$uC<time());}abstract function execute();}use \Cute\Application;use \Cute\Command;use \Cute\Utility\Inflect;class Console extends Application{const STDIN='php://stdin';const STDOUT='php://stdout';const STDERR='php://stderr';const DEVNULL='/dev/null';const COLOR_BLACK=90;const COLOR_RED=91;const COLOR_GREEN=92;const COLOR_YELLOW=93;const COLOR_BLUE=94;const COLOR_MAGENTA=95;const COLOR_CYAN=96;const COLOR_WHITE=97;protected$color=false;var$outfile=1;var$errfile=null;function initiate(){return$this;}static function getFileSymbol($y,$rD=false){if(is_null($y)){return self::DEVNULL;}else if(is_int($y)){if($y===0){return$rD?'&0':self::STDIN;}else if($y===1){return$rD?'&1':self::STDOUT;}else if($y===2){return$rD?'&2':self::STDERR;}}return strval($y);}static function appendTo($UB,$vB=false,$DC=null){if(empty($DC)&&$DC!==0){return 0;}if(is_int($DC)&&is_int($vB)){$UB=sprintf("\033[%dm%s\033[%dm",$vB,$UB,0);}$DC=self::getFileSymbol($DC);return file_put_contents($DC,$UB,FILE_APPEND|LOCK_EX);}function setColor($vB){if(is_string($vB)){$vB='COLOR_'.strtoupper($vB);$this->color=constant(__CLASS__.'::'.$vB);}return$this;}function write($UB){$UB=strval($UB);if(func_num_args()>1){$B=array_slice(func_get_args(),1);$UB=vsprintf($UB,$B);}return self::appendTo($UB,$this->color,$this->outfile);}function writeln($UB){$B=func_get_args();$B[0].=PHP_EOL;return exec_method_array($this,'write',$B);}function mount($c){$XE=func_get_args();foreach($XE as&$c){$c=rtrim($c,DIRECTORY_SEPARATOR);}$mD=PATH_SEPARATOR.implode(PATH_SEPARATOR,$XE);set_include_path(get_include_path().$mD);return$this;}function run(){if(php_sapi_name()!=='cli'){return;}if($_SERVER['argc']<2){return;}$gB=$_SERVER['argv'];$cD=array_shift($gB);$A=array_shift($gB);$I=Inflect::camelize($A).'Command';@require_once$I.'.php';if(class_exists($I)){$a=new$I($this,$cD,$gB);return$a->execute();}}}class Factory{protected$storage=null;protected$objects=array();function __construct(Storage&$JC){$this->storage=$JC;}function normalize($I){return rtrim($I,'\\');}function create($I,$A='default'){$I=$this->normalize($I);$UD=$this->storage->getSectionOnce($I);$H=$UD->getArray($A);if($A!=='default'){$H=array_merge($UD->getArray('default'),$H);}if(class_exists($I)){foreach($H as$C=>&$E){if(starts_with($C,'\\')){$E=$this->load($C,$E);}}return exec_construct_array($I,array_values($H));}}function load($I,$A='default'){$I=$this->normalize($I);if(!isset($this->objects[$I])){$this->objects[$I]=array();if(!isset($this->objects[$I][$A])){$this->objects[$I][$A]=$this->create($I,$A);}}return$this->objects[$I][$A];}}class Handler{protected$app=null;protected$succor=null;function __construct($LC=null){$this->app=app();$this->succor=$LC;}function init($T){return method_exists($this,$T)?$T:'';}function __invoke(){$T=$this->app->getMethod();$B=func_get_args();if($T=$this->init($T)){return exec_method_array($this,$T,$B);}else if($this->succor){return exec_function_array($this->succor,$B);}else{return$this->app->abort(403);}}}if(!function_exists('trait_exists')){function trait_exists($I,$VD){return false;}}final class Importer{private static$instance=null;private$classes=array();private$namespaces=array();private function __construct(){}static function getInstance(){if(is_null(self::$instance)){self::$instance=new self();self::$instance->register();}return self::$instance;}static function exists($I,$VD=true){return class_exists($I,$VD)||interface_exists($I,$VD)||trait_exists($I,$VD);}function autoload($I){$I=trim($I,'\\_');if(isset($this->classes[$I])){require_once$this->classes[$I];return self::exists($I,false);}$PG=$this->checkNamespace($I);return($PG===true);}function register(){return spl_autoload_register(array($this,'autoload'));}function addClass($W,$I){$QE=func_get_args();$W=array_shift($QE);if(is_readable($W)){foreach($QE as$I){$this->classes[trim($I,'\\')]=$W;}}ksort($this->classes);return$this;}function addNamespaceStrip($v,$U){$v=trim($v,'\\');$U=rtrim($U,'\\/');$this->namespaces[$v]=$U;ksort($this->namespaces);return$this;}function addNamespace($v,$U){$v=trim($v,'\\');$dB=strtok($v,'\\_');$U=rtrim($U,'\\/').DIRECTORY_SEPARATOR.$dB;return$this->addNamespaceStrip($v,$U);}function checkNamespace($I){$dB=strtok($I,'\\_');$Z=strlen($dB)+1;if(isset($this->namespaces[$dB])){$c=$this->namespaces[$dB];}else if(isset($this->namespaces[''])){$c=$this->namespaces[''];}else{return false;}$MB=$c.DIRECTORY_SEPARATOR;$MB.=str_replace(array('\\','_'),DIRECTORY_SEPARATOR,substr($I,$Z));if(file_exists($MB.'.php')){require_once$MB.'.php';if(self::exists($I,false)){return true;}}while($dB){$c.=DIRECTORY_SEPARATOR.$dB;if(file_exists($c.'.php')){require_once$c.'.php';if(self::exists($I,false)){return true;}}if(!file_exists($c)){return false;}$dB=strtok('\\_');}}}use \Cute\Context\Router;class Website extends Application{protected$method='';var$url='';var$rule='';function initiate(){$tB=Router::getCurrent();$this->install($tB,array('dispatch','abort','redirect'));$this->install('\\Cute\\Context\\Input',array('getClientIP','input'=>'getInstance',));return$this;}function route($c,$CB){$tB=Router::getCurrent();return$tB->route($c,$CB);}function mount($BB,$xC='*.php'){$tB=Router::getCurrent();$tB->mount($BB,$xC);return$this;}function getMethod(){if(empty($this->method)){$rB=$this->input('SERVER');$T=$rB->request('_method','');if(empty($T)){$T=$rB->get('REQUEST_METHOD','GET');}$this->method=strtolower($T);}return$this->method;}function run(){$BG=$this->getConfig('route_key','r');$c=$this->input('GET')->get($BG,'/');try{$GD=$this->dispatch($c);$LC=null;foreach($GD['handlers']as$CB){if(empty($CB)){continue;}if(is_string($CB)&&class_exists($CB,true)){$CB=new$CB($LC);}if($CB&&is_callable($CB)){$LC=&$CB;}}if($LC){$this->url=$GD['url'];$this->rule=$GD['rule'];$tE=exec_function_array($LC,$GD['args']);}}catch(\Exception$_){$tE=strval($_);}return die($tE);}}}
namespace Cute\Base{trait Deferring{protected$closed=false;function defer(){register_shutdown_function(function($JG){$JG->__destruct();},$this);}function __destruct(){if($this->closed===false){$this->close();}$this->closed=true;}function close(){}}use \Cute\Context\Input;defined('IP_ECHO_URL')or define('IP_ECHO_URL','http://ipecho.net/plain');class IP{const BYTE_IP_V4=4;const BYTE_IP_V6=6;protected$ipaddr='';function __construct($z=false){$this->ipaddr=$z?:self::getClientIP();}function __toString(){return$this->ipaddr;}static function toHex($z){return sprintf('%08x',ip2long($z));}static function getClientIP(){return Input::getClientIP();;}static function getServerIP(){if($z=file_get_contents(IP_ECHO_URL)){return trim($z);}}static function getHostIP($sC,$lD=array()){$yE=dns_get_record($sC,DNS_A,$BH,$CH);if($yE&&$z=$yE[0]['ip']){return$z;}else if($lD){return$lD[array_rand($lD)];}}}class Mocking{protected$inner=null;private function __construct(&$tD=null){$this->inner=$tD;}static function mock(&$tD=null){$xD=new self($tD);return$xD->isReady()?$xD->inner:$xD;}function __call($A,$aD){return false;}function __set($A,$E){return false;}function __get($A){return;}function isReady(){return!is_null($this->inner);}}use \ArrayObject;class Storage extends ArrayObject{const CONFIG_SECTION_NAME='configs';function __construct($rB=array(),$bG=ArrayObject::ARRAY_AS_PROPS){parent::__construct($rB,$bG);}static function newInstance($W,$qE=false){$W.=empty($qE)?'':$qE;assert(is_readable($W));return new self(include$W);}function getItem($A,$P=null){$aB=$this->offsetGet($A);return is_null($aB)?$P:$aB;}function getArray($A,array$P=array()){$H=$this->getItem($A);return is_array($H)?$H:$P;}function getSection($A){$H=$this->getArray($A,array());return new self($H);}function getSectionOnce($A){$H=$this->getItem($A);if(!($H instanceof self)){$H=new self($H);$this->offsetSet($A,$H);}return$H;}function getConfig($A,$P=null){$UD=$this->getSectionOnce(self::CONFIG_SECTION_NAME);return$UD->getItem($A,$P);}}}
namespace Cute\Cache{use \SplSubject;use \SplObserver;abstract class BaseCache implements SplObserver{protected$data=null;protected$ttl=0;protected$coerce=false;function share(&$H,$iD=false,$hG=0){$this->data=&$H;$this->coerce=$iD;$this->ttl=intval($hG);return$this;}function update(SplSubject$AH=null){if($iD=$this->coerce){$this->data=$iD($this->data);}$this->writeData();}abstract function initiate();abstract function readData();abstract function removeData();abstract function writeData($vC=false);}class FileCache extends BaseCache{protected$filename='';protected$ext='.php';function __construct($A,$U=false){if(empty($U)){$U=sys_get_temp_dir();}else{$U=rtrim($U,DIRECTORY_SEPARATOR);@mkdir($U,0755,true);}$this->filename=$U.DIRECTORY_SEPARATOR.$A.$this->ext;}function initiate(){if(!is_readable($this->filename)){touch($this->filename);}return$this;}function readData(){$O=filesize($this->filename);if($O>0){$this->data=(include$this->filename);}return$this->data;}function writeData($vC=false){$e="<?php \nreturn ".var_export($this->data,true).";\n";$O=file_put_contents($this->filename,$e);return$O&&$O>0;}function removeData(){if(file_exists($this->filename)){return unlink($this->filename);}}}class MemCache extends BaseCache{use\Cute\Base\Deferring;const MEMCACHE_WEIGHT_UNIT=12;protected$name='';protected$memcache=null;protected$host='';protected$port=0;protected$persistent=false;protected$weight=1;function __construct($A,$GB='127.0.0.1',$q=11211,$_G=false,$KC=1){$this->name=$A;$this->host=$GB;$this->port=intval($q);$this->persistent=$_G;$this->weight=intval($KC);}function initiate(){if(extension_loaded('memcache')){$this->memcache=new\Memcache();try{$this->connect();}catch(\Exception$_){$this->memcache=null;}}return$this;}function connect(){$KC=intval($this->weight)*self::MEMCACHE_WEIGHT_UNIT;$this->memcache->addServer($this->host,$this->port,$this->persistent,$KC);}function close(){$this->memcache->close();}function readData(){$H=$this->memcache->get($this->name);if($H!==false){return$H;}}function writeData($vC=false){return$this->memcache->set($this->name,$this->data,MEMCACHE_COMPRESSED,$this->ttl);}function removeData(){if($this->memcache->exists($this->name)){return$this->memcache->delete($this->name);}}}class RedisCache extends BaseCache{use\Cute\Base\Deferring;protected$name='';protected$redis=null;protected$host='';protected$port=0;protected$params=array('persistent'=>false,'socket'=>null,'serializer'=>null,);function __construct($A,$GB='127.0.0.1',$q=6379,array$M=array()){$this->name=$A;$this->host=$GB;$this->port=intval($q);if(isset($M['socket'])&&is_string($M['socket'])){if(starts_with($M['socket'],'unix://')){$M['socket']=substr($M['socket'],7);}}$this->params=array_merge($this->params,$M);}function initiate(){if(extension_loaded('redis')){$this->redis=new\Redis();try{$this->connect();}catch(\Exception$_){$this->redis=null;}}return$this;}function connect(){if(isset($this->params['socket'])){$B=array($this->params['socket']);}else{$B=array($this->host,$this->port);}$oF=$this->params['persistent']?'pconnect':'connect';exec_method_array($this->redis,$oF,$B);if($IE=$this->params['serializer']){$IE=constant('\\Redis::SERIALIZER_'.$IE);$this->redis->setOption(\Redis::OPT_SERIALIZER,$IE);}}function close(){$this->redis->close();}function readData(){$H=$this->redis->get($this->name);if($H!==false){$this->data=$H;return$this->data;}}function writeData($vC=false){return$this->redis->set($this->name,$this->data,$this->ttl);}function removeData(){if($this->redis->exists($this->name)){return$this->redis->del($this->name);}}}class Subject implements SplSubject{protected$observers=array();function attach(SplObserver$yC){$this->observers[]=$yC;}function detach(SplObserver$yC){$C=array_search($yC,$this->observers,true);if($C){unset($this->observers[$C]);}}function notify(){foreach($this->observers as&$yC){$yC->update($this);}}}class TSVCache extends FileCache{protected$delimiter="\t";protected$ext='.csv';function __construct($A,$U=false,$wE=''){parent::__construct($A,$U);if(!empty($wE)){$this->delimiter=$wE;}}function readData($vE=0){$this->data=array();$IB=fopen($this->filename,'rb');if($IB===false){return$this->data;}do{$GC=fgetcsv($IB,0,$this->delimiter);if(is_null($GC)||$GC===false){break;}if(is_null($GC[0])){$GC=array();}if($vE>0&&count($GC)<$vE){continue;}$this->data[]=$GC;}while(1);fclose($IB);return$this->data;}function writeData($vC=false){$CE=0;$IB=fopen($this->filename,'wb');if($IB===false){return$CE;}foreach($this->data as$h){$CE+=fputcsv($IB,$h,$this->delimiter);}fclose($IB);return$CE;}}class TextCache extends FileCache{protected$ext='.txt';function encode($H){return$H;}function decode($H){return$H;}function readData(){$O=filesize($this->filename);if($O>0){$e=file_get_contents($this->filename);$this->data=$this->decode($e);}return$this->data;}function writeData($vC=false){$e=$this->encode($this->data);$O=file_put_contents($this->filename,$e,LOCK_EX);return$O&&$O>0;}}class XSONCache extends TextCache{protected$ext='.json';function encode($H){return json_encode($H);}function decode($H){return json_decode($H);}}class YAMLCache extends TextCache{protected$ext='.yml';function encode($H){if(extension_loaded('yaml')){return yaml_emit($H,YAML_UTF8_ENCODING,YAML_LN_BREAK);}else if(class_exists('sfYamlDumper',true)){$SF=new\sfYamlDumper();return$SF->dump($H);}}function decode($H){if(extension_loaded('yaml')){return yaml_parse($H);}else if(class_exists('sfYamlParser',true)){$DF=new\sfYamlParser();return$DF->parse($H);}}}}
namespace Cute\Commun{use \Cute\Base\Mocking;defined('GEARMAN_SUCCESS')or define('GEARMAN_SUCCESS',0);class Job{protected$json='';function __construct($XB){$this->json=$XB;}function workload(){return$this->json;}function worknorm(){$XB=$this->workload();return json_decode($XB,true);}}class JobServer{use\Cute\Base\Deferring;protected static$instance=null;protected$worker_file='';protected$callbacks=array();protected$host='';protected$port=4730;protected$timeout=0;protected$client=null;protected$worker=null;protected function __construct($GB,$q){$this->host=$GB;$this->port=intval($q);}static function getInstance($GB='127.0.0.1',$q=4730,$DE=0){if(!self::$instance){self::$instance=new self($GB,$q);self::$instance->setTimeout($DE);}return self::$instance;}function close(){unset($this->client);unset($this->worker);unset($this->callbacks);}function setTimeout($DE=0){$this->timeout=intval($DE);return$this;}function setWorkerFile($HF){$this->worker_file=$HF;return$this;}function standIn($A,$XB){if($this->worker_file){defined('WORKER_RUNNING')or define('WORKER_RUNNING',true);require$this->worker_file;}if($yF=self::$instance->$A){$mF=new Job($XB);return$yF($mF);}}function __call($A,$B){$XB=json_encode($B);$BE=$this->getClient();if($BE instanceof Mocking){return$this->standIn($A,$XB);}try{$D=$BE->doNormal($A,$XB);assert($BE->returnCode()===GEARMAN_SUCCESS);}catch(\Exception$_){$D=$this->standIn($A,$XB);}return$D;}function __set($A,$b){$this->callbacks[$A]=$b;$uF=$this->getWorker();return$uF->addFunction($A,$b);}function __get($A){if(isset($this->callbacks[$A])){return$this->callbacks[$A];}}function getClient(){if(!$this->client){if(class_exists('\\GearmanClient')){$this->client=new\GearmanClient();$this->client->addServer($this->host,$this->port);}else{$this->client=Mocking::mock();}if($this->timeout>=0){$this->client->setTimeout($this->timeout);}}return$this->client;}function getWorker(){if(!$this->worker){if(class_exists('\\GearmanWorker')){$this->worker=new\GearmanWorker();$this->worker->addServer($this->host,$this->port);}else{$this->worker=Mocking::mock();}}return$this->worker;}function run(){if(!defined('WORKER_RUNNING')){define('WORKER_RUNNING',true);while($this->getWorker()->work());}}}use \Cute\Logging\Logger;class cURL{use\Cute\Base\Deferring;const CONN_FAIL_ERRNO=7;const DNS_FAIL_ERRNO=28;protected$base_url='';protected$global_opts=array();protected$logger=null;function __construct($HE='',Logger&$lF=null){\app()->import('Unirest',VENDOR_ROOT.'/unirest/src');$this->setBaseURL($HE);$this->logger=Mocking::mock($lF);}function close(){unset($this->logger);}static function getRequestMethod($T='GET'){return@constant('\Unirest\Method::'.strtoupper($T));}function setBaseURL($HE){$this->base_url=rtrim($HE,'/');return$this;}function prepare(array$KB=array()){if(!array_key_exists('timeout',$KB)&&!array_key_exists('Timeout',$KB)){$KB['Timeout']=intval(ini_get('default_socket_timeout'));}if(!array_key_exists('useragent',$KB)&&!array_key_exists('UserAgent',$KB)){$KB['UserAgent']='Mozilla/4.0';}if(empty($this->global_opts)){$this->global_opts=\Unirest\Request::curlOpts(array());}if(!empty($KB)){\Unirest\Request::curlOpts($this->global_opts);}return$this;}function finish(&$zE,$T='GET',$FF='-',$i=''){\Unirest\Request::clearCurlOpts();\Unirest\Request::curlOpts($this->global_opts);if($this->logger instanceof Mocking){return;}$l=\Unirest\Request::getInfo(CURLINFO_EFFECTIVE_URL);$KF=\Unirest\Request::getInfo(CURLINFO_CONNECT_TIME);$jG=\Unirest\Request::getInfo(CURLINFO_TOTAL_TIME);$fD=$zE->code;$rG=$zE->body?:'-';$i.=$i?"\n":"";$this->logger->info("{$T} \"{$l}\" {$KF} {$jG} {$fD}"."\n{$i}>>>>>>>>\n{$FF}\n<<<<<<<<\n{$rG}\n");}function getURLString($l){$l=$this->base_url.'/'.ltrim($l,'/');return$l;}function getBodyString($HB){if(empty($HB)){$HB='-';}else if(is_array($HB)||$HB instanceof\Traversable){$HB=\Unirest\Request::buildHTTPCurlQuery($HB);$HB=http_build_query($HB);}return$HB;}function __call($A,$B){$T=self::getRequestMethod($A);if($T){$this->prepare();if(!empty($this->base_url)){$B[0]=$this->getURLString($B[0]);}$i='';try{$D=exec_method_array('\\Unirest\\Request',$A,$B);}catch(\Exception$_){$i=$_->getMessage();}$HB=$this->getBodyString($B[2]);$this->finish($D,$T,$HB,$i);}else{$D=exec_method_array(\Unirest\Request,$A,$B);}return$D;}}}
namespace Cute\Context{class Input{protected static$instances=array();protected static$client_ip='-';protected$input_type=null;protected$data=array();protected$done=false;protected function __construct($YB='POST'){$this->input_type=constant('INPUT_'.$YB);if($YB==='REQUEST'){$this->raw_data=$_REQUEST;}assert(!is_null($this->input_type));}function __call($A,$aD){if(starts_with($A,'get')&&count($aD)>0){$F=substr($A,3);@list($C,$P)=$aD;return$this->get($C,$P,$F);}}static function getInstance($YB='POST'){$YB=strtoupper($YB);if(!isset(self::$instances[$YB])){$hB=new static($YB);self::$instances[$YB]=$hB;}return self::$instances[$YB];}static function request($C,$P=null,$F=false){$YG=self::getInstance('POST');$E=$YG->get($C,$P,$F);if($E===$P){$QG=self::getInstance('GET');$E=$QG->get($C,$P,$F);}return$E;}static function getClientIP(){if(strlen(self::$client_ip)>=7){return self::$client_ip;}$wC=array('HTTP_CLIENT_IP','HTTP_X_REAL_IP','HTTP_X_FORWARDED_FOR','HTTP_X_FORWARDED','HTTP_X_CLUSTER_CLIENT_IP','HTTP_FORWARDED_FOR','HTTP_FORWARDED','REMOTE_ADDR');$OG=self::getInstance('SERVER');foreach($wC as$C){$z=$OG->get($C);if($z&&strlen($z)>=7){self::$client_ip=$z;break;}}return self::$client_ip;}static function detectType($F){$F=empty($F)?'string':strtolower($F);foreach(filter_list()as$A){if(ends_with($A,$F)){return filter_id($A);}}}static function coerce($E,$F='raw'){if(is_array($E)){foreach($E as$C=>$rC){if(is_array($F)&&isset($F[$C])){$WE=$F[$C];}else{$WE=$F;}$E[$C]=self::coerce($rC,$WE);}}else{$F=strtolower($F);if($F==='int'||$F==='float'){settype($E,$F);}else if($F==='array'){$E=(array)$E;}else if($F!=='raw'){settype($E,'string');}}return$E;}protected function filterData($C,$F){$F=self::detectType($F);return filter_input($this->input_type,$C,$F);}protected function filterArrayData($pB){if(is_array($pB)){foreach($pB as$C=>&$F){if(is_array($F)){$F['filter']=self::detectType($F['filter']);}else{$F=self::detectType($F);}}}else{$pB=self::detectType($pB);}return filter_input_array($this->input_type,$pB);}function get($C,$P=null,$F=false){if(!array_key_exists($C,$this->data)){if(is_array($P)){$F=array($C=>array('filter'=>$F,'flags'=>FILTER_FORCE_ARRAY));$H=$this->filterArrayData($F);$this->data=array_merge($this->data,$H);}else{$E=$this->filterData($C,$F);if(is_null($E)||$E===false){$E=self::coerce($P,$F);}$this->data[$C]=$E;}}return$this->data[$C];}function all($C=false,$pB=false){if($this->done===false){$this->data=$this->filterArrayData($pB);}if(is_null($this->data)){$this->data=array();}if($C===false){return$this->data;}else if(array_key_exists($C,$this->data)){return$this->data[$C];}}}use \Cute\Context\Input;class Locale{protected$language='';protected$locale_dir='';protected$timezone='Asia/Shanghai';function __construct($vD='',$WB=''){if(empty($vD)){$vD=APP_ROOT.'/protected/locales';}$this->locale_dir=$vD;$this->timezone=$WB;}function detectLanguage(){$rB=Input::getInstance('SERVER');$bB=strstr($rB->get('LANG',''),'.',true);if(empty($bB)){$qG=$rB->get('HTTP_ACCEPT_LANGUAGE','');preg_match_all('/([a-z]{2}\-?[A-Z]{0,2})/',$qG,$VB);foreach($VB[0]as$bB){$bB=str_replace('-','_',$bB);if(file_exists($this->locale_dir.'/'.$bB)){break;}}}return$bB;}function setLocale($bB,$sC='messages'){if($bB){$this->language=$bB;}else{$this->language=$this->detectLanguage();}putenv('LANG='.$this->language);setlocale(LC_ALL,$this->language);bindtextdomain($sC,$this->locale_dir);bind_textdomain_codeset($sC,'UTF-8');textdomain($sC);return$this->language;}function setTimezone($WB){if($WB){$this->timezone=$WB;}@date_default_timezone_set($this->timezone);return$this->timezone;}}class Router{protected static$current=null;static$aliases=array('<int>'=>'([0-9\-]+)','<float>'=>'([0-9\.\-]+)','<num>'=>'([0-9\.\-,]*)','<string>'=>'([a-z0-9\-_]+)','<page>'=>'([0-9]*)/?([0-9]*)/?','<path>'=>'([a-z0-9\-_/])');protected$filename='';protected$prefix='';protected$children=array();protected$items=array();function __construct($W='',$w='/'){$this->filename=$W;$this->prefix=rtrim($w,'/');self::$current=$this;if($W&&is_readable($W)){include_once$W;}}static function getCurrent(){if(is_null(self::$current)){self::$current=new self();}return self::$current;}static function toPrefix($W){$zG=strstr(basename($W),'.');$sG=substr($W,0,-strlen($zG));$w=str_replace(DIRECTORY_SEPARATOR,'/',$sG);return strtolower(rtrim($w,'/'));}static function compileUrl($l,$SG=false){$l=preg_quote(strtolower(rtrim($l,'/')));$wC=array_map('preg_quote',array_keys(self::$aliases));$R=array_values(self::$aliases);$l=str_replace($wC,$R,$l);$xC=($SG===false)?'':'(.*)?';return'!^'.$l.'/?'.$xC.'$!';}function route($c,&$CB){$UC=self::compileUrl($c);if(func_num_args()>2){$WD=array_slice(func_get_args(),1);}else{$WD=array($CB);}$this->items[$UC]=$WD;return$UC;}function mount($BB,$xC='*.php'){$BB=rtrim($BB,DIRECTORY_SEPARATOR);$XD=glob($BB.'/'.$xC,GLOB_BRACE);if(!empty($XD)){$GF=strlen($BB);foreach($XD as$W){$w=self::toPrefix(substr($W,$GF));$this->children[$w]=$W;}}return$this;}function dispatch($c,$hE=false){$c=rtrim(strtolower($c),' /').'/';if(!$hE){krsort($this->children);}foreach($this->children as$w=>$W){if(starts_with($c,$w)){$tB=new self($W,$w);$c=substr($c,strlen($w));return$tB->dispatch($c);}}if(!$hE){krsort($this->items);}foreach($this->items as$UC=>$WD){if(preg_match($UC,$c,$B)===1){$l=$this->prefix.array_shift($B);return array('handlers'=>&$WD,'args'=>$B,'url'=>$l,'rule'=>$UC);}}$this->abort(404);return array('handlers'=>array());}function abort($fD=500){return@http_response_code($fD);}function redirect($VF='',$PF=false){$MF=$PF?301:302;@header('Location: '.$VF,true,$MF);return die();}}class Session{}}
namespace Cute\DB{use \DateTime;use \PDO;use \PDOException;use \Cute\DB\Literal;use \Cute\Utility\Inflect;use \Cute\View\Templater;abstract class Database{const DB_ACTION_READ='R';const DB_ACTION_WRITE='W';protected$pdo=null;protected$user='';protected$password='';protected$dbname='';protected$tblpre='';protected$host='';protected$port=0;protected$charset='';protected$past_sqls=array();function __construct($dG,$oG,$AB,$NC='',$GB='127.0.0.1',$q=0,$oE=''){$this->user=$dG;$this->password=$oG;$this->dbname=$AB;$this->tblpre=$NC;$this->host=$GB;if(intval($q)>0){$this->port=intval($q);}if(!empty($oE)){$this->charset=$oE;}}function getPDO(){if(!$this->pdo){$this->connect($this->dbname,$this->tblpre);}return$this->pdo;}function getPastSQL($AB=false,$o=0){if($AB===true||$AB==='*'){return$this->past_sqls;}$AB=empty($AB)?$this->dbname:$AB;$OE=$this->past_sqls[$AB];$o=empty($o)?0:-abs($o);return$o?array_slice($OE,$o,null,true):$OE;}function getDriverName(){$YD=$this->getPDO()->getAttribute(PDO::ATTR_DRIVER_NAME);$YD=strtolower($YD);return$YD==='dblib'?'sqlsrv':$YD;}function inline($t){return new Literal($t);}function quote($t){if(is_null($t)){return Literal::quoteNull();}else if($t instanceof Literal||$t instanceof DateTime){return Literal::quote($t);}else{$F=is_int($t)?PDO::PARAM_INT:PDO::PARAM_STR;return$this->getPDO()->quote($t,$F);}}function embed($G,array$M=array()){foreach($M as&$t){$t=$this->quote($t);}$G=str_replace('?','%s',$G);return vsprintf($G,$M);}function execute($G,array$M=array()){if(!empty($M)){$G=$this->embed($G,$M);}try{$D=$this->getPDO()->exec($G);}catch(PDOException$_){$Y="SQL: $G\n".$_->getMessage();throw new PDOException($Y);}if(SQL_VERBOSE){$this->past_sqls[$this->dbname][]=array('act'=>self::DB_ACTION_WRITE,'sql'=>$G,);}return$D;}function query($G,array$M=array()){try{$d=$this->getPDO()->prepare($G);if($d->execute($M)){$d->setFetchMode(PDO::FETCH_ASSOC);}}catch(PDOException$_){$G=$this->embed($G,$M);$Y="SQL: $G\n".$_->getMessage();throw new PDOException($Y);}if(SQL_VERBOSE){$G=$this->embed($G,$M);$this->past_sqls[$this->dbname][]=array('act'=>self::DB_ACTION_READ,'sql'=>$G,);}return$d;}function fetch($G,array$M=array(),$RC=false){if($d=$this->query($G,$M)){if(is_numeric($RC)){$D=$d->fetchColumn(intval($RC));}else{$D=$d->fetch();if($D&&$RC){$D=isset($D[$RC])?$D[$RC]:null;}}$d->closeCursor();return$D;}}function transact(callable$_F){$wD=$this->getPDO();if($wD->beginTransaction()){$B=func_get_args();array_unshift($B,$this);try{$_F($B);$wD->commit();}catch(PDOException$_){$wD->rollBack();}}}function listTables(){if(empty($this->tblpre)){$G="SHOW TABLES FROM ?";$t=$this->getDBName();}else{$G="SHOW TABLES LIKE ?";$t=str_replace('_','\_',$this->tblpre).'%';}$D=array();if($d=$this->query($G,array($t))){$IG=strlen($this->tblpre);while($L=$d->fetchColumn(0)){$D[]=substr($L,$IG);}$d->closeCursor();}return$D;}function readFields($L){$K=$this->getColumns($L);$x=array();$RB=array();foreach($K as$J){if($J->isPrimaryKey()){$x[]=$J->name;}$P=$J->default;$AF=$J->getCategory();if($AF==='int'){$P=intval($P);}else if($AF==='float'){$P=floatval($P);}$RB[$J->name]=$P;}return compact('table','pkeys','fields');}function generateModel($U,$L,$V='',$v='',$KG=false){if(empty($V)){$V=$KG?Inflect::singularize($L):$L;$V=Inflect::camelize($V);}$U=rtrim($U,DIRECTORY_SEPARATOR).DIRECTORY_SEPARATOR;if($v){$U.=str_replace('\\',DIRECTORY_SEPARATOR,trim($v));if(!file_exists($U)){mkdir($U,0777,true);}}$W=$U.DIRECTORY_SEPARATOR.$V.'.php';if(class_exists($v.'\\'.$V)){return$W;}$H=$this->readFields($L);$H['name']=$V;$H['ns']=$v;$H['mixin']=null;$H['relations_in_mixin']=false;$PD=$v.'\\'.$V.'Mixin';if(trait_exists($PD,true)){foreach($H['fields']as$CD=>$P){if(property_exists($PD,$CD)){unset($H['fields'][$CD]);}}$H['mixin']=$PD;$H['relations_in_mixin']=method_exists($PD,'getRelations');}$nC=new Templater(SRC_ROOT);ob_start();$nC->render('model_tpl.php',$H);$e="<?php\n\n".trim(ob_get_clean());file_put_contents($W,$e);return$W;}static function csvline($h,$qB="\t",$iC=PHP_EOL,$mB='"',$pC=null){foreach($h as&$aB){if(is_null($aB)){$aB=$pC;}else if(is_string($aB)){if(strpbrk($aB," $qB")!==false){$aB="$mB$aB$mB";}}}return implode($qB,$h).$iC;}abstract function connect($AB,$NC='',$QC=false);abstract function getLimit($Z,$o=0);abstract function getColumns($L);}use \HandlerSocketi;class HandlerSocket{const HS_PORT_R=9998;const HS_PORT_RW=9999;protected$handler=null;protected$query=null;protected$read_only=false;protected$dbname='';protected$table='';protected$fields=array();protected$index=null;function __construct($AB,$GB='127.0.0.1',$q=0,$qF=false){$this->dbname=$AB;$this->read_only=$qF;if(empty($q)){$q=$this->read_only?self::HS_PORT_R:self::HS_PORT_RW;}$this->handler=new HandlerSocketi($GB,$q);}function open($L,$RB){if(is_string($RB)){$RB=explode(',',str_replace(' ','',$RB));}$this->table=$L;$this->fields=$RB;$this->query=null;return$this;}protected function prepare($g=null){if(empty($this->query)||$this->index!==$g){$this->index=$g;$KB=empty($this->index)?array():array('index'=>$this->index);$this->query=$this->handler->open_index($this->dbname,$this->table,$this->fields,$KB);}return$this->query;}function insert(array$BD){$C=$this->index;$D=$this->prepare($C)->insert($BD);return$D!==false;}function delete($E){if(func_num_args()>1){$C=$E;$E=func_get_arg(1);}else{$C=null;}return$this->prepare($C)->remove($E);}function truncate($DD){$cC=array();$C=null;$DD=is_array($DD)?$DD:func_get_args();foreach($DD as$ZB){$cC[]=array('remove',$ZB);}$D=$this->prepare($C)->multi($cC);$CF=create_function('$a,$b','return $a && $b;');return array_reduce($D,$CF,true);}function update(array$eC,$C,$E){return$this->prepare($C)->update($E,$eC);}function get($E){if(func_num_args()>1){$C=$E;$E=func_get_arg(1);}else{$C=null;}$D=$this->prepare($C)->find($E);if(empty($D)){return($D===false)?false:null;}return array_combine($this->fields,$D[0]);}function all($C=null,$u='>=',$E=0,$PB=0,$o=0){$tC=array();if($PB>0){$tC['limit']=$PB;}if($o>0){$tC['offset']=$o;}$E=array($u=>$E);$D=$this->prepare($C)->find($E,$tC);if($D===false){return false;}foreach($D as&$h){$h=array_combine($this->fields,$h);}return$D;}function in($C,$E){$cC=array();$R=array_slice(func_get_args(),1);if(count($R)===1&&is_array($R[0])){$R=$R[0];}foreach($R as$E){$cC[]=array('find',$E);}$D=$this->prepare($C)->multi($cC);if($D===false){return false;}$PC=exec_function_array('array_merge',$D);foreach($PC as&$h){$h=array_combine($this->fields,$h);}return$PC;}}class Literal{protected static$format="'%s'";protected$value;function __construct($E){$this->value=$E;}function __toString(){return strval($this->value);}static function quoteNull(){return'NULL';}static function quote($E){if(is_null($E)){return self::quoteNull();}else if($E instanceof self){return strval($E);}if($E instanceof DateTime){$E=$E->format('Y-m-d H:i:s');}else if(is_string($E)){$E=convert($E,'UTF-8');}else{$E=strval($E);}return sprintf(self::$format,$E);}}use \Cute\DB\Database;class MySQL extends Database{protected$port=3306;protected$charset='utf8';protected$lower_table_name=null;function connect($AB,$NC='',$QC=false){$zD=sprintf('mysql:host=%s;port=%d;charset=%s',$this->host,$this->port,$this->charset);$KB=array(PDO::ATTR_ERRMODE=>PDO::ERRMODE_EXCEPTION,PDO::MYSQL_ATTR_INIT_COMMAND=>sprintf("SET NAMES '%s'",$this->charset),);$this->pdo=new PDO($zD,$this->user,$this->password,$KB);if($QC){$this->pdo->exec(sprintf("CREATE DATABASE IF NOT EXIST `%s`",$this->dbname));}$this->pdo->exec(sprintf("USE `%s`",$this->dbname));$this->tblpre=$NC;if(!array_key_exists($this->dbname,$this->past_sqls)){$this->past_sqls[$this->dbname]=array();}return$this;}function needTableToLower(){if(is_null($this->lower_table_name)){$G="SHOW Variables LIKE 'lower_case_table_names'";$UF=$this->fetch($G,array(),'Value');$this->lower_table_name=intval($UF)===1;}return$this->lower_table_name;}function getTableName($L,$hC=false){$N=$this->tblpre.$L;if($this->needTableToLower()){$N=strtolower($N);}return$hC?'`'.$N.'`':$N;}function getLimit($Z,$o=0){if($o>0){$PB=sprintf(" LIMIT %d, %d",$o,$Z);}else{$PB=sprintf(" LIMIT %d",$Z);}return array("",$PB);}function getPKey($L){$N=$this->getTableName($L);$G="SELECT COLUMN_NAME FROM information_schema.COLUMNS"." WHERE TABLE_SCHEMA=? AND TABLE_NAME=? AND COLUMN_KEY='PRI'";$M=array($this->dbname,$N);return$this->fetch($G,$M,0);}function getColumns($L){$N=$this->getTableName($L);$K=array('COLUMN_NAME','COLUMN_DEFAULT','COLUMN_KEY','IS_NULLABLE','COLUMN_TYPE','DATA_TYPE','CHARACTER_MAXIMUM_LENGTH','NUMERIC_PRECISION','NUMERIC_SCALE','DATETIME_PRECISION',);$G="SELECT %s FROM information_schema.COLUMNS"." WHERE TABLE_SCHEMA=? AND TABLE_NAME=? ORDER BY ORDINAL_POSITION";$G=sprintf($G,implode(', ',$K));$M=array($this->dbname,$N);if($d=$this->query($G,$M)){$GE=PDO::FETCH_CLASS|PDO::FETCH_PROPS_LATE;$D=$d->fetchAll($GE,'\\Cute\\ORM\\Column');$d->closeCursor();return$D;}}function isExists($L){$N=$this->getTableName($L);$G="SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES"." WHERE TABLE_NAME=? AND (TABLE_SCHEMA=? OR TABLE_CATALOG=?)";$M=array($N,$this->dbname,$this->dbname);$L=$this->fetch($G,$M,0);return$N===$L;}function getCreateSQL($L,$oB,$ME=false,$LE=false){$N=$this->getTableName($L);if($ME){$G="CREATE TABLE `%s` LIKE `%s`";return sprintf($G,$oB,$N);}else if($LE){$QC=sprintf("CREATE TABLE `%s`",$N);$G=$this->fetch("SHOW $QC",array(),'Create Table');$G=preg_replace('/(AUTO_INCREMENT=\d+)/','AUTO_INCREMENT=1',$G,1);$OF=sprintf("CREATE TABLE IF NOT EXISTS `%s`",$oB);return str_replace($QC,$OF,$G);}else{$cB="";$MC="";$r="";$K=$this->getColumns();foreach($K as$J){$A=$J->name;$P=trim($J->default,"()");if($J->getCategory()==='char'){$Z=intval($J->length);$F=($Z>255||$Z<0)?"text":"varchar($Z)";}else if($J->getCategory()==='int'){$sB=intval($J->precision);if($P===''){$P="0";}$F=$J->type."($sB)";}else if($J->getCategory()==='float'){$sB=intval($J->precision);$gD=intval($J->scale);if($P===''){$P="0.0";}$F=$J->type;if($J->type==='real'){$F='float';}else if($J->type==='money'){$F='numeric';}$F.="($sB,$gD)";}else if($J->getCategory()==='datetime'){$F='datetime';}else{$F=$J->type;}if($J->isPrimaryKey()){$cB="    `$A` int(10) unsigned NOT NULL AUTO_INCREMENT,";$MC="PRIMARY KEY (`$A`)";}else if(starts_with($F,'date')||ends_with($F,'text')){$r.="    `$A` $F NULL,\n";}else if($J->isNullable()){$r.="    `$A` $F NULL,\n";}else{$r.="    `$A` $F NOT NULL DEFAULT '$P',\n";}}$nC=<<<EOD
CREATE TABLE IF NOT EXISTS `%s` (
%s
%s
    %s
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT
EOD
;if(empty($cB)){$r=rtrim($r,",\n");}$G=sprintf($nC,$oB,$cB,$r,$MC);return$G;}}function sqlToFile($G,$MB,$qB="\t",$iC=PHP_EOL,$mB='"',$pC=null){@mkdir(dirname($MB),0664,true);$ED="FIELDS TERMINATED BY '".addslashes($qB)."'";$ED.=" LINES TERMINATED BY '".addslashes($iC)."'";if($mB){$ED.=" OPTIONALLY ENCLOSED BY '".addslashes($mB)."'";}if($mG){$ED.=" FIELDS ESCAPED BY '".addslashes($mG)."'";}$SC=sys_get_temp_dir().DIRECTORY_SEPARATOR.basename($MB);$cG="$G INTO OUTFILE '$SC' $ED";try{if(file_exists($SC)){unlink($SC);}$this->db->execute($cG);if(file_exists($SC)){rename($SC,$MB);$CC=shell_exec('wc -l '.$MB.' | cut -d" " -f1');$CC=trim($CC);return is_numeric($CC)?intval($CC):0;}}catch(\Exception$_){}}}class Query{const COUNT_INSERT_BULK_MAX=500;static$db_actions=array('select','update','delete','insert','insertBulk','apply',);protected$table='';protected$constrains=array();protected$parameters=array();protected$offset=0;protected$length=-1;protected$additions=array('GROUP BY'=>null,'HAVING'=>null,'ORDER BY'=>null,);function __construct($L){$this->table=$L;}function getTable(){return$this->table;}function deduceWhere($BC='',array&$B=array()){$k=implode(' AND ',$this->constrains);$M=$this->parameters;if(!empty($BC)){if($k){$k='('.$k.') OR ('.$BC.')';}else{$k=$BC;}if(count($B)>0){$M=array_merge($M,$B);}}$k=$k?'WHERE '.$k:'';return array($k,$M);}protected function deduceTail($DH=''){$wG=func_get_args();$mC="";foreach($this->additions as$C=>$E){if(!is_null($E)&&!in_array($C,$wG)){$mC.=" $C $E";}}return$mC;}function groupBy($yG,$uG=null){$this->additions['GROUP BY']=$yG;$this->additions['HAVING']=$uG;return$this;}function orderBy($rE,$AD=''){if($AD){$rE.=' '.strtoupper($AD);}$this->additions['ORDER BY']=$rE;return$this;}function setPage($fC,$JB=1,$_B=0){$this->length=intval($fC)<0?-1:intval($fC);if($this->length>0){$JB=intval($JB);if($JB<0&&$_B>0){$ZG=ceil($_B/$this->length);$JB+=$ZG+1;}if($JB>0){$this->offset=($JB-1)*$this->length;}}return$this;}function contain($CD,array$R){$DB=count($R);if($DB===0){$u='IS NULL';}else if($DB===1){$u='= ?';}else{$jB=implode(', ',array_fill(0,count($R),'?'));$u='IN ('.$jB.')';}$R=array_values($R);$this->constrains[]="$CD $u";$this->parameters=array_merge($this->parameters,$R);return$this;}function filter($OC,$E,$u='= ?'){$u=empty($u)?false:strtoupper($u);if(is_array($E)){if(substr_count($u,'?')===count($E)){$this->constrains[]="$OC $u";$this->parameters=array_merge($this->parameters,$E);}else{$this->contain($OC,$E);}}else if(is_null($E)){if(trim($u)==='<>'){$this->constrains[]="$OC IS NOT NULL";}else{$this->constrains[]="$OC IS NULL";}}else{$this->constrains[]=($u===false)?$OC:"$OC $u";$this->parameters[]=$E;}return$this;}static function getSelectSQL($N,$K='*',$w=""){if(is_object($K)){$K=get_object_vars($K);}if(is_array($K)){array_walk($K,create_function('&$v,$k','if(!is_numeric($k))$v.=" as ".$k;'));$K=implode(', ',$K);}$K=trim($K);$G="SELECT $w$K FROM $N";return$G;}function select(Database&$Q,$K='*',$xE='fetchAll',array$gC=array(),$BC='',array&$B=array()){$FD="";$PB="";if(starts_with($K,'COUNT')){$mC=$this->deduceTail('ORDER BY');}else{$mC=$this->deduceTail();if($this->length>0){list($FD,$PB)=$Q->getLimit($this->length,$this->offset);}}$N=$Q->getTableName($this->getTable(),true);list($k,$M)=$this->deduceWhere($BC='',$B);$G=self::getSelectSQL($N,$K,$FD);$G.=($k?' '.$k:'').$mC.$PB;$d=$Q->query(rtrim($G),$M);if($d&&$xE){$D=exec_method_array($d,$xE,$gC);$d->closeCursor();return$D;}}function apply(Database&$Q,$b){$b=strtoupper($b);$B=array_slice(func_get_args(),2);if(empty($B)){$K=$b==='COUNT'?'*':'';}else{$K=implode(', ',$B);}$K=$b.'('.$K.')';$D=$this->select($Q,$K,'fetchColumn');return$D;}function delete(Database&$Q){$N=$Q->getTableName($this->getTable(),true);list($k,$M)=$this->deduceWhere();$G="DELETE FROM $N $k";if(empty($k)&&$Q->getDriverName()==='mysql'){$G="TRUNCATE $N";}return$Q->execute(rtrim($G),$M);}static function getUpdateSet(array$eC){$sE=array();$R=array();foreach($eC as$C=>$rC){$sE[]=$C.'=?';$R[]=$rC;}$sD="SET ".implode(', ',$sE);return array($sD,$R);}function update(Database&$Q,array$eC,$lB=false){list($k,$M)=$this->deduceWhere();list($sD,$R)=self::getUpdateSet($eC);$dC=$lB?'UPDATE DELAYED':'UPDATE';$N=$Q->getTableName($this->getTable(),true);$G="$dC $N $sD $k";$M=array_merge($R,$M);return$Q->execute(rtrim($G),$M);}static function getInsertSQL($N,array$K,$lB=false,$bC=false){if($bC===true){$dC=$lB?'REPLACE DELAYED':'REPLACE INTO';}else{$dC=$lB?'INSERT DELAYED':'INSERT INTO';}if($DB=count($K)){$K=implode(',',$K);$jB=implode(', ',array_fill(0,$DB,'?'));return array("$dC $N ($K)",$jB);}else{return array("$dC $N",'');}}function insert(Database&$Q,array$BD,$lB=false,$bC=false){$N=$Q->getTableName($this->getTable(),true);list($G,$jB)=self::getInsertSQL($N,array_keys($BD),$lB,$bC);if(!empty($jB)){$G.=" VALUES ($jB)";$M=array_values($BD);if($Q->execute($G,$M)){return$Q->getPDO()->lastInsertId();}}}function insertBulk(Database&$Q,array$PC,array$K=null,$lB=false,$bC=false){assert(count($PC)>0);if(empty($K)){$K=array_keys(reset($PC));}$N=$Q->getTableName($this->getTable(),true);list($G,$jB)=self::getInsertSQL($N,$K,$lB,$bC);$DG=array_chunk($PC,self::COUNT_INSERT_BULK_MAX);foreach($DG as$uE){$VG=array_fill(0,count($uE),"($jB)");$G.=" VALUES ".implode(', ',$VG);$XG=array_map('array_values',$uE);$M=exec_funcution_array('array_merge',$XG);$Q->execute($G,$M);}}}class SQLServer extends Database{protected$port=1433;protected$charset='utf8';function connect($AB,$NC='',$QC=false){$zD=sprintf('dblib:host=%s;port=%d;charset=%s',$this->host,$this->port,$this->charset);$this->pdo=new PDO($zD,$this->user,$this->password);$this->pdo->exec(sprintf("USE `%s`",$this->dbname));$this->tblpre=$NC;if(!array_key_exists($this->dbname,$this->past_sqls)){$this->past_sqls[$this->dbname]=array();}return$this;}function getTableName($L,$hC=false){$N=$this->tblpre.$L;return$hC?'['.$N.']':$N;}function getLimit($Z,$o=0){$FD=sprintf("TOP %d ",$Z);return array($FD,"");}function getPKey($L){$N=$this->getTableName($L);$G="SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.%s WHERE TABLE_SCHEMA='dbo'"." AND TABLE_CATALOG=? AND TABLE_NAME=? ORDER BY ORDINAL_POSITION";$M=array($this->dbname,$N);$uB=$this->fetch(sprintf($G,'KEY_COLUMN_USAGE'),$M,0);if(empty($uB)){$uB=$this->fetch(sprintf($G,'COLUMNS'),$M,0);}return$uB;}function getColumns($L){$N=$this->getTableName($L);$K=array('COLUMN_NAME','COLUMN_DEFAULT','COLUMN_KEY','IS_NULLABLE','COLUMN_TYPE','DATA_TYPE','CHARACTER_MAXIMUM_LENGTH','NUMERIC_PRECISION','NUMERIC_SCALE','DATETIME_PRECISION',);$G="SELECT %s FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA='dbo'"." AND TABLE_CATALOG=? AND TABLE_NAME=? ORDER BY ORDINAL_POSITION";$G=sprintf($G,implode(', ',$K));$M=array($this->dbname,$N);if($d=$this->query($G,$M)){$GE=PDO::FETCH_CLASS|PDO::FETCH_PROPS_LATE;$D=$d->fetchAll($GE,'\\Cute\\ORM\\Column');$d->closeCursor();return$D;}}function isExists($L){$N=$this->getTableName($L);$G="SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='dbo'"." AND TABLE_CATALOG=? AND TABLE_NAME=?";$M=array($this->dbname,$this->table);$L=$this->fetch($G,$M,0);return$N===$L;}function getCreateSQL($oB,$K=array(),$ME=false,$LE=false){$cB="";$MC="";$r="";$K=$this->getColumns();if($ME||$LE){foreach($K as$J){if($J->getCategory()==='char'){$F="[".$J->type."](".intval($J->length).")";}else if($J->type==='numeric'){$F="[numeric](".$J->precision.", ".$J->scale.")";}else{$F="[".$J->type."]";}if($J->isPrimaryKey()){$cB="    [$A] $F IDENTITY(1,1) NOT FOR REPLICATION NOT NULL,";$MC="PRIMARY KEY NONCLUSTERED ( [$A] ASC )";}else{$TG=$J->isNullable()?"NULL":"NOT NULL DEFAULT ".$J->default;$r.="    [$A] $F $TG,\n";}}}else{foreach($K as$J){$P=trim($J->default,"()");if($J->getCategory()==='char'){$Z=intval($J->length);$F=($Z>255||$Z<0)?"text":"varchar($Z)";}else if($J->getCategory()==='int'){$sB=intval($J->precision);if($P===''){$P="0";}$F=$J->type."($sB)";}else if($J->getCategory()==='float'){$sB=intval($J->precision);$gD=intval($J->scale);if($P===''){$P="0.0";}$F=$J->type;if($J->type==='real'){$F='float';}else if($J->type==='money'){$F='numeric';}$F.="($sB,$gD)";}else if($J->getCategory()==='datetime'){$F='datetime';}else{$F=$J->type;}if($J->isPrimaryKey()){$cB="    [$A] $F IDENTITY(1,1) NOT FOR REPLICATION NOT NULL,";$MC="PRIMARY KEY NONCLUSTERED ( [$A] ASC )";}else if(starts_with($F,'date')||ends_with($F,'text')){$r.="    [$A] $F NULL,\n";}else if($J->isNullable()){$r.="    [$A] $F NULL,\n";}else{$r.="    [$A] $F NOT NULL DEFAULT '$P',\n";}}}$nC=<<<EOD
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES
    WHERE TABLE_SCHEMA='dbo' AND TABLE_NAME='%s')
BEGIN
CREATE TABLE [dbo].[%s] (
%s
%s
    CONSTRAINT [PK_%s]
    %s
    WITH ( PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF,
        ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON )
    ON [PRIMARY]
) ON [PRIMARY]
END
EOD
;if(empty($cB)){$r=rtrim($r,",\n");}$G=sprintf($nC,$oB,$oB,$cB,$r,$oB,$MC);return$G;}function sqlToFile($G,$MB,$qB="\t",$iC=PHP_EOL,$mB='"',$pC=null){@mkdir(dirname($MB),0664,true);$IB=fopen($MB,'wb');$CC=0;$_E=$this->query($G);while($h=$_E->fetch()){if(is_null($pC)){fputcsv($IB,$h,$qB,$mB);}else{fwrite($IB,self::csvline($h,$qB,$iC,$mB,$pC));}$CC++;}$_E->closeCursor();fclose($IB);return$CC;}}}
namespace Cute\Logging{use \Cute\Logging\Logger;defined('LOG_WRITE_FILE_FREQ')or define('LOG_WRITE_FILE_FREQ',1);class FileLogger extends Logger{use\Cute\Base\Deferring;protected$filename='';protected$records=array();function __construct($A='',$BB=false,$_C=false){$this->filename=($A?$A.'_':'').'%s.log';if($BB===false){$BB=realpath('./logs');}if(is_dir($BB)||mkdir($BB,0777,true)){$this->filename=$BB.DIRECTORY_SEPARATOR.$this->filename;}parent::__construct($_C);$this->defer();}function close(){$this->writeFiles();unset($this->records);}function writeFiles(){foreach($this->records as$RG=>&$ZE){$y=sprintf($this->filename,$RG);$mD=implode('',$ZE);$O=file_put_contents($y,$mD,FILE_APPEND|LOCK_EX);if($O!==false){$ZE=array();}}}function append(){$iG=implode(' ',func_get_args());$qD=date('Ymd');if(!isset($this->records[$qD])){$this->records[$qD]=array();}array_push($this->records[$qD],$iG.PHP_EOL);}function rawlog($kB,$Y,array$S=array()){$kB=strtoupper($kB);if($this->compareLevel($kB)){$e=self::format($Y,$S);$z=self::getClientIP();$NG=date('Y-m-d H:i:s');$this->append($NG,$z,$kB,$e);}if(LOG_WRITE_FILE_FREQ>=1||LOG_WRITE_FILE_FREQ>=mt_rand(1,10000)/10000){$this->writeFiles();}}}use \Cute\Context\Input;use \Cute\View\Templater;abstract class Logger{const EMERGENCY='EMERGENCY';const ALERT='ALERT';const CRITICAL='CRITICAL';const ERROR='ERROR';const WARNING='WARNING';const NOTICE='NOTICE';const INFO='INFO';const DEBUG='DEBUG';protected$threshold=false;protected$threshold_value=null;function __construct($_C=false){if($_C===false){$this->threshold=self::DEBUG;}else{$this->threshold=strtoupper($_C);}}static function format($Y,array$S=array()){$e=is_null($Y)?'':(string)$Y;return Templater::replaceWith($e,$S,'{','}');}static function getClientIP(){return Input::getClientIP();}function compareLevel($kB){static$zC=array(self::EMERGENCY=>0,self::ALERT=>1,self::CRITICAL=>2,self::ERROR=>3,self::WARNING=>4,self::NOTICE=>5,self::INFO=>6,self::DEBUG=>7,);if(is_null($this->threshold_value)&&isset($zC[$this->threshold])){$this->threshold_value=$zC[$this->threshold];}if(isset($zC[$kB])){return$zC[$kB]<=$this->threshold_value;}}function emergency($Y,array$S=array()){$this->rawlog(self::EMERGENCY,$Y,$S);}function alert($Y,array$S=array()){$this->rawlog(self::ALERT,$Y,$S);}function critical($Y,array$S=array()){$this->rawlog(self::CRITICAL,$Y,$S);}function error($Y,array$S=array()){$this->rawlog(self::ERROR,$Y,$S);}function warning($Y,array$S=array()){$this->rawlog(self::WARNING,$Y,$S);}function notice($Y,array$S=array()){$this->rawlog(self::NOTICE,$Y,$S);}function info($Y,array$S=array()){$this->rawlog(self::INFO,$Y,$S);}function debug($Y,array$S=array()){$this->rawlog(self::DEBUG,$Y,$S);}abstract function rawlog($kB,$Y,array$S=array());abstract function close();}}
namespace Cute\ORM{use \Cute\ORM\Relation;class BelongsTo extends Relation{protected$another_foreign_key='';function __construct($V='',$pD=''){parent::__construct($V);$this->another_foreign_key=$pD;}function getAnotherForeignKey($A){if(empty($this->another_foreign_key)){$this->another_foreign_key=$A.'_id';}return$this->another_foreign_key;}function relative($A,array&$D){if(empty($D)){return array();}$x=exec_method_array($this->model,'getPKeys');if(empty($x)){return array();}$QB=$this->getAnotherForeignKey($A);$R=$this->getAttrs($D,$QB);$AC=$this->getMapper();$AC->combine(reset($x),$R,true);$this->setAttrs($D,$R,$A,$QB);return$R;}}use \Cute\ORM\Model;class Column extends Model{protected static$_keys=array('COLUMN_NAME'=>'name','COLUMN_DEFAULT'=>'default','COLUMN_KEY'=>'index','IS_NULLABLE'=>'nullable','COLUMN_TYPE'=>'column','DATA_TYPE'=>'type','CHARACTER_MAXIMUM_LENGTH'=>'length','NUMERIC_PRECISION'=>'precision','NUMERIC_SCALE'=>'scale','DATETIME_PRECISION'=>'datetime',);var$name='';var$default=null;var$index=null;var$nullable='YES';var$column='';var$type='';var$length=null;var$precision=null;var$scale=null;var$datetime=null;static function getTable(){return'COLUMNS';}function __set($UE,$E){if(isset(self::$_keys[$UE])){$A=self::$_keys[$UE];$this->$A=$E;}}function isPrimaryKey(){return$this->index==='PRI';}function isNullable(){return$this->nullable==='YES';}function getCategory(){if(!is_null($this->datetime)){return'datetime';}else if(!is_null($this->precision)){return$this->scale>0?'float':'int';}else if(!is_null($this->length)){return'char';}else{return$this->type;}}}use \Cute\DB\Database;use \Cute\Utility\Inflect;class HasMany extends Relation{protected$foreign_key='';protected$is_unique=false;function __construct($V='',$oD=''){parent::__construct($V);$this->foreign_key=$oD;}function bind(Database&$Q,$L=''){if(empty($this->foreign_key)){$this->foreign_key=Inflect::singularize($L).'_id';}return parent::bind($Q,$L);}function getForeignKey(){return$this->foreign_key;}function relative($A,array&$D){if(empty($D)){return array();}$QB=$this->getForeignKey();$R=$this->getAttrs($D);$AC=$this->getMapper();$AC->combine($QB,$R,$this->is_unique);$P=$this->is_unique?null:array();$this->setAttrs($D,$R,$A,false,$P);return$R;}}use \Cute\ORM\HasMany;class HasOne extends HasMany{protected$is_unique=true;}class ManyToMany extends HasMany{protected$another_foreign_key='';protected$middle_table='';function __construct($V='',$oD='',$pD='',$WG=''){parent::__construct($V,$oD);$this->another_foreign_key=$pD;$this->middle_table=$WG;}function getAnotherForeignKey($A){if(empty($this->another_foreign_key)){$this->another_foreign_key=$A.'_id';}return$this->another_foreign_key;}function relative($A,array&$D){if(empty($D)){return array();}$x=exec_method_array($this->model,'getPKeys');if(empty($x)){return array();}$QB=$this->getForeignKey();$R=$this->getAttrs($D);$AC=$this->getMapper('',$this->middle_table);$AC->combine($QB,$R,false);$UG=$this->getAnotherForeignKey($A);$QD=array();foreach($R as$C=>$E){foreach($E as$MG=>$rC){$g=$rC->$UG;$R[$C][$MG]=$g;$QD[$g]=null;}}$AC=$this->getMapper();$AC->combine(reset($x),$QD,true);foreach($D as&$a){$C=$a->getID();if(!isset($R[$C])){continue;}$lC=array();foreach($R[$C]as$g){$lC[]=&$QD[$g];}$a->$A=$lC;}return$QD;}}use \PDO;use \Cute\DB\Query;class Mapper{protected$db=null;protected$query=null;protected$model='';protected$table='';protected$fetch_style=0;protected$relations=array();protected$nothing=false;function __construct(Database&$Q,$V='',$L=''){$this->db=$Q;$this->table=$L;if($V&&is_object($V)){$V=get_class($V);}$this->setModel($V);}function setModel($V){$this->fetch_style=PDO::FETCH_CLASS;if(empty($V)){$this->model='\\Cute\\ORM\\Model';}else{$this->model=$V;if(method_exists($this->model,'__set')||method_exists($this->model,'__construct')){$this->fetch_style=$this->fetch_style|PDO::FETCH_PROPS_LATE;}if(empty($this->table)){$this->table=exec_method_array($this->model,'getTable');}}return$this;}function getDB(){return$this->db;}function getModel(){return$this->model;}function getQuery(){if(!$this->query){$this->query=new Query($this->getTable());}return$this->query;}function getTable(){return$this->table;}function getTableName($hC=false){$Q=$this->getDB();return$Q->getTableName($this->getTable(),$hC);}function setPage($fC,$JB=1){$JB=intval($JB);if($JB<0&&intval($fC)>0){$_B=intval($this->count());}else{$_B=0;}$this->getQuery()->setPage($fC,$JB,$_B);return$this;}function setNothing($LG=true){$this->nothing=$LG;return$this;}function join($A='*'){$V=exec_construct_array($this->model);$nD=$V->getRelations();if($A==='*'){$this->relations=&$nD;}else{$CG=func_get_args();foreach($CG as$A){if($A&&isset($nD[$A])){$this->relations[$A]=&$nD[$A];}}}return$this;}function all($K='*',$fB=null,$BC='',array&$B=array()){$Q=$this->getDB();if($this->nothing){$D=array();}else{$EB=$this->getQuery();$fB=empty($fB)?$this->fetch_style:$fB;$gC=array($fB,$this->getModel());$D=$EB->select($Q,$K,'fetchAll',$gC,$BC,$B);}if(is_array($D)){$L=$this->getTable();foreach($this->relations as$A=>&$AG){$AG->bind($Q,$L)->relative($A,$D);}return$D;}}function get($ZB,$C=false,$K='*',$N=''){if(empty($C)){$x=exec_method_array($this->getModel(),'getPKeys');if(empty($x)){return;}$C=reset($x);}$this->getQuery()->filter($C,$ZB)->setPage(1,1);$lC=$this->all($K);return count($lC)>0?reset($lC):null;}function combine($QB,array&$D,$EG=false,$K='*'){if(empty($QB)||count($D)===0){return$D;}$Q=$this->getDB();$EB=$this->getQuery();$EB->contain($QB,array_keys($D));if($K==='*'){$N=$this->getTableName(true);$K=sprintf('%s,%s.*',$QB,$N);}$FG=$EG?PDO::FETCH_UNIQUE:PDO::FETCH_GROUP;$fB=$this->fetch_style|$FG;$gC=array($fB,$this->getModel());$D=$EB->select($Q,$K,'fetchAll',$gC);return$D;}function __call($A,$B){$EB=$this->getQuery();if(!method_exists($EB,$A)){array_unshift($B,$A);$A='apply';}if(in_array($A,Query::$db_actions)){$Q=$this->getDB();array_unshift($B,$Q);return exec_method_array($EB,$A,$B);}else{$D=exec_method_array($EB,$A,$B);return($D instanceof Query)?$this:$D;}}}class Model{protected static$_fields=array();static function getTable(){return'';}static function getPKeys(){return array();}function getRelations(){return array();}function getFields(){$L=$this->getTable();if(!isset(self::$_fields[$L])){$RB=get_object_vars($this);foreach($RB as$A=>$P){if(starts_with($A,'_')){unset($RB[$A]);}}self::$_fields[$L]=&$RB;}return self::$_fields[$L];}function getID($FC=0){if($x=$this->getPKeys()){$uB=$x[$FC];return$this->$uB;}}function setID($ZB){if($x=$this->getPKeys()){foreach($x as$FC=>$uB){$this->$uB=func_get_arg($FC);}}return$this;}function isExists(){$ZB=$this->getID();return$ZB!==0&&!is_null($ZB);}}use \Cute\ORM\NestedSet;trait NestedMixin{protected$low_value=0;protected$high_value=0;var$depth=0;var$parent=null;function getRelations(){return array('children'=>new NestedSet(__CLASS__),);}function getLow(){return$this->low_value;}function getHigh(){return$this->high_value;}function isLeaf(){return$this->getHigh()-$this->getLow()===1;}function recur($b){$b($this);foreach($this->children as$jC){$jC->recur($b);}}}class NestedSet extends Relation{function relative($A,array&$D){$EB=$this->getMapper()->orderBy('low_value');if(!empty($D)){$NE=array_pop($D);$B=array($NE->getLow(),$NE->getHigh());$EB->filter('low_value',$B,'BETWEEN ? AND ?');}$N=$EB->getTableName(true);$K=sprintf('low_value,%s.*',$N);$fB=PDO::FETCH_CLASS|PDO::FETCH_UNIQUE;$HD=$EB->all($K,$fB);if(count($HD)===0){return;}$FC=0;$aC=array();$D=reset($HD);foreach($HD as$kC=>&$a){$a->$A=array();if(!$a->isLeaf()){$aC[$kC+1]=$kC;}if(isset($aC[$kC])){$a->parent=&$HD[$aC[$kC]];$a->depth=$a->parent->depth+1;array_push($a->parent->$A,$a);$jE=$a->getHigh();if($jE<$a->parent->getHigh()-1){$aC[$jE+1]=$aC[$kC];}}}return$D;}}use \Cute\ORM\Mapper;abstract class Relation{protected$mapper=null;protected$model='';function __construct($V=''){$this->model=empty($V)?'\\Cute\\ORM\\Model':$V;}function getModel(){return$this->model;}function bind(Database&$Q,$L=''){$this->mapper=new Mapper($Q,$this->model);return$this;}function getMapper($V='',$L=''){if(empty($V)&&empty($L)){return$this->mapper;}else{$Q=$this->mapper->getDB();return new Mapper($Q,$V,$L);}}protected function getAttrs(array&$D,$oC=false){$iE=array();foreach($D as&$a){$C=$oC?$a->$oC:$a->getID();$iE[$C]=null;}return$iE;}protected function setAttrs(array&$D,array&$R,$A,$oC=false,$P=null){foreach($D as&$a){$C=$oC?$a->$oC:$a->getID();if(isset($R[$C])){$a->$A=&$R[$C];}else{$a->$A=$P;}}}abstract function relative($A,array&$D);}}
namespace Cute\Utility{class Binary{use\Cute\Base\Deferring;protected$filename='';protected$fp=null;protected$term_size=0;protected$offset_size=0;protected$index_first=0;protected$index_last=0;protected$index_total=0;function __construct($W='',$kE=0,$YE=0){$this->filename=$W;if($kE>0){$this->term_size=$kE;}if($YE>0){$this->offset_size=$YE;}}function close(){if($this->fp){fclose($this->fp);$this->fp=null;}}function initiate($aG='read'){if(empty($this->filename)){$this->fp=tmpfile();return$this;}if(!file_exists($this->filename)){@mkdir(dirname($this->filename),0755,true);touch($this->filename,0666);}$tG=($aG==='read')?'rb':'wb';$this->fp=fopen($this->filename,$tG);return$this;}function isBOM(){return false;}function isStopNearStart(){return false;}function getIndexSize(){$DB=$this->isStopNearStart()?2:1;return$this->term_size*$DB+$this->offset_size;}function tell(){return ftell($this->fp);}function seek($iB,$jD=SEEK_SET){if($jD===SEEK_SET){$iB=abs($iB);}else if($jD===SEEK_END){$iB=-abs($iB);}$D=fseek($this->fp,$iB,$jD);return$D===0;}function truncate($pG=0){return ftruncate($this->fp,$pG);}function read($O=1){if($O===1){return fgetc($this->fp);}else if($O>1){return fread($this->fp,$O);}}function readString($X=''){while(1){$bD=$this->read();if($bD===false||ord($bD)===0){break;}$X.=$bD;}return$X;}function readHex($O=1){$f=bin2hex($this->read($O));if(!$this->isBOM()&&$O>1){$f=implode('',array_reverse(str_split($f,2)));}return$f;}function readInt($O=4){$F='C';if($O===2){$F=$this->isBOM()?'n':'v';}else if($O===4){$F=$this->isBOM()?'N':'V';}else if($O===8){$F=$this->isBOM()?'J':'P';}$vG=unpack($F.'int',$this->read($O));return$vG['int'];}function readNumber($O=3){$f=$this->readHex($O);return intval($f,16);}function readHeaders(){$this->seek(0);$this->index_first=$this->readInt();$this->index_last=$this->readInt();$O=$this->index_last-$this->index_first;$eB=$this->getIndexSize();if($eB>0){$this->index_total=floor($O/$eB)+1;}return$this->index_total;}function write($H){return fwrite($this->fp,$H);}function writeString($X,$bE=null,$yB=false){$X.=(is_string($bE)?$bE:chr(0));return$yB?$X:$this->write($X);}function writeHex($f,$O=false,$yB=false){if(empty($O)){$O=ceil(strlen($f)/2);}$f=self::padHex($f,$O,'left');if(!$this->isBOM()&&$O>1){$f=implode('',array_reverse(str_split($f,2)));}$XC=@hex2bin($f);return$yB?$XC:$this->write($XC);}function writeInt($H,$O=4,$yB=false){$F='C';if($O===2){$F=$this->isBOM()?'n':'v';}else if($O===4){$F=$this->isBOM()?'N':'V';}else if($O===8){$F=$this->isBOM()?'J':'P';}$XC=pack($F,$H);return$yB?$XC:$this->write($XC);}function writeNumber($H,$O=3,$yB=false){$f=dechex(intval($H));return$this->writeHex($f,$O,$yB);}function writeHeaders($SD=''){$this->seek(0);$this->writeInt($this->index_first);$this->writeInt($this->index_last);if($SD){$this->writeString($SD);}}function writeOffset($iB){return$this->writeNumber($iB,$this->offset_size);}function appendIndexes(Binary&$WC){$this->index_first=$this->tell();$O=$WC->tell();if($O===0){$WC->seek(0,SEEK_END);$O=$WC->tell();}$WC->seek(0);$this->write($WC->read($O));$eB=$this->getIndexSize();$this->index_last=$this->tell()-$eB;return$this->writeNumber($iB,$this->term_size);}function compare($o,$dD,$eB){$this->seek($this->index_first+$o*$eB);$eG=$this->readHex($this->term_size);$this->seek(-$this->term_size,SEEK_CUR);return strcmp($dD,$eG);}static function binSearch(&$a,$T,$dD,$_B,$eB){$TD=0;$kD=$_B;do{$eD=$TD+floor(($kD-$TD)/2);$hD=$a->$T($eD,$dD,$eB);if($hD>0){$TD=$eD;}else if($hD<0){$kD=$eD;}else{break;}}while($kD-$TD>1);return$hD;}static function padHex($f,$O,$AD='left'){if(is_int($f)){$f=dechex($f);}$gG=(strtolower($AD)==='left')?STR_PAD_LEFT:STR_PAD_RIGHT;return str_pad($f,$O*2,'0',$gG);}}use \DateTime;use \DateTimeZone;class Calendar extends DateTime{protected$timestamp=0;function __construct($yD='now',$WB=null){if(is_null($WB)&&$P=constant('DEFAULT_TIMEZONE')){$WB=new DateTimeZone($P);}if(is_numeric($yD)){parent::__construct('now',$WB);$this->setTimestamp($yD);}else{parent::__construct($yD,$WB);}}function format($cE='Y-m-d H:i:s'){$D=parent::format($cE);if(strpos($cE,'星期w')!==false){$zF=array('星期0'=>'星期日','星期1'=>'星期一','星期2'=>'星期二','星期3'=>'星期三','星期4'=>'星期四','星期5'=>'星期五','星期6'=>'星期六');$D=strtr($D,$zF);}return$D;}function thisMonthBegin(){return new self($this->format('Y-m-01'));}function thisMonthEnd(){return new self($this->format('Y-m-01').' +1 month -1 day');}function nextMonthBegin(){return new self($this->format('Y-m-01').' +1 month');}static function parseDurtion($OB){if(empty($OB)){return 0;}if(is_int($OB)||is_float($OB)){return$OB;}if(is_string($OB)){$fE=strtolower(substr($OB,-1));if(is_numeric($fE)){return floatval($OB);}$OB=trim(substr($OB,0,-1));$FB=1;switch($fE){case'w':$FB*=7;case'd':$FB*=24;case'h':$FB*=60;case'm':$FB*=60;}return floatval($OB)*$FB;}}static function getSpringDay($nB){static$lE=array('20'=>4.6295,'21'=>3.87,'22'=>4.15);$nB=intval($nB);$eE=strval(ceil($nB/100));$dE=$nB%100;$NF=array_key_exists($eE,$lE)?$lE[$eE]:4;return floor($dE*0.2422+$NF)-floor(($dE-1)/4);}function getBirthAnimalIndex(){$nB=intval($this->format('Y'));$OD=intval($this->format('m'));$AE=intval($this->format('d'));$_D=$OD*100+$AE;if($_D<200+self::getSpringDay($nB)){$nB-=1;}$g=($nB-1900)%12;return$g;}function getHoroscopeIndex(){$LF=array(120,219,321,420,521,622,723,823,923,1024,1123,1222,);$OD=intval($this->format('m'));$AE=intval($this->format('d'));$_D=$OD*100+$AE;$g=$OD-1;if($_D<$LF[$g]){$g=($g==0)?11:$g-1;}return$g;}}class Inflect{protected static$plural=array('/(quiz)$/i'=>"$1zes",'/^(ox)$/i'=>"$1en",'/([m|l])ouse$/i'=>"$1ice",'/(matr|vert|ind)ix|ex$/i'=>"$1ices",'/(x|ch|ss|sh)$/i'=>"$1es",'/([^aeiouy]|qu)y$/i'=>"$1ies",'/(hive)$/i'=>"$1s",'/(?:([^f])fe|([lr])f)$/i'=>"$1$2ves",'/(shea|lea|loa|thie)f$/i'=>"$1ves",'/sis$/i'=>"ses",'/([ti])um$/i'=>"$1a",'/(tomat|potat|ech|her|vet)o$/i'=>"$1oes",'/(bu)s$/i'=>"$1ses",'/(alias)$/i'=>"$1es",'/(octop)us$/i'=>"$1i",'/(ax|test)is$/i'=>"$1es",'/(us)$/i'=>"$1es",'/s$/i'=>"s",'/$/'=>"s");protected static$singular=array('/(quiz)zes$/i'=>"$1",'/(matr)ices$/i'=>"$1ix",'/(vert|ind)ices$/i'=>"$1ex",'/^(ox)en$/i'=>"$1",'/(alias)es$/i'=>"$1",'/(octop|vir)i$/i'=>"$1us",'/(cris|ax|test)es$/i'=>"$1is",'/(shoe)s$/i'=>"$1",'/(o)es$/i'=>"$1",'/(bus)es$/i'=>"$1",'/([m|l])ice$/i'=>"$1ouse",'/(x|ch|ss|sh)es$/i'=>"$1",'/(m)ovies$/i'=>"$1ovie",'/(s)eries$/i'=>"$1eries",'/([^aeiouy]|qu)ies$/i'=>"$1y",'/([lr])ves$/i'=>"$1f",'/(tive)s$/i'=>"$1",'/(hive)s$/i'=>"$1",'/(li|wi|kni)ves$/i'=>"$1fe",'/(shea|loa|lea|thie)ves$/i'=>"$1f",'/(^analy)ses$/i'=>"$1sis",'/((a)naly|(b)a|(d)iagno|(p)arenthe|(p)rogno|(s)ynop|(t)he)ses$/i'=>"$1$2sis",'/([ti])a$/i'=>"$1um",'/(n)ews$/i'=>"$1ews",'/(h|bl)ouses$/i'=>"$1ouse",'/(corpse)s$/i'=>"$1",'/(us)es$/i'=>"$1",'/s$/i'=>"");protected static$irregular=array('move'=>'moves','foot'=>'feet','goose'=>'geese','sex'=>'sexes','child'=>'children','man'=>'men','tooth'=>'teeth','person'=>'people');protected static$uncountable=array('sheep','fish','deer','series','species','money','rice','information','equipment');protected static$abbreviations=array('AD','API','B2B','B2C','C2C','CEO','CFO','COO','CTO','DB','DSA','GEO','GPS','HTML','HTTP','ID','IO','IP','IQ','MD5','MTV','MV','MVC','NBA','OK','P2P','PC','PV','PDF','PHP','QQ','RMB','RSA','SOHO','SHA','SQL','TV','UI','URI','URL','USA','VIP','WC','WEB','WAP','WIFI','XML',);static function pluralize($X){if(in_array(strtolower($X),self::$uncountable))return$X;foreach(self::$irregular as$j=>$D){$j='/'.$j.'$/i';if(preg_match($j,$X))return preg_replace($j,$D,$X);}foreach(self::$plural as$j=>$D){if(preg_match($j,$X))return preg_replace($j,$D,$X);}return$X;}static function singularize($X){if(in_array(strtolower($X),self::$uncountable))return$X;foreach(self::$irregular as$D=>$j){$j='/'.$j.'$/i';if(preg_match($j,$X))return preg_replace($j,$D,$X);}foreach(self::$singular as$j=>$D){if(preg_match($j,$X))return preg_replace($j,$D,$X);}return$X;}static function pluralizeIf($DB,$X){if($DB==1)return"1 $X";else return$DB." ".self::pluralize($X);}static function camelize($X,$QF=false){$ZC=explode('_',$X);if($QF){$aE=count($ZC)-1;$ZC[$aE]=self::pluralize($ZC[$aE]);}foreach($ZC as&$m){$m=ucfirst($m);if(strlen($m)>1&&strlen($m)<=4){$gE=strtoupper($m);if(in_array($gE,self::$abbreviations)){$m=$gE;}}}return implode('',$ZC);}static function flatten($X,$JF='_'){$j='/([A-Z][A-Z0-9]*(?=$|[A-Z][a-z0-9])|[A-Za-z][a-z0-9]+)/';preg_match_all($j,$X,$VB);return strtolower(implode($JF,$VB[0]));}}class Polling{protected$channels=array();function __construct(array$RF=array()){$this->channels=$RF;}function randRoll(){static$g=0;if($g===0){shuffle($this->channels);$g=count($this->channels);}return$this->channels[--$g];}function roundRobin(&$JD,$WF=1){if(count($this->channels)<2){return current($this->channels);}$ID=null;$mE=0;$FE=0;foreach($this->channels as$ZB=>$h){$KC=$h['weight']*$WF;$FE+=$KC;$h['last_value']+=$KC;if(empty($JD)&&$h['last_value']>=$mE){$ID=$ZB;$mE=$h['last_value'];}}if(!empty($JD)){$this->channels[$JD]['last_value']-=$FE;return$this->channels[$JD];}else if(!is_null($ID)){$this->channels[$ID]['last_value']-=$FE;return$this->channels[$ID];}}}class Word{protected$content='';function __construct($e=''){$this->content=$e;}static function randHash($Z=6){$Z=$Z>32?32:$Z;$BF=md5(mt_rand().time());$EF=substr($BF,0,$Z);return$EF;}static function randString($Z=6,$IF=2,$YC=''){if(empty($YC)){$YC='abcdefghijkmnpqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ23456789';}srand((float)microtime()*1000000);$PE='';$KD=ceil($Z/$IF);while($Z>0){$YC=str_shuffle($YC);$PE.=substr($YC,0,$KD);$Z-=$KD;$KD=min($Z,$KD);}return$PE;}function hasNonASCII(){return preg_match('/[^\x20-\x7f]/',$this->content);}function fetchFirstURL(){if(preg_match('/^http[^\x23-\x76]/i',$this->content,$VB)){return$VB[1];}}function getNumbers($TF=true){$FB=preg_match_all('/[\d.]+/',$this->content,$VB);if($FB===0||$FB===false){return false;}$RE=implode(current($VB));return$TF?intval($RE):$RE;}function ver2int(){$SD=$this->getNumbers(false);$EE=array_map('intval',explode('.',$SD));$EE=array_pad($EE,3,0);return intval(vsprintf('%d%02d%02d',$EE));}}}
namespace Cute\View{class Compiler{protected$env=null;protected$source_dir='';protected$compiled_dir='';function __construct(){\app()->import('Twig',VENDOR_ROOT.'/Twig/lib');$this->env=new\Twig_Environment();}function addFunction($A,$pF=null){$XF=new\Twig_SimpleFunction($A,$pF);return$this->env->addFunction($A,$XF);}function setSourceDir($VC){$this->source_dir=rtrim($VC,' /\\');if(!file_exists($this->source_dir)){@mkdir($this->source_dir,0777,true);}$nF=new\Twig_Loader_Filesystem(array($this->source_dir));$this->env->setLoader($nF);return$this;}function setCompiledDir($n){$n=rtrim($n,' /\\');if($this->compiled_dir!==$n){$this->compiled_dir=$n;}if(!file_exists($this->compiled_dir)){@mkdir($this->compiled_dir,0777,true);}return$this;}function isSourceRelational(){return true;}function compileFile($xB,$TC,array$S=array()){$e=$this->env->loadTemplate($xB)->render($S);file_put_contents($TC,$e,LOCK_EX);}function compileTpl($p,$xB='',array$S=array()){$p=ltrim(str_replace('\\','/',$p),'/');if(empty($xB)){$xB=$this->source_dir.'/'.$p;}$TC=$this->compiled_dir.'/'.$p;$n=dirname($TC);if(!is_dir($n)){mkdir($n,0777,true);}if($this->isSourceRelational()){$xB=substr($xB,strlen($this->source_dir)+1);}$this->compileFile($xB,$TC,$S);return$TC;}function compileAll($U=false,array$S=array()){if(is_null($U)||$U===false){$U=$this->source_dir;}else{$U=rtrim(str_replace('\\','/',$U),'/');}$DB=0;$vF=scandir($U);foreach($vF as$jC){if($jC==='.'||$jC==='..'){continue;}$LD=$U.'/'.$jC;if(is_dir($LD)){$this->compileAll($LD);}else{$p=substr($LD,strlen($this->source_dir));$this->compileTpl($p,$LD,$S);$DB++;}}return$DB;}}use \Cute\View\Compiler;class Templater{var$compiler=null;var$globals=array();protected$source_dir='';protected$extend_files=array();protected$template_blocks=array();protected$current_block='';function __construct($VC,$n=false){$this->setSourceDir($VC);if($n){$this->setCompileDir($n);}}static function replaceWith($e,array$S=array(),$w='',$VE=''){if(empty($S)){return$e;}if(empty($w)&&empty($VE)){$KE=&$S;}else{$KE=array();foreach($S as$C=>&$E){$KE[$w.$C.$VE]=$E;}}$e=strtr($e,$KE);return$e;}function setSourceDir($VC){$this->source_dir=rtrim($VC,' /\\');if(!file_exists($this->source_dir)){@mkdir($this->source_dir,0777,true);}}function setCompileDir($n){if(is_null($this->compiler)){$this->compiler=new Compiler();}$n=rtrim($n,' /\\');$this->compiler->setSourceDir($this->source_dir);$this->compiler->setCompiledDir($n);$this->setSourceDir($n);return$this;}function updateGlobals(array$kF){if(func_num_args()===1){$this->globals=array_merge($this->globals,$kF);}else{$B=func_get_args();array_unshift($B,$this->globals);$this->globals=exec_function_array('array_merge',$B);}return$this;}function updateFunctions(array$cF){$bF=$this->compiler;foreach($cF as$A=>$b){$bF->addFunction($A,$b);}}function prepareFile($p){if($this->compiler){return$this->compiler->compileTpl($p,'',$this->globals);}else{return$this->source_dir.'/'.$p;}}function render($p,array$S=array()){extract($this->globals);extract($S);include$this->prepareFile($p);if(!empty($this->extend_files)){$aF=array_pop($this->extend_files);foreach($this->extend_files as$y){include$this->prepareFile($y);}extract($this->template_blocks);include$this->prepareFile($aF);}}function extendTpl($p){array_push($this->extend_files,$p);}function includeTpl($p,array$S=array()){extract($this->globals);extract($S);ob_start();include$this->prepareFile($p);$YF=trim(ob_get_clean());echo$YF;}function blockStart($ZF='content'){$this->current_block=$ZF;ob_start();}function blockEnd(){$dF=trim(ob_get_clean());$this->template_blocks[$this->current_block]=$dF;}}}
namespace Cute\Widget{use \Cute\Utility\Word;class Captcha{const ENCRYPT_SALT='captcha_code_salt';const FILENAME_PREFIX='cc_';var$phrase_size=6;var$width=80;var$height=30;var$font=null;var$finger_print=null;protected$builder=null;protected$savedir='';protected$saveurl='';function __construct($i=''){\app()->import('Gregwar',VENDOR_ROOT);$this->builder=new\Gregwar\Captcha\CaptchaBuilder();if(!empty($i)){$this->phrase_size=strlen($i);$this->builder->setPhrase($i);}else{$this->refresh();}$this->savedir=APP_ROOT.'/public/assets/captcha';@mkdir($this->savedir,0755,true);$this->saveurl=app()->getAssetURL().'/captcha';}static function newInstance($eF=6,$jF=80,$iF=30,$hF=null,$fF=null){$hB=new self();$hB->phrase_size=$eF;$hB->width=$jF;$hB->height=$iF;$hB->font=$hF;$hB->finger_print=$fF;return$hB;}protected static function encrypt($i){return md5(strtolower($i).self::ENCRYPT_SALT);}static function clean($U,$JE=0.3,$PB=60){$gF=mt_rand(1,10000)/10000;if($JE<=0||$JE>=1||$gF<=$JE){$lG=time()-$PB;$XD=glob($U.'cc_*.jpg');foreach($XD as$y){if(fileatime($y)<$lG){unlink($y);}}}}function refresh(){$i=Word::randString($this->phrase_size);$this->builder->setPhrase($i);return$this;}function build(array$B=array()){$rF=array($this->width,$this->height,$this->font,$this->finger_print,);exec_method_array($this->builder,'build',$B+$rF);return$this->builder;}function show(){@session_start();$i=$this->builder->getPhrase();$_SESSION['phrase']=self::encrypt($i);@header('Content-Type: image/jpeg');$this->build(func_get_args());return$this->builder->output();}function save(){self::clean($this->savedir,0.3,60);$W=uniqid(self::FILENAME_PREFIX).'.jpg';$this->build(func_get_args());$this->builder->save($this->savedir.'/'.$W);$i=$this->builder->getPhrase();$l=$this->saveurl.'/'.$W.'#'.self::encrypt($i);die($l);}}use \Cute\Cache\Subject;class Counter extends Subject{protected$name='';protected$value=0;protected$maxium=0;function __construct($A,$E=0,$fG=0){$this->name=$A;$this->value=intval($E);$this->maxium=intval($fG);}function setCache($I='\\Cute\\Cache\\RedisCache'){$MD=new$I($this->name);$MD->share($this->value,'intval');$MD->initiate()->readData();$this->attach($MD);return$MD;}function findCaches(){return$this->observers;}function increase($HG=1){$this->value+=$HG;if($this->maxium>0){$this->value=$this->value%$this->maxium;}$this->notify();return$this->value;}}}