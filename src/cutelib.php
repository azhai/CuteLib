<?php
namespace{defined('VENDOR_ROOT')or define('VENDOR_ROOT',APP_ROOT.'/vendor');defined('APP_CLASS')or define('APP_CLASS','\\Cute\\Website');defined('SQL_VERBOSE')or define('SQL_VERBOSE',true);defined('ERROR_LEVEL')or define('ERROR_LEVEL',E_ALL&~E_DEPRECATED&~E_NOTICE);@error_reporting(ERROR_LEVEL);set_error_handler(function($xG,$QG,$RG,$PG,array$MH){if(0===error_reporting()){return false;}throw new ErrorException($QG,0,$xG,$RG,$PG);},E_WARNING|E_CORE_WARNING|E_COMPILE_WARNING);if(!class_exists('\\Cute\\Importer')){require_once SRC_ROOT.'/Cute/Importer.php';}function app($DF=''){static$r=null;if(is_null($r)&&$DF){$EF=\Cute\Importer::getInstance();$EF->addNamespace('Cute',SRC_ROOT);$IC=\Cute\Base\Storage::newInstance($DF);$I=constant('APP_CLASS');$r=new$I($IC);$r->install($EF,array('import'=>'addNamespace'));$r->initiate();}return$r;}function starts_with($LD,$vC){return strncmp($LD,$vC,strlen($vC))===0;}function ends_with($LD,$vC){$fD=strlen($vC);return$fD===0||(strlen($LD)>=$fD&&substr_compare($LD,$vC,-$fD)===0);}function convert($n,$EC='UTF-8'){$EC=strtoupper($EC);if(function_exists('mb_detect_encoding')){return mb_detect_encoding($n,$EC,true)?$n:mb_convert_encoding($n,$EC,'UTF-8, GBK');}else if(function_exists('iconv')){$OG=$EC==='UTF-8'?'GBK':'UTF-8';return iconv($OG,$EC.'//IGNORE',$n);}}function b64decode($n){if(preg_match('!([A-Za-z0-9+/= ]+)!',$n,$XB)){$n=$XB[1];}return base64_decode($n);}function exec_function_array($a,array$B=array()){switch(count($B)){case 0:return$a();case 1:return$a($B[0]);case 2:return$a($B[0],$B[1]);case 3:return$a($B[0],$B[1],$B[2]);case 4:return$a($B[0],$B[1],$B[2],$B[3]);case 5:return$a($B[0],$B[1],$B[2],$B[3],$B[4]);default:if(is_object($a)){$MB=new ReflectionMethod($a,'__invoke');return$MB->invokeArgs($a,$B);}else if(is_callable($a)){$MB=new ReflectionFunction($a);return$MB->invokeArgs($B);}}}function exec_method_array($PB,$U,array$B=array()){if(is_object($PB)){switch(count($B)){case 0:return$PB->{$U}();case 1:return$PB->{$U}($B[0]);case 2:return$PB->{$U}($B[0],$B[1]);case 3:return$PB->{$U}($B[0],$B[1],$B[2]);case 4:return$PB->{$U}($B[0],$B[1],$B[2],$B[3]);case 5:return$PB->{$U}($B[0],$B[1],$B[2],$B[3],$B[4]);}}if(method_exists($PB,$U)){$MB=new ReflectionMethod($PB,$U);if($MB->isPublic()&&!$MB->isAbstract()){if($MB->isStatic()){return$MB->invokeArgs(null,$B);}else{return$MB->invokeArgs($PB,$B);}}}}function exec_construct_array($I,array$B=array()){switch(count($B)){case 0:return new$I();case 1:return new$I($B[0]);case 2:return new$I($B[0],$B[1]);case 3:return new$I($B[0],$B[1],$B[2]);case 4:return new$I($B[0],$B[1],$B[2],$B[3]);case 5:return new$I($B[0],$B[1],$B[2],$B[3],$B[4]);default:if(class_exists($I)){$MB=new ReflectionClass($I);return$MB->newInstanceArgs($B);}}}}
namespace Cute{use \Cute\Importer;use \Cute\Factory;use \Cute\Base\Storage;abstract class Application{protected$shortcuts=array();function __construct(Storage&$IC){$this->install($IC,array('getConfig'));$LG=new Factory($IC);$this->install($LG,array('load'));}function initiate(){return$this;}function install($rD,array$MG){foreach($MG as$PD=>$U){$PD=strtolower(is_numeric($PD)?$U:$PD);$this->shortcuts[$PD]=array($rD,$U);}return$this;}function __call($A,$B){$A=strtolower($A);if(isset($this->shortcuts[$A])){list($rD,$U)=$this->shortcuts[$A];return exec_method_array($rD,$U,$B);}}abstract function run();}abstract class Command{protected$app=null;protected$args=array();protected$pid=0;var$cmdfile='';function __construct($r,$nD,array$mB=array()){$this->app=$r;$this->cmdfile=$nD;list($B,$SB)=self::parse($mB);$this->args=array_merge($B,$SB);}function __clone(){$this->args=array_change_key_case($this->args);}function __toString(){$B=array();foreach($this->args as$C=>$E){if(is_numeric($C)){$B[]=$E;}else if($E===true){$B[]=strlen($C)===1?" -$C":" --$C";}else{$B[]=" --$C='$E'";}}$pB=$this->cmdfile;$pB.=' '.substr(__CLASS__,0,-strlen('Command'));$pB.=' '.implode(' ',$B);return$pB;}static function parse(array$mB){$B=array();$SB=array();foreach($mB as$FC=>$LB){$LB=trim($LB);if($LB==='--'){$B[]=implode(' ',array_slice($mB,$FC+1));break;}if(substr($LB,0,1)!=='-'){$B[]=$LB;}else if(substr($LB,1,1)!=='-'){$tC=str_split(substr($LB,1));foreach($tC as$C){$SB[$C]=true;}}else{if(($pE=strpos($LB,'='))!==false){$C=substr($LB,2,$pE-2);$E=substr($LB,$pE+1);}else{$C=substr($LB,2);$E=true;}if(!array_key_exists($C,$SB)){$SB[$C]=$E;}else{if(!is_array($SB[$C])){$SB[$C]=array($SB[$C]);}$SB[$C][]=$E;}}}return array($B,$SB);}function addArg($E,$C=false){if($C===false||is_null($C)){$this->args[]=$E;}else{$this->args[$C]=$E;}return$this;}function getArg($C=false,$P=null){if($C===false||is_null($C)){return$this->args;}if(isset($this->args[$C])){return$this->args[$C];}else{return$P;}}function popArg($C){if($C===false||is_null($C)){return;}if(isset($this->args[$C])){$E=$this->args[$C];unset($this->args[$C]);return$E;}}function readPid($HC=null){if(!is_null($HC)&&is_readable($HC)){$rB=trim(file_get_contents($HC));if(is_numeric($rB)){$this->pid=$rB;}}return$this->pid;}function isRunning(){if($this->pid>0){try{$D=shell_exec(sprintf('ps %d',$this->pid));return substr_count($D,"\n")>=2;}catch(\Exception$_){}}return false;}function wait($NG=0.1){while($this->isRunning()){usleep($NG*1000000);}return true;}function stop(){if($this->pid>0&&$this->isRunning()){return posix_kill($this->pid,SIGTERM);}}function fork($HC=null,array$sC=array()){$LC=clone$this;$LC->args=array_merge($LC->args,$sC);$pB=strval($LC);$r=$LC->app;if($r->outfile!==1){$pB.=' > '.$r->getFileSymbol($r->outfile,true);}if($r->errfile!==2){$pB.=' 2 > '.$r->getFileSymbol($r->errfile,true);}if($rB=shell_exec($pB.' & echo $!')){$rB=trim($rB);$LC->pid=intval($rB);if(!is_null($HC)){file_put_contents($HC,$rB.PHP_EOL,LOCK_EX);}}return$LC->pid;}function loop($DB=1,$uC=0,$nE=0){if($uC>0){$uC=intval($uC)+time();}do{$this->execute();if($DB>0){$DB--;}if($nE>0){usleep($nE*1000000);}}while($DB===0||$uC<0||$uC<time());}abstract function execute();}use \Cute\Application;use \Cute\Command;use \Cute\Utility\Inflect;class Console extends Application{const STDIN='php://stdin';const STDOUT='php://stdout';const STDERR='php://stderr';const DEVNULL='/dev/null';const COLOR_BLACK=90;const COLOR_RED=91;const COLOR_GREEN=92;const COLOR_YELLOW=93;const COLOR_BLUE=94;const COLOR_MAGENTA=95;const COLOR_CYAN=96;const COLOR_WHITE=97;protected$color=false;var$outfile=1;var$errfile=null;function initiate(){return$this;}static function getFileSymbol($AB,$mD=false){if(is_null($AB)){return self::DEVNULL;}else if(is_int($AB)){if($AB===0){return$mD?'&0':self::STDIN;}else if($AB===1){return$mD?'&1':self::STDOUT;}else if($AB===2){return$mD?'&2':self::STDERR;}}return strval($AB);}static function appendTo($RB,$vB=false,$RC=null){if(empty($RC)&&$RC!==0){return 0;}if(is_int($RC)&&is_int($vB)){$RB=sprintf("\033[%dm%s\033[%dm",$vB,$RB,0);}$RC=self::getFileSymbol($RC);return file_put_contents($RC,$RB,FILE_APPEND|LOCK_EX);}function setColor($vB){if(is_string($vB)){$vB='COLOR_'.strtoupper($vB);$this->color=constant(__CLASS__.'::'.$vB);}return$this;}function write($RB){$RB=strval($RB);if(func_num_args()>1){$B=array_slice(func_get_args(),1);$RB=vsprintf($RB,$B);}return self::appendTo($RB,$this->color,$this->outfile);}function writeln($RB){$B=func_get_args();$B[0].=PHP_EOL;return exec_method_array($this,'write',$B);}function mount($b){$rE=func_get_args();foreach($rE as&$b){$b=rtrim($b,DIRECTORY_SEPARATOR);}$yD=PATH_SEPARATOR.implode(PATH_SEPARATOR,$rE);set_include_path(get_include_path().$yD);return$this;}function run(){if(php_sapi_name()!=='cli'){return;}if($_SERVER['argc']<2){return;}$mB=$_SERVER['argv'];$nD=array_shift($mB);$A=array_shift($mB);$I=Inflect::camelize($A).'Command';@require_once$I.'.php';if(class_exists($I)){$c=new$I($this,$nD,$mB);return$c->execute();}}}class Factory{protected$storage=null;protected$objects=array();function __construct(Storage&$IC){$this->storage=$IC;}function normalize($I){return rtrim($I,'\\');}function create($I,$A='default'){$I=$this->normalize($I);$RD=$this->storage->getSectionOnce($I);$H=$RD->getArray($A);if($A!=='default'){$H=array_merge($RD->getArray('default'),$H);}if(class_exists($I)){foreach($H as$C=>&$E){if(starts_with($C,'\\')){$E=$this->load($C,$E);}}return exec_construct_array($I,array_values($H));}}function load($I,$A='default'){$I=$this->normalize($I);if(!isset($this->objects[$I])){$this->objects[$I]=array();if(!isset($this->objects[$I][$A])){$this->objects[$I][$A]=$this->create($I,$A);}}return$this->objects[$I][$A];}}class Handler{protected$app=null;protected$succor=null;function __construct($PC=null){$this->app=app();$this->succor=$PC;}function init($U){return method_exists($this,$U)?$U:'';}function __invoke(){$U=$this->app->getMethod();$B=func_get_args();if($U=$this->init($U)){return exec_method_array($this,$U,$B);}else if($this->succor){return exec_function_array($this->succor,$B);}else{return$this->app->abort(403);}}}if(!function_exists('trait_exists')){function trait_exists($I,$UD){return false;}}final class Importer{private static$instance=null;private$classes=array();private$namespaces=array();private function __construct(){}static function getInstance(){if(is_null(self::$instance)){self::$instance=new self();self::$instance->register();}return self::$instance;}static function exists($I,$UD=true){return class_exists($I,$UD)||interface_exists($I,$UD)||trait_exists($I,$UD);}function autoload($I){$I=trim($I,'\\_');if(isset($this->classes[$I])){require_once$this->classes[$I];return self::exists($I,false);}$SG=$this->checkNamespace($I);return($SG===true);}function register(){return spl_autoload_register(array($this,'autoload'));}function addClass($X,$I){$uE=func_get_args();$X=array_shift($uE);if(is_readable($X)){foreach($uE as$I){$this->classes[trim($I,'\\')]=$X;}}ksort($this->classes);return$this;}function addNamespaceStrip($u,$V){$u=trim($u,'\\');$V=rtrim($V,'\\/');$this->namespaces[$u]=$V;ksort($this->namespaces);return$this;}function addNamespace($u,$V){$u=trim($u,'\\');$iB=strtok($u,'\\_');$V=rtrim($V,'\\/').DIRECTORY_SEPARATOR.$iB;return$this->addNamespaceStrip($u,$V);}function checkNamespace($I){$iB=strtok($I,'\\_');$Y=strlen($iB)+1;if(isset($this->namespaces[$iB])){$b=$this->namespaces[$iB];}else if(isset($this->namespaces[''])){$b=$this->namespaces[''];}else{return false;}$IB=$b.DIRECTORY_SEPARATOR;$IB.=str_replace(array('\\','_'),DIRECTORY_SEPARATOR,substr($I,$Y));if(file_exists($IB.'.php')){require_once$IB.'.php';if(self::exists($I,false)){return true;}}while($iB){$b.=DIRECTORY_SEPARATOR.$iB;if(file_exists($b.'.php')){require_once$b.'.php';if(self::exists($I,false)){return true;}}if(!file_exists($b)){return false;}$iB=strtok('\\_');}}}use \Cute\Context\Router;use \Cute\Context\SessionHandler;class Website extends Application{protected$method='';var$url='';var$rule='';function initiate(){$CC=Router::getCurrent();$this->install($CC,array('dispatch','abort','redirect'));$this->install('\\Cute\\Context\\Input',array('getClientIP','input'=>'getInstance',));$TG=new SessionHandler();$this->install($TG,array('setExpire','share','update'));return$this;}function route($b,$GB){$CC=Router::getCurrent();return$CC->route($b,$GB);}function mount($FB,$wC='*.php'){$CC=Router::getCurrent();$CC->mount($FB,$wC);return$this;}function getMethod(){if(empty($this->method)){$xB=$this->input('SERVER');$U=$xB->request('_method','');if(empty($U)){$U=$xB->get('REQUEST_METHOD','GET');}$this->method=strtolower($U);}return$this->method;}function run(){$ZG=$this->getConfig('route_key','r');$b=$this->input('GET')->get($ZG,'/');try{$KD=$this->dispatch($b);$PC=null;foreach($KD['handlers']as$GB){if(empty($GB)){continue;}if(is_string($GB)&&class_exists($GB,true)){$GB=new$GB($PC);}if($GB&&is_callable($GB)){$PC=&$GB;}}if($PC){$this->url=$KD['url'];$this->rule=$KD['rule'];$tE=exec_function_array($PC,$KD['args']);}}catch(\Exception$_){$tE=strval($_);}return die($tE);}}}
namespace Cute\Base{trait Deferring{protected$closed=false;function defer(){register_shutdown_function(function($aG){$aG->__destruct();},$this);}function __destruct(){if($this->closed===false){$this->close();}$this->closed=true;}function close(){}}use \Cute\Context\Input;defined('IP_ECHO_URL')or define('IP_ECHO_URL','http://ipecho.net/plain');class IP{const BYTE_IP_V4=4;const BYTE_IP_V6=6;protected$ipaddr='';function __construct($BB=false){$this->ipaddr=$BB?:self::getClientIP();}function __toString(){return$this->ipaddr;}static function toHex($BB){return sprintf('%08x',ip2long($BB));}static function getClientIP(){return Input::getClientIP();;}static function getServerIP(){if($BB=file_get_contents(IP_ECHO_URL)){return trim($BB);}}static function getHostIP($qC,$RE=array()){$GF=dns_get_record($qC,DNS_A,$OH,$QH);if($GF&&$BB=$GF[0]['ip']){return$BB;}else if($RE){return$RE[array_rand($RE)];}}}class Mocking{protected$inner=null;private function __construct(&$CE=null){$this->inner=$CE;}static function mock(&$CE=null){$BE=new self($CE);return$BE->isReady()?$BE->inner:$BE;}function __call($A,$_D){return false;}function __set($A,$E){return false;}function __get($A){return;}function isReady(){return!is_null($this->inner);}}use \ArrayObject;class Storage extends ArrayObject{const CONFIG_SECTION_NAME='configs';function __construct($xB=array(),$YG=ArrayObject::ARRAY_AS_PROPS){parent::__construct($xB,$YG);}static function newInstance($X,$AF=false){$X.=empty($AF)?'':$AF;assert(is_readable($X));return new self(include$X);}function getItem($A,$P=null){$ZB=@$this->offsetGet($A);return is_null($ZB)?$P:$ZB;}function getArray($A,array$P=array()){$H=$this->getItem($A);return is_array($H)?$H:$P;}function getSection($A){$H=$this->getArray($A,array());return new self($H);}function getSectionOnce($A){$H=$this->getItem($A);if(!($H instanceof self)){$H=new self($H);$this->offsetSet($A,$H);}return$H;}function getConfig($A,$P=null){$RD=$this->getSectionOnce(self::CONFIG_SECTION_NAME);return$RD->getItem($A,$P);}}}
namespace Cute\Cache{use \SplSubject;use \SplObserver;abstract class BaseCache implements SplObserver{protected$data=null;protected$ttl=0;protected$coerce=false;function setExpire($FE){$this->ttl=intval($FE);return$this;}function share(&$H,$GE=false,$FE=0){$this->data=&$H;$this->coerce=$GE;$this->ttl=intval($FE);return$this;}function update(SplSubject$PH=null){if($GE=$this->coerce){$this->data=$GE($this->data);}$this->writeData();}abstract function initiate();abstract function readData();abstract function removeData();abstract function writeData($lC=false);}class FileCache extends BaseCache{protected$filename='';protected$ext='.php';function __construct($A,$V=false){if(empty($V)){$V=sys_get_temp_dir();}else{$V=rtrim($V,DIRECTORY_SEPARATOR);@mkdir($V,0755,true);}$this->filename=$V.DIRECTORY_SEPARATOR.$A.$this->ext;}function initiate(){if(!is_readable($this->filename)){touch($this->filename);}return$this;}function readData(){$N=filesize($this->filename);if($N>0){$this->data=(include$this->filename);}return$this->data;}function writeData($lC=false){$d="<?php \nreturn ".var_export($this->data,true).";\n";$N=file_put_contents($this->filename,$d);return$N&&$N>0;}function removeData(){if(file_exists($this->filename)){return unlink($this->filename);}}}class MemCache extends BaseCache{use\Cute\Base\Deferring;const MEMCACHE_WEIGHT_UNIT=12;protected$name='';protected$memcache=null;protected$host='';protected$port=0;protected$persistent=false;protected$weight=1;function __construct($A,$y='127.0.0.1',$k=11211,$XG=false,$MC=1){$this->name=$A;$this->host=$y;$this->port=intval($k);$this->persistent=$XG;$this->weight=intval($MC);}function initiate(){if(extension_loaded('memcache')){$this->memcache=new\Memcache();try{$this->connect();}catch(\Exception$_){$this->memcache=null;}}return$this;}function connect(){$MC=intval($this->weight)*self::MEMCACHE_WEIGHT_UNIT;$this->memcache->addServer($this->host,$this->port,$this->persistent,$MC);}function close(){$this->memcache->close();}function readData(){$H=$this->memcache->get($this->name);if($H!==false){return$H;}}function writeData($lC=false){return$this->memcache->set($this->name,$this->data,MEMCACHE_COMPRESSED,$this->ttl);}function removeData(){if($this->memcache->exists($this->name)){return$this->memcache->delete($this->name);}}}class RedisCache extends BaseCache{use\Cute\Base\Deferring;protected$name='';protected$redis=null;protected$host='';protected$port=0;protected$params=array('persistent'=>false,'socket'=>null,'serializer'=>null,);function __construct($A,$y='127.0.0.1',$k=6379,array$M=array()){$this->name=$A;$this->host=$y;$this->port=intval($k);if(isset($M['socket'])&&is_string($M['socket'])){if(starts_with($M['socket'],'unix://')){$M['socket']=substr($M['socket'],7);}}$this->params=array_merge($this->params,$M);}function initiate(){if(extension_loaded('redis')){$this->redis=new\Redis();try{$this->connect();}catch(\Exception$_){$this->redis=null;}}return$this;}function connect(){if(isset($this->params['socket'])){$B=array($this->params['socket']);}else{$B=array($this->host,$this->port);}$UG=$this->params['persistent']?'pconnect':'connect';exec_method_array($this->redis,$UG,$B);if($JE=$this->params['serializer']){$JE=constant('\\Redis::SERIALIZER_'.$JE);$this->redis->setOption(\Redis::OPT_SERIALIZER,$JE);}}function close(){$this->redis->close();}function readData(){$H=$this->redis->get($this->name);if($H!==false){$this->data=$H;return$this->data;}}function writeData($lC=false){return$this->redis->set($this->name,$this->data,$this->ttl);}function removeData(){if($this->redis->exists($this->name)){return$this->redis->del($this->name);}}}class Subject implements SplSubject{protected$observers=array();function attach(SplObserver$oC){$this->observers[]=$oC;}function detach(SplObserver$oC){$C=array_search($oC,$this->observers,true);if($C){unset($this->observers[$C]);}}function notify(){foreach($this->observers as&$oC){$oC->update($this);}}}class TSVCache extends FileCache{protected$delimiter="\t";protected$ext='.csv';function __construct($A,$V=false,$qE=''){parent::__construct($A,$V);if(!empty($qE)){$this->delimiter=$qE;}}function readData($mE=0){$this->data=array();$KB=fopen($this->filename,'rb');if($KB===false){return$this->data;}do{$KC=fgetcsv($KB,0,$this->delimiter);if(is_null($KC)||$KC===false){break;}if(is_null($KC[0])){$KC=array();}if($mE>0&&count($KC)<$mE){continue;}$this->data[]=$KC;}while(1);fclose($KB);return$this->data;}function writeData($lC=false){$OE=0;$KB=fopen($this->filename,'wb');if($KB===false){return$OE;}foreach($this->data as$h){$OE+=fputcsv($KB,$h,$this->delimiter);}fclose($KB);return$OE;}}class TextCache extends FileCache{protected$ext='.txt';function encode($H){return$H;}function decode($H){return$H;}function readData(){$N=filesize($this->filename);if($N>0){$d=file_get_contents($this->filename);$this->data=$this->decode($d);}return$this->data;}function writeData($lC=false){$d=$this->encode($this->data);$N=file_put_contents($this->filename,$d,LOCK_EX);return$N&&$N>0;}}class XSONCache extends TextCache{protected$ext='.json';function encode($H){return json_encode($H);}function decode($H){return json_decode($H);}}class YAMLCache extends TextCache{protected$ext='.yml';function encode($H){if(extension_loaded('yaml')){return yaml_emit($H,YAML_UTF8_ENCODING,YAML_LN_BREAK);}else if(class_exists('sfYamlDumper',true)){$VG=new\sfYamlDumper();return$VG->dump($H);}}function decode($H){if(extension_loaded('yaml')){return yaml_parse($H);}else if(class_exists('sfYamlParser',true)){$WG=new\sfYamlParser();return$WG->parse($H);}}}}
namespace Cute\Commun{use \Cute\Base\Mocking;defined('GEARMAN_SUCCESS')or define('GEARMAN_SUCCESS',0);class Job{protected$json='';function __construct($YB){$this->json=$YB;}function workload(){return$this->json;}function worknorm(){$YB=$this->workload();return json_decode($YB,true);}}class JobServer{use\Cute\Base\Deferring;protected static$instance=null;protected$worker_file='';protected$callbacks=array();protected$host='';protected$port=4730;protected$timeout=0;protected$client=null;protected$worker=null;protected function __construct($y,$k){$this->host=$y;$this->port=intval($k);}static function getInstance($y='127.0.0.1',$k=4730,$uD=0){if(!self::$instance){self::$instance=new self($y,$k);self::$instance->setTimeout($uD);}return self::$instance;}function close(){unset($this->client);unset($this->worker);unset($this->callbacks);}function setTimeout($uD=0){$this->timeout=intval($uD);return$this;}function setWorkerFile($KG){$this->worker_file=$KG;return$this;}function standIn($A,$YB){if($this->worker_file){defined('WORKER_RUNNING')or define('WORKER_RUNNING',true);require$this->worker_file;}if($JG=self::$instance->$A){$yF=new Job($YB);return$JG($yF);}}function __call($A,$B){$YB=json_encode($B);$lD=$this->getClient();if($lD instanceof Mocking){return$this->standIn($A,$YB);}try{$D=$lD->doNormal($A,$YB);assert($lD->returnCode()===GEARMAN_SUCCESS);}catch(\Exception$_){$D=$this->standIn($A,$YB);}return$D;}function __set($A,$a){$this->callbacks[$A]=$a;$zF=$this->getWorker();return$zF->addFunction($A,$a);}function __get($A){if(isset($this->callbacks[$A])){return$this->callbacks[$A];}}function getClient(){if(!$this->client){if(class_exists('\\GearmanClient')){$this->client=new\GearmanClient();$this->client->addServer($this->host,$this->port);}else{$this->client=Mocking::mock();}if($this->timeout>=0){$this->client->setTimeout($this->timeout);}}return$this->client;}function getWorker(){if(!$this->worker){if(class_exists('\\GearmanWorker')){$this->worker=new\GearmanWorker();$this->worker->addServer($this->host,$this->port);}else{$this->worker=Mocking::mock();}}return$this->worker;}function run(){if(!defined('WORKER_RUNNING')){define('WORKER_RUNNING',true);while($this->getWorker()->work());}}}use \Cute\Logging\Logger;class cURL{use\Cute\Base\Deferring;const CONN_FAIL_ERRNO=7;const DNS_FAIL_ERRNO=28;protected$base_url='';protected$global_opts=array();protected$logger=null;function __construct($gD='',Logger&$_F=null){\app()->import('Unirest',VENDOR_ROOT.'/unirest/src');$this->setBaseURL($gD);$this->logger=Mocking::mock($_F);}function close(){unset($this->logger);}static function getRequestMethod($U='GET'){return@constant('\Unirest\Method::'.strtoupper($U));}function setBaseURL($gD){$this->base_url=rtrim($gD,'/');return$this;}function prepare(array$NB=array()){if(!array_key_exists('timeout',$NB)&&!array_key_exists('Timeout',$NB)){$NB['Timeout']=intval(ini_get('default_socket_timeout'));}if(!array_key_exists('useragent',$NB)&&!array_key_exists('UserAgent',$NB)){$NB['UserAgent']='Mozilla/4.0';}if(empty($this->global_opts)){$this->global_opts=\Unirest\Request::curlOpts(array());}if(!empty($NB)){\Unirest\Request::curlOpts($this->global_opts);}return$this;}function finish(&$CF,$U='GET',$xF='-',$i=''){\Unirest\Request::clearCurlOpts();\Unirest\Request::curlOpts($this->global_opts);if($this->logger instanceof Mocking){return;}$m=\Unirest\Request::getInfo(CURLINFO_EFFECTIVE_URL);$wF=\Unirest\Request::getInfo(CURLINFO_CONNECT_TIME);$tF=\Unirest\Request::getInfo(CURLINFO_TOTAL_TIME);$EE=$CF->code;$uF=$CF->body?:'-';$i.=$i?"\n":"";$this->logger->info("{$U} \"{$m}\" {$wF} {$tF} {$EE}"."\n{$i}>>>>>>>>\n{$xF}\n<<<<<<<<\n{$uF}\n");}function getURLString($m){$m=$this->base_url.'/'.ltrim($m,'/');return$m;}function getBodyString($JB){if(empty($JB)){$JB='-';}else if(is_array($JB)||$JB instanceof\Traversable){$JB=\Unirest\Request::buildHTTPCurlQuery($JB);$JB=http_build_query($JB);}return$JB;}function __call($A,$B){$U=self::getRequestMethod($A);if($U){$this->prepare();if(!empty($this->base_url)){$B[0]=$this->getURLString($B[0]);}$i='';try{$D=exec_method_array('\\Unirest\\Request',$A,$B);}catch(\Exception$_){$i=$_->getMessage();}$JB=$this->getBodyString($B[2]);$this->finish($D,$U,$JB,$i);}else{$D=exec_method_array(\Unirest\Request,$A,$B);}return$D;}}}
namespace Cute\Context{class Input{protected static$instances=array();protected static$client_ip='-';protected$input_type=null;protected$data=array();protected$done=false;protected function __construct($VB='POST'){$this->input_type=constant('INPUT_'.$VB);if($VB==='REQUEST'){$this->raw_data=$_REQUEST;}assert(!is_null($this->input_type));}function __call($A,$_D){if(starts_with($A,'get')&&count($_D)>0){$F=substr($A,3);@list($C,$P)=$_D;return$this->get($C,$P,$F);}}static function getInstance($VB='POST'){$VB=strtoupper($VB);if(!isset(self::$instances[$VB])){$dB=new static($VB);self::$instances[$VB]=$dB;}return self::$instances[$VB];}static function request($C,$P=null,$F=false){$vF=self::getInstance('POST');$E=$vF->get($C,$P,$F);if($E===$P){$AG=self::getInstance('GET');$E=$AG->get($C,$P,$F);}return$E;}static function getClientIP(){if(strlen(self::$client_ip)>=7){return self::$client_ip;}$tC=array('HTTP_CLIENT_IP','HTTP_X_REAL_IP','HTTP_X_FORWARDED_FOR','HTTP_X_FORWARDED','HTTP_X_CLUSTER_CLIENT_IP','HTTP_FORWARDED_FOR','HTTP_FORWARDED','REMOTE_ADDR');$BG=self::getInstance('SERVER');foreach($tC as$C){$BB=$BG->get($C);if($BB&&strlen($BB)>=7){self::$client_ip=$BB;break;}}return self::$client_ip;}static function detectType($F){$F=empty($F)?'string':strtolower($F);foreach(filter_list()as$A){if(ends_with($A,$F)){return filter_id($A);}}}static function coerce($E,$F='raw'){if(is_array($E)){foreach($E as$C=>$_C){if(is_array($F)&&isset($F[$C])){$sE=$F[$C];}else{$sE=$F;}$E[$C]=self::coerce($_C,$sE);}}else{$F=strtolower($F);if($F==='int'||$F==='float'){settype($E,$F);}else if($F==='array'){$E=(array)$E;}else if($F!=='raw'){settype($E,'string');}}return$E;}protected function filterData($C,$F){$F=self::detectType($F);return filter_input($this->input_type,$C,$F);}protected function filterArrayData($zB){if(is_array($zB)){foreach($zB as$C=>&$F){if(is_array($F)){$F['filter']=self::detectType($F['filter']);}else{$F=self::detectType($F);}}}else{$zB=self::detectType($zB);}return filter_input_array($this->input_type,$zB);}function get($C,$P=null,$F=false){if(!array_key_exists($C,$this->data)){if(is_array($P)){$F=array($C=>array('filter'=>$F,'flags'=>FILTER_FORCE_ARRAY));$H=$this->filterArrayData($F);$this->data=array_merge($this->data,$H);}else{$E=$this->filterData($C,$F);if(is_null($E)||$E===false){$E=self::coerce($P,$F);}$this->data[$C]=$E;}}return$this->data[$C];}function all($C=false,$zB=false){if($this->done===false){$this->data=$this->filterArrayData($zB);}if(is_null($this->data)){$this->data=array();}if($C===false){return$this->data;}else if(array_key_exists($C,$this->data)){return$this->data[$C];}}}use \Cute\Context\Input;class Locale{protected$language='';protected$locale_dir='';protected$timezone='Asia/Shanghai';function __construct($KE='',$bB=''){if(empty($KE)){$KE=APP_ROOT.'/protected/locales';}$this->locale_dir=$KE;$this->setTimezone($bB);}function detectLanguage(){$xB=Input::getInstance('SERVER');$aB=strstr($xB->get('LANG',''),'.',true);if(empty($aB)){$HG=$xB->get('HTTP_ACCEPT_LANGUAGE','');preg_match_all('/([a-z]{2}\-?[A-Z]{0,2})/',$HG,$XB);foreach($XB[0]as$aB){$aB=str_replace('-','_',$aB);if(file_exists($this->locale_dir.'/'.$aB)){break;}}}return$aB;}function setLocale($aB,$qC='messages'){if($aB){$this->language=$aB;}else{$this->language=$this->detectLanguage();}putenv('LANG='.$this->language);setlocale(LC_ALL,$this->language);bindtextdomain($qC,$this->locale_dir);bind_textdomain_codeset($qC,'UTF-8');textdomain($qC);return$this->language;}function setTimezone($bB){if($bB){$this->timezone=$bB;}@date_default_timezone_set($this->timezone);return$this->timezone;}}class Router{protected static$current=null;static$aliases=array('<int>'=>'([0-9\-]+)','<float>'=>'([0-9\.\-]+)','<num>'=>'([0-9\.\-,]*)','<string>'=>'([a-z0-9\-_]+)','<page>'=>'([0-9]*)/?([0-9]*)/?','<path>'=>'([a-z0-9\-_/])');protected$filename='';protected$prefix='';protected$children=array();protected$items=array();function __construct($X='',$s='/'){$this->filename=$X;$this->prefix=rtrim($s,'/');self::$current=$this;if($X&&is_readable($X)){include_once$X;}}static function getCurrent(){if(is_null(self::$current)){self::$current=new self();}return self::$current;}static function toPrefix($X){$IG=strstr(basename($X),'.');$GG=substr($X,0,-strlen($IG));$s=str_replace(DIRECTORY_SEPARATOR,'/',$GG);return strtolower(rtrim($s,'/'));}static function compileUrl($m,$FG=false){$m=preg_quote(strtolower(rtrim($m,'/')));$tC=array_map('preg_quote',array_keys(self::$aliases));$S=array_values(self::$aliases);$m=str_replace($tC,$S,$m);$wC=($FG===false)?'':'(.*)?';return'!^'.$m.'/?'.$wC.'$!';}function route($b,&$GB){$WC=self::compileUrl($b);if(func_num_args()>2){$FD=array_slice(func_get_args(),1);}else{$FD=array($GB);}$this->items[$WC]=$FD;return$WC;}function mount($FB,$wC='*.php'){$FB=rtrim($FB,DIRECTORY_SEPARATOR);$SD=glob($FB.'/'.$wC,GLOB_BRACE);if(!empty($SD)){$CG=strlen($FB);foreach($SD as$X){$s=self::toPrefix(substr($X,$CG));$this->children[$s]=$X;}}return$this;}function dispatch($b,$lE=false){$b=rtrim(strtolower($b),' /').'/';if(!$lE){krsort($this->children);}foreach($this->children as$s=>$X){if(starts_with($b,$s)){$CC=new self($X,$s);$b=substr($b,strlen($s));return$CC->dispatch($b);}}if(!$lE){krsort($this->items);}foreach($this->items as$WC=>$FD){if(preg_match($WC,$b,$B)===1){$m=$this->prefix.array_shift($B);return array('handlers'=>&$FD,'args'=>$B,'url'=>$m,'rule'=>$WC);}}$this->abort(404);return array('handlers'=>array());}function abort($EE=500){return@http_response_code($EE);}function redirect($DG='',$EG=false){$cG=$EG?301:302;@header('Location: '.$DG,true,$cG);return die();}}use \Cute\Cache\RedisCache;use \SessionHandlerInterface;class SessionHandler extends RedisCache implements SessionHandlerInterface{const PREFIX='PHPSESSID:';protected$ttl=1800;protected$params=array('persistent'=>true,'socket'=>null,'serializer'=>null,);function __construct($y='127.0.0.1',$k=6379){parent::__construct('',$y,$k);$this->initiate();session_set_save_handler($this);@session_start();}function setName($BC){$this->name=self::PREFIX.$BC;return$this;}function open($JH,$KH){}function read($BC){return$this->setName($BC)->readData();}function write($BC,$H){$this->data=$H;$this->setName($BC)->writeData();}function destroy($BC){return$this->setName($BC)->removeData();}function gc($LH){}}}
namespace Cute\DB{use \DateTime;use \PDO;use \PDOException;use \Cute\DB\Literal;use \Cute\Utility\Inflect;use \Cute\View\Templater;abstract class Database{const DB_ACTION_READ='R';const DB_ACTION_WRITE='W';protected$pdo=null;protected$user='';protected$password='';protected$dbname='';protected$tblpre='';protected$host='';protected$port=0;protected$charset='';protected$past_sqls=array();function __construct($AH,$BH,$z,$GC='',$y='127.0.0.1',$k=0,$xE=''){$this->user=$AH;$this->password=$BH;$this->dbname=$z;$this->tblpre=$GC;$this->host=$y;if(intval($k)>0){$this->port=intval($k);}if(!empty($xE)){$this->charset=$xE;}}function getPDO(){if(!$this->pdo){$this->connect($this->dbname,$this->tblpre);}return$this->pdo;}function getPastSQL($z=false,$o=0){if($z===true||$z==='*'){return$this->past_sqls;}$z=empty($z)?$this->dbname:$z;$yE=$this->past_sqls[$z];$o=empty($o)?0:-abs($o);return$o?array_slice($yE,$o,null,true):$yE;}function getDriverName(){$YD=$this->getPDO()->getAttribute(PDO::ATTR_DRIVER_NAME);$YD=strtolower($YD);return$YD==='dblib'?'sqlsrv':$YD;}function inline($t){return new Literal($t);}function quote($t){if(is_null($t)){return Literal::quoteNull();}else if($t instanceof Literal||$t instanceof DateTime){return Literal::quote($t);}else{$F=is_int($t)?PDO::PARAM_INT:PDO::PARAM_STR;return$this->getPDO()->quote($t,$F);}}function embed($G,array$M=array()){foreach($M as&$t){$t=$this->quote($t);}$G=str_replace('?','%s',$G);return vsprintf($G,$M);}function execute($G,array$M=array()){if(!empty($M)){$G=$this->embed($G,$M);}try{$D=$this->getPDO()->exec($G);}catch(PDOException$_){$Z="SQL: $G\n".$_->getMessage();throw new PDOException($Z);}if(SQL_VERBOSE){$this->past_sqls[$this->dbname][]=array('act'=>self::DB_ACTION_WRITE,'sql'=>$G,);}return$D;}function query($G,array$M=array()){try{$e=$this->getPDO()->prepare($G);if($e->execute($M)){$e->setFetchMode(PDO::FETCH_ASSOC);}}catch(PDOException$_){$G=$this->embed($G,$M);$Z="SQL: $G\n".$_->getMessage();throw new PDOException($Z);}if(SQL_VERBOSE){$G=$this->embed($G,$M);$this->past_sqls[$this->dbname][]=array('act'=>self::DB_ACTION_READ,'sql'=>$G,);}return$e;}function fetch($G,array$M=array(),$iC=false){if($e=$this->query($G,$M)){if(is_numeric($iC)){$D=$e->fetchColumn(intval($iC));}else{$D=$e->fetch();if($D&&$iC){$D=isset($D[$iC])?$D[$iC]:null;}}$e->closeCursor();return$D;}}function transact(callable$_G){$DE=$this->getPDO();if($DE->beginTransaction()){$B=func_get_args();array_unshift($B,$this);try{$_G($B);$DE->commit();}catch(PDOException$_){$DE->rollBack();}}}function listTables(){if(empty($this->tblpre)){$G="SHOW TABLES FROM ?";$t=$this->getDBName();}else{$G="SHOW TABLES LIKE ?";$t=str_replace('_','\_',$this->tblpre).'%';}$D=array();if($e=$this->query($G,array($t))){$zG=strlen($this->tblpre);while($K=$e->fetchColumn(0)){$D[]=substr($K,$zG);}$e->closeCursor();}return$D;}function readFields($K){$L=$this->getColumns($K);$x=array();$UB=array();foreach($L as$J){if($J->isPrimaryKey()){$x[]=$J->name;}$P=$J->default;$FF=$J->getCategory();if($FF==='int'){$P=intval($P);}else if($FF==='float'){$P=floatval($P);}$UB[$J->name]=$P;}return compact('table','pkeys','fields');}function generateModel($V,$K,$W='',$u='',$wG=false){if(empty($W)){$W=$wG?Inflect::singularize($K):$K;$W=Inflect::camelize($W);}$V=rtrim($V,DIRECTORY_SEPARATOR).DIRECTORY_SEPARATOR;if($u){$V.=str_replace('\\',DIRECTORY_SEPARATOR,trim($u));if(!file_exists($V)){mkdir($V,0777,true);}}$X=$V.DIRECTORY_SEPARATOR.$W.'.php';if(class_exists($u.'\\'.$W)){return$X;}$H=$this->readFields($K);$H['name']=$W;$H['ns']=$u;$H['mixin']=null;$H['relations_in_mixin']=false;$HD=$u.'\\'.$W.'Mixin';if(trait_exists($HD,true)){foreach($H['fields']as$ID=>$P){if(property_exists($HD,$ID)){unset($H['fields'][$ID]);}}$H['mixin']=$HD;$H['relations_in_mixin']=method_exists($HD,'getRelations');}$bC=new Templater(SRC_ROOT);ob_start();$bC->render('model_tpl.php',$H);$d="<?php\n\n".trim(ob_get_clean());file_put_contents($X,$d);return$X;}static function csvline($h,$AC="\t",$cC=PHP_EOL,$gB='"',$hC=null){foreach($h as&$ZB){if(is_null($ZB)){$ZB=$hC;}else if(is_string($ZB)){if(strpbrk($ZB," $AC")!==false){$ZB="$gB$ZB$gB";}}}return implode($AC,$h).$cC;}abstract function connect($z,$GC='',$OC=false);abstract function getLimit($Y,$o=0);abstract function getColumns($K);}use \HandlerSocketi;class HandlerSocket{const HS_PORT_R=9998;const HS_PORT_RW=9999;protected$handler=null;protected$query=null;protected$read_only=false;protected$dbname='';protected$table='';protected$fields=array();protected$index=null;function __construct($z,$y='127.0.0.1',$k=0,$sF=false){$this->dbname=$z;$this->read_only=$sF;if(empty($k)){$k=$this->read_only?self::HS_PORT_R:self::HS_PORT_RW;}$this->handler=new HandlerSocketi($y,$k);}function open($K,$UB){if(is_string($UB)){$UB=explode(',',str_replace(' ','',$UB));}$this->table=$K;$this->fields=$UB;$this->query=null;return$this;}protected function prepare($f=null){if(empty($this->query)||$this->index!==$f){$this->index=$f;$NB=empty($this->index)?array():array('index'=>$this->index);$this->query=$this->handler->open_index($this->dbname,$this->table,$this->fields,$NB);}return$this->query;}function insert(array$XD){$C=$this->index;$D=$this->prepare($C)->insert($XD);return$D!==false;}function delete($E){if(func_num_args()>1){$C=$E;$E=func_get_arg(1);}else{$C=null;}return$this->prepare($C)->remove($E);}function truncate($BD){$aC=array();$C=null;$BD=is_array($BD)?$BD:func_get_args();foreach($BD as$WB){$aC[]=array('remove',$WB);}$D=$this->prepare($C)->multi($aC);$yG=create_function('$a,$b','return $a && $b;');return array_reduce($D,$yG,true);}function update(array$ZC,$C,$E){return$this->prepare($C)->update($E,$ZC);}function get($E){if(func_num_args()>1){$C=$E;$E=func_get_arg(1);}else{$C=null;}$D=$this->prepare($C)->find($E);if(empty($D)){return($D===false)?false:null;}return array_combine($this->fields,$D[0]);}function all($C=null,$w='>=',$E=0,$OB=0,$o=0){$sC=array();if($OB>0){$sC['limit']=$OB;}if($o>0){$sC['offset']=$o;}$E=array($w=>$E);$D=$this->prepare($C)->find($E,$sC);if($D===false){return false;}foreach($D as&$h){$h=array_combine($this->fields,$h);}return$D;}function in($C,$E){$aC=array();$S=array_slice(func_get_args(),1);if(count($S)===1&&is_array($S[0])){$S=$S[0];}foreach($S as$E){$aC[]=array('find',$E);}$D=$this->prepare($C)->multi($aC);if($D===false){return false;}$NC=exec_function_array('array_merge',$D);foreach($NC as&$h){$h=array_combine($this->fields,$h);}return$NC;}}class Literal{protected static$format="'%s'";protected$value;function __construct($E){$this->value=$E;}function __toString(){return strval($this->value);}static function quoteNull(){return'NULL';}static function quote($E){if(is_null($E)){return self::quoteNull();}else if($E instanceof self){return strval($E);}if($E instanceof DateTime){$E=$E->format('Y-m-d H:i:s');}else if(is_string($E)){$E=convert($E,'UTF-8');}else{$E=strval($E);}return sprintf(self::$format,$E);}}use \Cute\DB\Database;class MySQL extends Database{protected$port=3306;protected$charset='utf8';protected$lower_table_name=null;function connect($z,$GC='',$OC=false){$NE=sprintf('mysql:host=%s;port=%d;charset=%s',$this->host,$this->port,$this->charset);$NB=array(PDO::ATTR_ERRMODE=>PDO::ERRMODE_EXCEPTION,PDO::MYSQL_ATTR_INIT_COMMAND=>sprintf("SET NAMES '%s'",$this->charset),);$this->pdo=new PDO($NE,$this->user,$this->password,$NB);if($OC){$this->pdo->exec(sprintf("CREATE DATABASE IF NOT EXIST `%s`",$this->dbname));}$this->pdo->exec(sprintf("USE `%s`",$this->dbname));$this->tblpre=$GC;if(!array_key_exists($this->dbname,$this->past_sqls)){$this->past_sqls[$this->dbname]=array();}return$this;}function needTableToLower(){if(is_null($this->lower_table_name)){$G="SHOW Variables LIKE 'lower_case_table_names'";$DH=$this->fetch($G,array(),'Value');$this->lower_table_name=intval($DH)===1;}return$this->lower_table_name;}function getTableName($K,$dC=false){$O=$this->tblpre.$K;if($this->needTableToLower()){$O=strtolower($O);}return$dC?'`'.$O.'`':$O;}function getLimit($Y,$o=0){if($o>0){$OB=sprintf(" LIMIT %d, %d",$o,$Y);}else{$OB=sprintf(" LIMIT %d",$Y);}return array("",$OB);}function getPKey($K){$O=$this->getTableName($K);$G="SELECT COLUMN_NAME FROM information_schema.COLUMNS"." WHERE TABLE_SCHEMA=? AND TABLE_NAME=? AND COLUMN_KEY='PRI'";$M=array($this->dbname,$O);return$this->fetch($G,$M,0);}function getColumns($K){$O=$this->getTableName($K);$L=array('COLUMN_NAME','COLUMN_DEFAULT','COLUMN_KEY','IS_NULLABLE','COLUMN_TYPE','DATA_TYPE','CHARACTER_MAXIMUM_LENGTH','NUMERIC_PRECISION','NUMERIC_SCALE','DATETIME_PRECISION',);$G="SELECT %s FROM information_schema.COLUMNS"." WHERE TABLE_SCHEMA=? AND TABLE_NAME=? ORDER BY ORDINAL_POSITION";$G=sprintf($G,implode(', ',$L));$M=array($this->dbname,$O);if($e=$this->query($G,$M)){$zD=PDO::FETCH_CLASS|PDO::FETCH_PROPS_LATE;$D=$e->fetchAll($zD,'\\Cute\\ORM\\Column');$e->closeCursor();return$D;}}function isExists($K){$O=$this->getTableName($K);$G="SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES"." WHERE TABLE_NAME=? AND (TABLE_SCHEMA=? OR TABLE_CATALOG=?)";$M=array($O,$this->dbname,$this->dbname);$K=$this->fetch($G,$M,0);return$O===$K;}function getCreateSQL($K,$DC,$iD=false,$jD=false){$O=$this->getTableName($K);if($iD){$G="CREATE TABLE `%s` LIKE `%s`";return sprintf($G,$DC,$O);}else if($jD){$OC=sprintf("CREATE TABLE `%s`",$O);$G=$this->fetch("SHOW $OC",array(),'Create Table');$G=preg_replace('/(AUTO_INCREMENT=\d+)/','AUTO_INCREMENT=1',$G,1);$IH=sprintf("CREATE TABLE IF NOT EXISTS `%s`",$DC);return str_replace($OC,$IH,$G);}else{$hB="";$QC="";$v="";$L=$this->getColumns();foreach($L as$J){$A=$J->name;$P=trim($J->default,"()");if($J->getCategory()==='char'){$Y=intval($J->length);$F=($Y>255||$Y<0)?"text":"varchar($Y)";}else if($J->getCategory()==='int'){$uB=intval($J->precision);if($P===''){$P="0";}$F=$J->type."($uB)";}else if($J->getCategory()==='float'){$uB=intval($J->precision);$eD=intval($J->scale);if($P===''){$P="0.0";}$F=$J->type;if($J->type==='real'){$F='float';}else if($J->type==='money'){$F='numeric';}$F.="($uB,$eD)";}else if($J->getCategory()==='datetime'){$F='datetime';}else{$F=$J->type;}if($J->isPrimaryKey()){$hB="    `$A` int(10) unsigned NOT NULL AUTO_INCREMENT,";$QC="PRIMARY KEY (`$A`)";}else if(starts_with($F,'date')||ends_with($F,'text')){$v.="    `$A` $F NULL,\n";}else if($J->isNullable()){$v.="    `$A` $F NULL,\n";}else{$v.="    `$A` $F NOT NULL DEFAULT '$P',\n";}}$bC=<<<EOD
CREATE TABLE IF NOT EXISTS `%s` (
%s
%s
    %s
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT
EOD
;if(empty($hB)){$v=rtrim($v,",\n");}$G=sprintf($bC,$DC,$hB,$v,$QC);return$G;}}function sqlToFile($G,$IB,$AC="\t",$cC=PHP_EOL,$gB='"',$hC=null){@mkdir(dirname($IB),0664,true);$VD="FIELDS TERMINATED BY '".addslashes($AC)."'";$VD.=" LINES TERMINATED BY '".addslashes($cC)."'";if($gB){$VD.=" OPTIONALLY ENCLOSED BY '".addslashes($gB)."'";}if($HH){$VD.=" FIELDS ESCAPED BY '".addslashes($HH)."'";}$eC=sys_get_temp_dir().DIRECTORY_SEPARATOR.basename($IB);$GH="$G INTO OUTFILE '$eC' $VD";try{if(file_exists($eC)){unlink($eC);}$this->db->execute($GH);if(file_exists($eC)){rename($eC,$IB);$qB=shell_exec('wc -l '.$IB.' | cut -d" " -f1');$qB=trim($qB);return is_numeric($qB)?intval($qB):0;}}catch(\Exception$_){}}}class Query{const COUNT_INSERT_BULK_MAX=500;static$db_actions=array('select','update','delete','insert','insertBulk','apply',);protected$table='';protected$constrains=array();protected$parameters=array();protected$offset=0;protected$length=-1;protected$additions=array('GROUP BY'=>null,'HAVING'=>null,'ORDER BY'=>null,);function __construct($K){$this->table=$K;}function getTable(){return$this->table;}function deduceWhere($tB='',array&$B=array()){$l=implode(' AND ',$this->constrains);$M=$this->parameters;if(!empty($tB)){if($l){$l='('.$l.') OR ('.$tB.')';}else{$l=$tB;}if(count($B)>0){$M=array_merge($M,$B);}}$l=$l?'WHERE '.$l:'';return array($l,$M);}protected function deduceTail($NH=''){$EH=func_get_args();$gC="";foreach($this->additions as$C=>$E){if(!is_null($E)&&!in_array($C,$EH)){$gC.=" $C $E";}}return$gC;}function groupBy($FH,$CH=null){$this->additions['GROUP BY']=$FH;$this->additions['HAVING']=$CH;return$this;}function orderBy($_E,$OD=''){if($OD){$_E.=' '.strtoupper($OD);}$this->additions['ORDER BY']=$_E;return$this;}function setPage($fC,$HB=1,$_B=0){$this->length=intval($fC)<0?-1:intval($fC);if($this->length>0){$HB=intval($HB);if($HB<0&&$_B>0){$uG=ceil($_B/$this->length);$HB+=$uG+1;}if($HB>0){$this->offset=($HB-1)*$this->length;}}return$this;}function contain($ID,array$S){$EB=count($S);if($EB===0){$w='IS NULL';}else if($EB===1){$w='= ?';}else{$nB=implode(', ',array_fill(0,count($S),'?'));$w='IN ('.$nB.')';}$S=array_values($S);$this->constrains[]="$ID $w";$this->parameters=array_merge($this->parameters,$S);return$this;}function filter($JC,$E,$w='= ?'){$w=empty($w)?false:strtoupper($w);if(is_array($E)){if(substr_count($w,'?')===count($E)){$this->constrains[]="$JC $w";$this->parameters=array_merge($this->parameters,$E);}else{$this->contain($JC,$E);}}else if(is_null($E)){if(trim($w)==='<>'){$this->constrains[]="$JC IS NOT NULL";}else{$this->constrains[]="$JC IS NULL";}}else{$this->constrains[]=($w===false)?$JC:"$JC $w";$this->parameters[]=$E;}return$this;}static function getSelectSQL($O,$L='*',$s=""){if(is_object($L)){$L=get_object_vars($L);}if(is_array($L)){array_walk($L,create_function('&$v,$k','if(!is_numeric($k))$v.=" as ".$k;'));$L=implode(', ',$L);}$L=trim($L);$G="SELECT $s$L FROM $O";return$G;}function select(Database&$R,$L='*',$BF='fetchAll',array$XC=array(),$tB='',array&$B=array()){$AD="";$OB="";if(starts_with($L,'COUNT')){$gC=$this->deduceTail('ORDER BY');}else{$gC=$this->deduceTail();if($this->length>0){list($AD,$OB)=$R->getLimit($this->length,$this->offset);}}$O=$R->getTableName($this->getTable(),true);list($l,$M)=$this->deduceWhere($tB='',$B);$G=self::getSelectSQL($O,$L,$AD);$G.=($l?' '.$l:'').$gC.$OB;$e=$R->query(rtrim($G),$M);if($e&&$BF){$D=exec_method_array($e,$BF,$XC);$e->closeCursor();return$D;}}function apply(Database&$R,$a){$a=strtoupper($a);$B=array_slice(func_get_args(),2);if(empty($B)){$L=$a==='COUNT'?'*':'';}else{$L=implode(', ',$B);}$L=$a.'('.$L.')';$D=$this->select($R,$L,'fetchColumn');return$D;}function delete(Database&$R){$O=$R->getTableName($this->getTable(),true);list($l,$M)=$this->deduceWhere();$G="DELETE FROM $O $l";if(empty($l)&&$R->getDriverName()==='mysql'){$G="TRUNCATE $O";}return$R->execute(rtrim($G),$M);}static function getUpdateSet(array$ZC){$vE=array();$S=array();foreach($ZC as$C=>$_C){$vE[]=$C.'=?';$S[]=$_C;}$TE="SET ".implode(', ',$vE);return array($TE,$S);}function update(Database&$R,array$ZC,$kB=false){list($l,$M)=$this->deduceWhere();list($TE,$S)=self::getUpdateSet($ZC);$VC=$kB?'UPDATE DELAYED':'UPDATE';$O=$R->getTableName($this->getTable(),true);$G="$VC $O $TE $l";$M=array_merge($S,$M);return$R->execute(rtrim($G),$M);}static function getInsertSQL($O,array$L,$kB=false,$UC=false){if($UC===true){$VC=$kB?'REPLACE DELAYED':'REPLACE INTO';}else{$VC=$kB?'INSERT DELAYED':'INSERT INTO';}if($EB=count($L)){$L=implode(',',$L);$nB=implode(', ',array_fill(0,$EB,'?'));return array("$VC $O ($L)",$nB);}else{return array("$VC $O",'');}}function insert(Database&$R,array$XD,$kB=false,$UC=false){$O=$R->getTableName($this->getTable(),true);list($G,$nB)=self::getInsertSQL($O,array_keys($XD),$kB,$UC);if(!empty($nB)){$G.=" VALUES ($nB)";$M=array_values($XD);if($R->execute($G,$M)){return$R->getPDO()->lastInsertId();}}}function insertBulk(Database&$R,array$NC,array$L=null,$kB=false,$UC=false){assert(count($NC)>0);if(empty($L)){$L=array_keys(reset($NC));}$O=$R->getTableName($this->getTable(),true);list($G,$nB)=self::getInsertSQL($O,$L,$kB,$UC);$iG=array_chunk($NC,self::COUNT_INSERT_BULK_MAX);foreach($iG as$XE){$vG=array_fill(0,count($XE),"($nB)");$G.=" VALUES ".implode(', ',$vG);$jG=array_map('array_values',$XE);$M=exec_funcution_array('array_merge',$jG);$R->execute($G,$M);}}}class SQLServer extends Database{protected$port=1433;protected$charset='utf8';function connect($z,$GC='',$OC=false){$NE=sprintf('dblib:host=%s;port=%d;charset=%s',$this->host,$this->port,$this->charset);$this->pdo=new PDO($NE,$this->user,$this->password);$this->pdo->exec(sprintf("USE `%s`",$this->dbname));$this->tblpre=$GC;if(!array_key_exists($this->dbname,$this->past_sqls)){$this->past_sqls[$this->dbname]=array();}return$this;}function getTableName($K,$dC=false){$O=$this->tblpre.$K;return$dC?'['.$O.']':$O;}function getLimit($Y,$o=0){$AD=sprintf("TOP %d ",$Y);return array($AD,"");}function getPKey($K){$O=$this->getTableName($K);$G="SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.%s WHERE TABLE_SCHEMA='dbo'"." AND TABLE_CATALOG=? AND TABLE_NAME=? ORDER BY ORDINAL_POSITION";$M=array($this->dbname,$O);$wB=$this->fetch(sprintf($G,'KEY_COLUMN_USAGE'),$M,0);if(empty($wB)){$wB=$this->fetch(sprintf($G,'COLUMNS'),$M,0);}return$wB;}function getColumns($K){$O=$this->getTableName($K);$L=array('COLUMN_NAME','COLUMN_DEFAULT','COLUMN_KEY','IS_NULLABLE','COLUMN_TYPE','DATA_TYPE','CHARACTER_MAXIMUM_LENGTH','NUMERIC_PRECISION','NUMERIC_SCALE','DATETIME_PRECISION',);$G="SELECT %s FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA='dbo'"." AND TABLE_CATALOG=? AND TABLE_NAME=? ORDER BY ORDINAL_POSITION";$G=sprintf($G,implode(', ',$L));$M=array($this->dbname,$O);if($e=$this->query($G,$M)){$zD=PDO::FETCH_CLASS|PDO::FETCH_PROPS_LATE;$D=$e->fetchAll($zD,'\\Cute\\ORM\\Column');$e->closeCursor();return$D;}}function isExists($K){$O=$this->getTableName($K);$G="SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='dbo'"." AND TABLE_CATALOG=? AND TABLE_NAME=?";$M=array($this->dbname,$this->table);$K=$this->fetch($G,$M,0);return$O===$K;}function getCreateSQL($DC,$L=array(),$iD=false,$jD=false){$hB="";$QC="";$v="";$L=$this->getColumns();if($iD||$jD){foreach($L as$J){if($J->getCategory()==='char'){$F="[".$J->type."](".intval($J->length).")";}else if($J->type==='numeric'){$F="[numeric](".$J->precision.", ".$J->scale.")";}else{$F="[".$J->type."]";}if($J->isPrimaryKey()){$hB="    [$A] $F IDENTITY(1,1) NOT FOR REPLICATION NOT NULL,";$QC="PRIMARY KEY NONCLUSTERED ( [$A] ASC )";}else{$kG=$J->isNullable()?"NULL":"NOT NULL DEFAULT ".$J->default;$v.="    [$A] $F $kG,\n";}}}else{foreach($L as$J){$P=trim($J->default,"()");if($J->getCategory()==='char'){$Y=intval($J->length);$F=($Y>255||$Y<0)?"text":"varchar($Y)";}else if($J->getCategory()==='int'){$uB=intval($J->precision);if($P===''){$P="0";}$F=$J->type."($uB)";}else if($J->getCategory()==='float'){$uB=intval($J->precision);$eD=intval($J->scale);if($P===''){$P="0.0";}$F=$J->type;if($J->type==='real'){$F='float';}else if($J->type==='money'){$F='numeric';}$F.="($uB,$eD)";}else if($J->getCategory()==='datetime'){$F='datetime';}else{$F=$J->type;}if($J->isPrimaryKey()){$hB="    [$A] $F IDENTITY(1,1) NOT FOR REPLICATION NOT NULL,";$QC="PRIMARY KEY NONCLUSTERED ( [$A] ASC )";}else if(starts_with($F,'date')||ends_with($F,'text')){$v.="    [$A] $F NULL,\n";}else if($J->isNullable()){$v.="    [$A] $F NULL,\n";}else{$v.="    [$A] $F NOT NULL DEFAULT '$P',\n";}}}$bC=<<<EOD
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES
    WHERE TABLE_SCHEMA='dbo' AND TABLE_NAME='%s')
BEGIN
CREATE TABLE [dbo].[%s] (
%s
%s
    CONSTRAINT [PK_%s]
    %s
    WITH ( PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF,
        ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON )
    ON [PRIMARY]
) ON [PRIMARY]
END
EOD
;if(empty($hB)){$v=rtrim($v,",\n");}$G=sprintf($bC,$DC,$DC,$hB,$v,$DC,$QC);return$G;}function sqlToFile($G,$IB,$AC="\t",$cC=PHP_EOL,$gB='"',$hC=null){@mkdir(dirname($IB),0664,true);$KB=fopen($IB,'wb');$qB=0;$kE=$this->query($G);while($h=$kE->fetch()){if(is_null($hC)){fputcsv($KB,$h,$AC,$gB);}else{fwrite($KB,self::csvline($h,$AC,$cC,$gB,$hC));}$qB++;}$kE->closeCursor();fclose($KB);return$qB;}}}
namespace Cute\Logging{use \Cute\Logging\Logger;defined('LOG_WRITE_FILE_FREQ')or define('LOG_WRITE_FILE_FREQ',1);class FileLogger extends Logger{use\Cute\Base\Deferring;protected$filename='';protected$records=array();function __construct($A='',$FB=false,$MD=false){$this->filename=($A?$A.'_':'').'%s.log';if($FB===false){$FB=realpath('./logs');}if(is_dir($FB)||mkdir($FB,0777,true)){$this->filename=$FB.DIRECTORY_SEPARATOR.$this->filename;}parent::__construct($MD);$this->defer();}function close(){$this->writeFiles();unset($this->records);}function writeFiles(){foreach($this->records as$hG=>&$iE){$AB=sprintf($this->filename,$hG);$yD=implode('',$iE);$N=file_put_contents($AB,$yD,FILE_APPEND|LOCK_EX);if($N!==false){$iE=array();}}}function append(){$gG=implode(' ',func_get_args());$HE=date('Ymd');if(!isset($this->records[$HE])){$this->records[$HE]=array();}array_push($this->records[$HE],$gG.PHP_EOL);}function rawlog($fB,$Z,array$T=array()){$fB=strtoupper($fB);if($this->compareLevel($fB)){$d=self::format($Z,$T);$BB=self::getClientIP();$dG=date('Y-m-d H:i:s');$this->append($dG,$BB,$fB,$d);}if(LOG_WRITE_FILE_FREQ>=1||LOG_WRITE_FILE_FREQ>=mt_rand(1,10000)/10000){$this->writeFiles();}}}use \Cute\Context\Input;use \Cute\Utility\Word;abstract class Logger{const EMERGENCY='EMERGENCY';const ALERT='ALERT';const CRITICAL='CRITICAL';const ERROR='ERROR';const WARNING='WARNING';const NOTICE='NOTICE';const INFO='INFO';const DEBUG='DEBUG';protected$threshold=false;protected$threshold_value=null;function __construct($MD=false){if($MD===false){$this->threshold=self::DEBUG;}else{$this->threshold=strtoupper($MD);}}static function format($Z,array$T=array()){$d=is_null($Z)?'':(string)$Z;return Word::replaceWith($d,$T,'{','}');}static function getClientIP(){return Input::getClientIP();}function compareLevel($fB){static$aD=array(self::EMERGENCY=>0,self::ALERT=>1,self::CRITICAL=>2,self::ERROR=>3,self::WARNING=>4,self::NOTICE=>5,self::INFO=>6,self::DEBUG=>7,);if(is_null($this->threshold_value)&&isset($aD[$this->threshold])){$this->threshold_value=$aD[$this->threshold];}if(isset($aD[$fB])){return$aD[$fB]<=$this->threshold_value;}}function emergency($Z,array$T=array()){$this->rawlog(self::EMERGENCY,$Z,$T);}function alert($Z,array$T=array()){$this->rawlog(self::ALERT,$Z,$T);}function critical($Z,array$T=array()){$this->rawlog(self::CRITICAL,$Z,$T);}function error($Z,array$T=array()){$this->rawlog(self::ERROR,$Z,$T);}function warning($Z,array$T=array()){$this->rawlog(self::WARNING,$Z,$T);}function notice($Z,array$T=array()){$this->rawlog(self::NOTICE,$Z,$T);}function info($Z,array$T=array()){$this->rawlog(self::INFO,$Z,$T);}function debug($Z,array$T=array()){$this->rawlog(self::DEBUG,$Z,$T);}abstract function rawlog($fB,$Z,array$T=array());abstract function close();}}
namespace Cute\ORM{use \Cute\ORM\Relation;class BelongsTo extends Relation{protected$another_foreign_key='';function __construct($W='',$oD=''){parent::__construct($W);$this->another_foreign_key=$oD;}function getAnotherForeignKey($A){if(empty($this->another_foreign_key)){$this->another_foreign_key=$A.'_id';}return$this->another_foreign_key;}function relative($A,array&$D){if(empty($D)){return array();}$x=exec_method_array($this->model,'getPKeys');if(empty($x)){return array();}$TB=$this->getAnotherForeignKey($A);$S=$this->getAttrs($D,$TB);$yB=$this->getMapper();$yB->combine(reset($x),$S,true);$this->setAttrs($D,$S,$A,$TB);return$S;}}use \Cute\ORM\Model;class Column extends Model{protected static$_keys=array('COLUMN_NAME'=>'name','COLUMN_DEFAULT'=>'default','COLUMN_KEY'=>'index','IS_NULLABLE'=>'nullable','COLUMN_TYPE'=>'column','DATA_TYPE'=>'type','CHARACTER_MAXIMUM_LENGTH'=>'length','NUMERIC_PRECISION'=>'precision','NUMERIC_SCALE'=>'scale','DATETIME_PRECISION'=>'datetime',);var$name='';var$default=null;var$index=null;var$nullable='YES';var$column='';var$type='';var$length=null;var$precision=null;var$scale=null;var$datetime=null;static function getTable(){return'COLUMNS';}function __set($cE,$E){if(isset(self::$_keys[$cE])){$A=self::$_keys[$cE];$this->$A=$E;}}function isPrimaryKey(){return$this->index==='PRI';}function isNullable(){return$this->nullable==='YES';}function getCategory(){if(!is_null($this->datetime)){return'datetime';}else if(!is_null($this->precision)){return$this->scale>0?'float':'int';}else if(!is_null($this->length)){return'char';}else{return$this->type;}}}use \Cute\DB\Database;use \Cute\Utility\Inflect;class HasMany extends Relation{protected$foreign_key='';protected$is_unique=false;function __construct($W='',$hD=''){parent::__construct($W);$this->foreign_key=$hD;}function bind(Database&$R,$K=''){if(empty($this->foreign_key)){$this->foreign_key=Inflect::singularize($K).'_id';}return parent::bind($R,$K);}function getForeignKey(){return$this->foreign_key;}function relative($A,array&$D){if(empty($D)){return array();}$TB=$this->getForeignKey();$S=$this->getAttrs($D);$yB=$this->getMapper();$yB->combine($TB,$S,$this->is_unique);$P=$this->is_unique?null:array();$this->setAttrs($D,$S,$A,false,$P);return$S;}}use \Cute\ORM\HasMany;class HasOne extends HasMany{protected$is_unique=true;}class ManyToMany extends HasMany{protected$another_foreign_key='';protected$middle_table='';function __construct($W='',$hD='',$oD='',$eG=''){parent::__construct($W,$hD);$this->another_foreign_key=$oD;$this->middle_table=$eG;}function getAnotherForeignKey($A){if(empty($this->another_foreign_key)){$this->another_foreign_key=$A.'_id';}return$this->another_foreign_key;}function relative($A,array&$D){if(empty($D)){return array();}$x=exec_method_array($this->model,'getPKeys');if(empty($x)){return array();}$TB=$this->getForeignKey();$S=$this->getAttrs($D);$yB=$this->getMapper('',$this->middle_table);$yB->combine($TB,$S,false);$fG=$this->getAnotherForeignKey($A);$QD=array();foreach($S as$C=>$E){foreach($E as$lG=>$_C){$f=$_C->$fG;$S[$C][$lG]=$f;$QD[$f]=null;}}$yB=$this->getMapper();$yB->combine(reset($x),$QD,true);foreach($D as&$c){$C=$c->getID();if(!isset($S[$C])){continue;}$zC=array();foreach($S[$C]as$f){$zC[]=&$QD[$f];}$c->$A=$zC;}return$QD;}}use \PDO;use \Cute\DB\Query;class Mapper{protected$db=null;protected$query=null;protected$model='';protected$table='';protected$fetch_style=0;protected$relations=array();protected$nothing=false;function __construct(Database&$R,$W='',$K=''){$this->db=$R;$this->table=$K;if($W&&is_object($W)){$W=get_class($W);}$this->setModel($W);}function setModel($W){$this->fetch_style=PDO::FETCH_CLASS;if(empty($W)){$this->model='\\Cute\\ORM\\Model';}else{$this->model=$W;if(method_exists($this->model,'__set')||method_exists($this->model,'__construct')){$this->fetch_style=$this->fetch_style|PDO::FETCH_PROPS_LATE;}if(empty($this->table)){$this->table=exec_method_array($this->model,'getTable');}}return$this;}function getDB(){return$this->db;}function getModel(){return$this->model;}function getQuery(){if(!$this->query){$this->query=new Query($this->getTable());}return$this->query;}function getTable(){return$this->table;}function getTableName($dC=false){$R=$this->getDB();return$R->getTableName($this->getTable(),$dC);}function setPage($fC,$HB=1){$HB=intval($HB);if($HB<0&&intval($fC)>0){$_B=intval($this->count());}else{$_B=0;}$this->getQuery()->setPage($fC,$HB,$_B);return$this;}function setNothing($mG=true){$this->nothing=$mG;return$this;}function join($A='*'){$W=exec_construct_array($this->model);$LE=$W->getRelations();if($A==='*'){$this->relations=&$LE;}else{$sG=func_get_args();foreach($sG as$A){if($A&&isset($LE[$A])){$this->relations[$A]=&$LE[$A];}}}return$this;}function all($L='*',$eB=null,$tB='',array&$B=array()){$R=$this->getDB();if($this->nothing){$D=array();}else{$CB=$this->getQuery();$eB=empty($eB)?$this->fetch_style:$eB;$XC=array($eB,$this->getModel());$D=$CB->select($R,$L,'fetchAll',$XC,$tB,$B);}if(is_array($D)){$K=$this->getTable();foreach($this->relations as$A=>&$tG){$tG->bind($R,$K)->relative($A,$D);}return$D;}}function get($WB,$C=false,$L='*',$O=''){if(empty($C)){$x=exec_method_array($this->getModel(),'getPKeys');if(empty($x)){return;}$C=reset($x);}$this->getQuery()->filter($C,$WB)->setPage(1,1);$zC=$this->all($L);return count($zC)>0?reset($zC):null;}function combine($TB,array&$D,$rG=false,$L='*'){if(empty($TB)||count($D)===0){return$D;}$R=$this->getDB();$CB=$this->getQuery();$CB->contain($TB,array_keys($D));if($L==='*'){$O=$this->getTableName(true);$L=sprintf('%s,%s.*',$TB,$O);}$qG=$rG?PDO::FETCH_UNIQUE:PDO::FETCH_GROUP;$eB=$this->fetch_style|$qG;$XC=array($eB,$this->getModel());$D=$CB->select($R,$L,'fetchAll',$XC);return$D;}function __call($A,$B){$CB=$this->getQuery();if(!method_exists($CB,$A)){array_unshift($B,$A);$A='apply';}if(in_array($A,Query::$db_actions)){$R=$this->getDB();array_unshift($B,$R);return exec_method_array($CB,$A,$B);}else{$D=exec_method_array($CB,$A,$B);return($D instanceof Query)?$this:$D;}}}class Model{protected static$_fields=array();static function getTable(){return'';}static function getPKeys(){return array();}function getRelations(){return array();}function getFields(){$K=$this->getTable();if(!isset(self::$_fields[$K])){$UB=get_object_vars($this);foreach($UB as$A=>$P){if(starts_with($A,'_')){unset($UB[$A]);}}self::$_fields[$K]=&$UB;}return self::$_fields[$K];}function getID($FC=0){if($x=$this->getPKeys()){$wB=$x[$FC];return$this->$wB;}}function setID($WB){if($x=$this->getPKeys()){foreach($x as$FC=>$wB){$this->$wB=func_get_arg($FC);}}return$this;}function isExists(){$WB=$this->getID();return$WB!==0&&!is_null($WB);}}use \Cute\ORM\NestedSet;trait NestedMixin{protected$low_value=0;protected$high_value=0;var$depth=0;var$parent=null;function getRelations(){return array('children'=>new NestedSet(__CLASS__),);}function getLow(){return$this->low_value;}function getHigh(){return$this->high_value;}function isLeaf(){return$this->getHigh()-$this->getLow()===1;}function recur($a){$a($this);foreach($this->children as$nC){$nC->recur($a);}}}class NestedSet extends Relation{function relative($A,array&$D){$CB=$this->getMapper()->orderBy('low_value');if(!empty($D)){$ZE=array_pop($D);$B=array($ZE->getLow(),$ZE->getHigh());$CB->filter('low_value',$B,'BETWEEN ? AND ?');}$O=$CB->getTableName(true);$L=sprintf('low_value,%s.*',$O);$eB=PDO::FETCH_CLASS|PDO::FETCH_UNIQUE;$GD=$CB->all($L,$eB);if(count($GD)===0){return;}$FC=0;$yC=array();$D=reset($GD);foreach($GD as$mC=>&$c){$c->$A=array();if(!$c->isLeaf()){$yC[$mC+1]=$mC;}if(isset($yC[$mC])){$c->parent=&$GD[$yC[$mC]];$c->depth=$c->parent->depth+1;array_push($c->parent->$A,$c);$YE=$c->getHigh();if($YE<$c->parent->getHigh()-1){$yC[$YE+1]=$yC[$mC];}}}return$D;}function exchange(&$aE,&$RH){}function append(&$aE){}function remove(&$aE){}}use \Cute\ORM\Mapper;abstract class Relation{protected$mapper=null;protected$model='';function __construct($W=''){$this->model=empty($W)?'\\Cute\\ORM\\Model':$W;}function getModel(){return$this->model;}function bind(Database&$R,$K=''){$this->mapper=new Mapper($R,$this->model);return$this;}function getMapper($W='',$K=''){if(empty($W)&&empty($K)){return$this->mapper;}else{$R=$this->mapper->getDB();return new Mapper($R,$W,$K);}}protected function getAttrs(array&$D,$rC=false){$fE=array();foreach($D as&$c){$C=$rC?$c->$rC:$c->getID();$fE[$C]=null;}return$fE;}protected function setAttrs(array&$D,array&$S,$A,$rC=false,$P=null){foreach($D as&$c){$C=$rC?$c->$rC:$c->getID();if(isset($S[$C])){$c->$A=&$S[$C];}else{$c->$A=$P;}}}abstract function relative($A,array&$D);}}
namespace Cute\Utility{class Binary{use\Cute\Base\Deferring;protected$filename='';protected$fp=null;protected$term_size=0;protected$offset_size=0;protected$index_first=0;protected$index_last=0;protected$index_total=0;function __construct($X='',$jE=0,$hE=0){$this->filename=$X;if($jE>0){$this->term_size=$jE;}if($hE>0){$this->offset_size=$hE;}}function close(){if($this->fp){fclose($this->fp);$this->fp=null;}}function initiate($nG='read'){if(empty($this->filename)){$this->fp=tmpfile();return$this;}if(!file_exists($this->filename)){@mkdir(dirname($this->filename),0755,true);touch($this->filename,0666);}$oG=($nG==='read')?'rb':'wb';$this->fp=fopen($this->filename,$oG);return$this;}function isBOM(){return false;}function isStopNearStart(){return false;}function getIndexSize(){$EB=$this->isStopNearStart()?2:1;return$this->term_size*$EB+$this->offset_size;}function tell(){return ftell($this->fp);}function seek($jB,$vD=SEEK_SET){if($vD===SEEK_SET){$jB=abs($jB);}else if($vD===SEEK_END){$jB=-abs($jB);}$D=fseek($this->fp,$jB,$vD);return$D===0;}function truncate($pG=0){return ftruncate($this->fp,$pG);}function read($N=1){if($N===1){return fgetc($this->fp);}else if($N>1){return fread($this->fp,$N);}}function readString($Q=''){while(1){$tD=$this->read();if($tD===false||ord($tD)===0){break;}$Q.=$tD;}return$Q;}function readHex($N=1){$g=bin2hex($this->read($N));if(!$this->isBOM()&&$N>1){$g=implode('',array_reverse(str_split($g,2)));}return$g;}function readInt($N=4){$F='C';if($N===2){$F=$this->isBOM()?'n':'v';}else if($N===4){$F=$this->isBOM()?'N':'V';}else if($N===8){$F=$this->isBOM()?'J':'P';}$bG=unpack($F.'int',$this->read($N));return$bG['int'];}function readNumber($N=3){$g=$this->readHex($N);return intval($g,16);}function readHeaders(){$this->seek(0);$this->index_first=$this->readInt();$this->index_last=$this->readInt();$N=$this->index_last-$this->index_first;$lB=$this->getIndexSize();if($lB>0){$this->index_total=floor($N/$lB)+1;}return$this->index_total;}function write($H){return fwrite($this->fp,$H);}function writeString($Q,$WE=null,$oB=false){$Q.=(is_string($WE)?$WE:chr(0));return$oB?$Q:$this->write($Q);}function writeHex($g,$N=false,$oB=false){if(empty($N)){$N=ceil(strlen($g)/2);}$g=self::padHex($g,$N,'left');if(!$this->isBOM()&&$N>1){$g=implode('',array_reverse(str_split($g,2)));}$xC=@hex2bin($g);return$oB?$xC:$this->write($xC);}function writeInt($H,$N=4,$oB=false){$F='C';if($N===2){$F=$this->isBOM()?'n':'v';}else if($N===4){$F=$this->isBOM()?'N':'V';}else if($N===8){$F=$this->isBOM()?'J':'P';}$xC=pack($F,$H);return$oB?$xC:$this->write($xC);}function writeNumber($H,$N=3,$oB=false){$g=dechex(intval($H));return$this->writeHex($g,$N,$oB);}function writeHeaders($ND=''){$this->seek(0);$this->writeInt($this->index_first);$this->writeInt($this->index_last);if($ND){$this->writeString($ND);}}function writeOffset($jB){return$this->writeNumber($jB,$this->offset_size);}function appendIndexes(Binary&$jC){$this->index_first=$this->tell();$N=$jC->tell();if($N===0){$jC->seek(0,SEEK_END);$N=$jC->tell();}$jC->seek(0);$this->write($jC->read($N));$lB=$this->getIndexSize();$this->index_last=$this->tell()-$lB;return$this->writeNumber($jB,$this->term_size);}function compare($o,$sD,$lB){$this->seek($this->index_first+$o*$lB);$LF=$this->readHex($this->term_size);$this->seek(-$this->term_size,SEEK_CUR);return strcmp($sD,$LF);}static function binSearch(&$c,$U,$sD,$_B,$lB){$TD=0;$kD=$_B;do{$SE=$TD+floor(($kD-$TD)/2);$UE=$c->$U($SE,$sD,$lB);if($UE>0){$TD=$SE;}else if($UE<0){$kD=$SE;}else{break;}}while($kD-$TD>1);return$UE;}static function padHex($g,$N,$OD='left'){if(is_int($g)){$g=dechex($g);}$jF=(strtolower($OD)==='left')?STR_PAD_LEFT:STR_PAD_RIGHT;return str_pad($g,$N*2,'0',$jF);}}use \Cute\Utility\Word;use \DateTime;use \DateTimeZone;class Calendar extends DateTime{protected$timestamp=0;function __construct($ME='now',$bB=null){if(!is_null($bB)){$bB=new DateTimeZone($P);}if(is_numeric($ME)){parent::__construct('now',$bB);$this->setTimestamp($ME);}else{parent::__construct($ME,$bB);}}function speak($ZD='%F %T'){$ZD=str_replace('%v','{%w}',$ZD);$D=strftime($ZD,$this->getTimestamp());if(strpos($ZD,'{%w}')!==false){static$nF=array('0'=>'日','1'=>'一','2'=>'二','3'=>'三','4'=>'四','5'=>'五','6'=>'六');$D=Word::replaceWith($D,$nF,'{','}');}return$D;}function thisMonthBegin(){return new self($this->format('Y-m-01'));}function thisMonthEnd(){return new self($this->format('Y-m-01').' +1 month -1 day');}function nextMonthBegin(){return new self($this->format('Y-m-01').' +1 month');}static function parseDurtion($QB){if(empty($QB)){return 0;}if(is_int($QB)||is_float($QB)){return$QB;}if(is_string($QB)){$dE=strtolower(substr($QB,-1));if(is_numeric($dE)){return floatval($QB);}$QB=trim(substr($QB,0,-1));$DB=1;switch($dE){case'w':$DB*=7;case'd':$DB*=24;case'h':$DB*=60;case'm':$DB*=60;}return floatval($QB)*$DB;}}static function getSpringDay($cB){static$bE=array('20'=>4.6295,'21'=>3.87,'22'=>4.15);$cB=intval($cB);$eE=strval(ceil($cB/100));$gE=$cB%100;$eF=array_key_exists($eE,$bE)?$bE[$eE]:4;return floor($gE*0.2422+$eF)-floor(($gE-1)/4);}function getBirthAnimalIndex(){$cB=intval($this->format('Y'));$JD=intval($this->format('m'));$PE=intval($this->format('d'));$pD=$JD*100+$PE;if($pD<200+self::getSpringDay($cB)){$cB-=1;}$f=($cB-1900)%12;return$f;}function getHoroscopeIndex(){$dF=array(120,219,321,420,521,622,723,823,923,1024,1123,1222,);$JD=intval($this->format('m'));$PE=intval($this->format('d'));$pD=$JD*100+$PE;$f=$JD-1;if($pD<$dF[$f]){$f=($f==0)?11:$f-1;}return$f;}}class Inflect{protected static$plural=array('/(quiz)$/i'=>"$1zes",'/^(ox)$/i'=>"$1en",'/([m|l])ouse$/i'=>"$1ice",'/(matr|vert|ind)ix|ex$/i'=>"$1ices",'/(x|ch|ss|sh)$/i'=>"$1es",'/([^aeiouy]|qu)y$/i'=>"$1ies",'/(hive)$/i'=>"$1s",'/(?:([^f])fe|([lr])f)$/i'=>"$1$2ves",'/(shea|lea|loa|thie)f$/i'=>"$1ves",'/sis$/i'=>"ses",'/([ti])um$/i'=>"$1a",'/(tomat|potat|ech|her|vet)o$/i'=>"$1oes",'/(bu)s$/i'=>"$1ses",'/(alias)$/i'=>"$1es",'/(octop)us$/i'=>"$1i",'/(ax|test)is$/i'=>"$1es",'/(us)$/i'=>"$1es",'/s$/i'=>"s",'/$/'=>"s");protected static$singular=array('/(quiz)zes$/i'=>"$1",'/(matr)ices$/i'=>"$1ix",'/(vert|ind)ices$/i'=>"$1ex",'/^(ox)en$/i'=>"$1",'/(alias)es$/i'=>"$1",'/(octop|vir)i$/i'=>"$1us",'/(cris|ax|test)es$/i'=>"$1is",'/(shoe)s$/i'=>"$1",'/(o)es$/i'=>"$1",'/(bus)es$/i'=>"$1",'/([m|l])ice$/i'=>"$1ouse",'/(x|ch|ss|sh)es$/i'=>"$1",'/(m)ovies$/i'=>"$1ovie",'/(s)eries$/i'=>"$1eries",'/([^aeiouy]|qu)ies$/i'=>"$1y",'/([lr])ves$/i'=>"$1f",'/(tive)s$/i'=>"$1",'/(hive)s$/i'=>"$1",'/(li|wi|kni)ves$/i'=>"$1fe",'/(shea|loa|lea|thie)ves$/i'=>"$1f",'/(^analy)ses$/i'=>"$1sis",'/((a)naly|(b)a|(d)iagno|(p)arenthe|(p)rogno|(s)ynop|(t)he)ses$/i'=>"$1$2sis",'/([ti])a$/i'=>"$1um",'/(n)ews$/i'=>"$1ews",'/(h|bl)ouses$/i'=>"$1ouse",'/(corpse)s$/i'=>"$1",'/(us)es$/i'=>"$1",'/s$/i'=>"");protected static$irregular=array('move'=>'moves','foot'=>'feet','goose'=>'geese','sex'=>'sexes','child'=>'children','man'=>'men','tooth'=>'teeth','person'=>'people');protected static$uncountable=array('sheep','fish','deer','series','species','money','rice','information','equipment');protected static$abbreviations=array('AD','API','B2B','B2C','C2C','CEO','CFO','COO','CTO','DB','DSA','GEO','GPS','HTML','HTTP','ID','IO','IP','IQ','MD5','MTV','MV','MVC','NBA','OK','P2P','PC','PV','PDF','PHP','QQ','RMB','RSA','SOHO','SHA','SQL','TV','UI','URI','URL','USA','VIP','WC','WEB','WAP','WIFI','XML',);static function pluralize($Q){if(in_array(strtolower($Q),self::$uncountable))return$Q;foreach(self::$irregular as$j=>$D){$j='/'.$j.'$/i';if(preg_match($j,$Q))return preg_replace($j,$D,$Q);}foreach(self::$plural as$j=>$D){if(preg_match($j,$Q))return preg_replace($j,$D,$Q);}return$Q;}static function singularize($Q){if(in_array(strtolower($Q),self::$uncountable))return$Q;foreach(self::$irregular as$D=>$j){$j='/'.$j.'$/i';if(preg_match($j,$Q))return preg_replace($j,$D,$Q);}foreach(self::$singular as$j=>$D){if(preg_match($j,$Q))return preg_replace($j,$D,$Q);}return$Q;}static function pluralizeIf($EB,$Q){if($EB==1)return"1 $Q";else return$EB." ".self::pluralize($Q);}static function camelize($Q,$fF=false){$YC=explode('_',$Q);if($fF){$zE=count($YC)-1;$YC[$zE]=self::pluralize($YC[$zE]);}foreach($YC as&$n){$n=ucfirst($n);if(strlen($n)>1&&strlen($n)<=4){$SC=strtoupper($n);if(in_array($SC,self::$abbreviations)){$n=$SC;}}}return implode('',$YC);}static function flatten($Q,$cF='_'){$j='/([A-Z][A-Z0-9]*(?=$|[A-Z][a-z0-9])|[A-Za-z][a-z0-9]+)/';preg_match_all($j,$Q,$XB);return strtolower(implode($cF,$XB[0]));}}class Polling{protected$channels=array();function __construct(array$bF=array()){$this->channels=$bF;}function randRoll(){static$f=0;if($f===0){shuffle($this->channels);$f=count($this->channels);}return$this->channels[--$f];}function roundRobin(&$DD,$XF=1){if(count($this->channels)<2){return current($this->channels);}$ED=null;$HF=0;$AE=0;foreach($this->channels as$WB=>$h){$MC=$h['weight']*$XF;$AE+=$MC;$h['last_value']+=$MC;if(empty($DD)&&$h['last_value']>=$HF){$ED=$WB;$HF=$h['last_value'];}}if(!empty($DD)){$this->channels[$DD]['last_value']-=$AE;return$this->channels[$DD];}else if(!is_null($ED)){$this->channels[$ED]['last_value']-=$AE;return$this->channels[$ED];}}}class Word{static$digits='0123456789';static$chars='〇一二三四五六七八九十百千万亿';static$caps='零壹贰叁肆伍陆柒捌玖拾佰仟萬億';protected$content='';function __construct($d=''){$this->content=$d;}static function hasNonASCII($Q){return preg_match('/[^\x20-\x7f]/',$Q);}static function mbStrSplit($Q){$VE=self::hasNonASCII($Q)?3:1;return str_split($Q,$VE);}static function mbStrtr($Q,$wD,$xD){$wD=self::mbStrSplit($wD);$xD=self::mbStrSplit($xD);return str_replace($wD,$xD,$Q);}static function num2char($YF,$SC=false){$ZF=$SC?self::$caps:self::$chars;return self::mbStrtr(strval($YF),self::$digits,$ZF);}static function spell($bD,$SC=false){$aF=new\NumberFormatter('zh_CN',\NumberFormatter::SPELLOUT);$dD=$aF->format($bD);if($SC){$dD=self::mbStrtr($dD,self::$chars,self::$caps);}return$dD;}static function replaceWith($d,array$T=array(),$s='',$oE=''){if(empty($T)){return$d;}if(empty($s)&&empty($oE)){$IE=&$T;}else{$IE=array();foreach($T as$C=>&$E){$IE[$s.$C.$oE]=$E;}}$d=strtr($d,$IE);return$d;}static function randHash($Y=6){$Y=$Y>32?32:$Y;$gF=md5(mt_rand().time());$hF=substr($gF,0,$Y);return$hF;}static function randString($Y=6,$oF=2,$TC=''){if(empty($TC)){$TC='abcdefghijkmnpqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ23456789';}srand((float)microtime()*1000000);$wE='';$CD=ceil($Y/$oF);while($Y>0){$TC=str_shuffle($TC);$wE.=substr($TC,0,$CD);$Y-=$CD;$CD=min($Y,$CD);}return$wE;}function fetchFirstURL(){if(preg_match('/^http[^\x23-\x76]/i',$this->content,$XB)){return$XB[1];}}function getNumbers($pF=true){$DB=preg_match_all('/[\d.]+/',$this->content,$XB);if($DB===0||$DB===false){return false;}$bD=implode(current($XB));return$pF?intval($bD):$bD;}function ver2int(){$ND=$this->getNumbers(false);$QE=array_map('intval',explode('.',$ND));$QE=array_pad($QE,3,0);return intval(vsprintf('%d%02d%02d',$QE));}}}
namespace Cute\View{class Compiler{protected$env=null;protected$source_dir='';protected$compiled_dir='';function __construct(){\app()->import('Twig',VENDOR_ROOT.'/Twig/lib');$this->env=new\Twig_Environment();}function addFunction($A,$qF=null){$mF=new\Twig_SimpleFunction($A,$qF);return$this->env->addFunction($A,$mF);}function setSourceDir($kC){$this->source_dir=rtrim($kC,' /\\');if(!file_exists($this->source_dir)){@mkdir($this->source_dir,0777,true);}$iF=new\Twig_Loader_Filesystem(array($this->source_dir));$this->env->setLoader($iF);return$this;}function setCompiledDir($q){$q=rtrim($q,' /\\');if($this->compiled_dir!==$q){$this->compiled_dir=$q;}if(!file_exists($this->compiled_dir)){@mkdir($this->compiled_dir,0777,true);}return$this;}function isSourceRelational(){return true;}function compileFile($sB,$pC,array$T=array()){$d=$this->env->loadTemplate($sB)->render($T);file_put_contents($pC,$d,LOCK_EX);}function compileTpl($p,$sB='',array$T=array()){$p=ltrim(str_replace('\\','/',$p),'/');if(empty($sB)){$sB=$this->source_dir.'/'.$p;}$pC=$this->compiled_dir.'/'.$p;$q=dirname($pC);if(!is_dir($q)){mkdir($q,0777,true);}if($this->isSourceRelational()){$sB=substr($sB,strlen($this->source_dir)+1);}$this->compileFile($sB,$pC,$T);return$pC;}function compileAll($V=false,array$T=array()){if(is_null($V)||$V===false){$V=$this->source_dir;}else{$V=rtrim(str_replace('\\','/',$V),'/');}$EB=0;$WF=scandir($V);foreach($WF as$nC){if($nC==='.'||$nC==='..'){continue;}$cD=$V.'/'.$nC;if(is_dir($cD)){$this->compileAll($cD);}else{$p=substr($cD,strlen($this->source_dir));$this->compileTpl($p,$cD,$T);$EB++;}}return$EB;}}use \Cute\View\Compiler;class Templater{var$compiler=null;var$globals=array();protected$source_dir='';protected$extend_files=array();protected$template_blocks=array();protected$current_block='';function __construct($kC,$q=false){$this->setSourceDir($kC);if($q){$this->setCompileDir($q);}}function setSourceDir($kC){$this->source_dir=rtrim($kC,' /\\');if(!file_exists($this->source_dir)){@mkdir($this->source_dir,0777,true);}}function setCompileDir($q){if(is_null($this->compiler)){$this->compiler=new Compiler();}$q=rtrim($q,' /\\');$this->compiler->setSourceDir($this->source_dir);$this->compiler->setCompiledDir($q);$this->setSourceDir($q);return$this;}function updateGlobals(array$kF){if(func_num_args()===1){$this->globals=array_merge($this->globals,$kF);}else{$B=func_get_args();array_unshift($B,$this->globals);$this->globals=exec_function_array('array_merge',$B);}return$this;}function updateFunctions(array$lF){$rF=$this->compiler;foreach($lF as$A=>$a){$rF->addFunction($A,$a);}}function prepareFile($p){if($this->compiler){return$this->compiler->compileTpl($p,'',$this->globals);}else{return$this->source_dir.'/'.$p;}}function render($p,array$T=array()){extract($this->globals);extract($T);include$this->prepareFile($p);if(!empty($this->extend_files)){$UF=array_pop($this->extend_files);foreach($this->extend_files as$AB){include$this->prepareFile($AB);}extract($this->template_blocks);include$this->prepareFile($UF);}}function extendTpl($p){array_push($this->extend_files,$p);}function includeTpl($p,array$T=array()){extract($this->globals);extract($T);ob_start();include$this->prepareFile($p);$IF=trim(ob_get_clean());echo$IF;}function blockStart($JF='content'){$this->current_block=$JF;ob_start();}function blockEnd(){$KF=trim(ob_get_clean());$this->template_blocks[$this->current_block]=$KF;}}}
namespace Cute\Widget{use \Cute\Utility\Word;class Captcha{const ENCRYPT_SALT='captcha_code_salt';const FILENAME_PREFIX='cc_';var$phrase_size=6;var$width=80;var$height=30;var$font=null;var$finger_print=null;protected$builder=null;protected$savedir='';protected$saveurl='';function __construct($i=''){\app()->import('Gregwar',VENDOR_ROOT);$this->builder=new\Gregwar\Captcha\CaptchaBuilder();if(!empty($i)){$this->phrase_size=strlen($i);$this->builder->setPhrase($i);}else{$this->refresh();}$this->savedir=APP_ROOT.'/public/assets/captcha';@mkdir($this->savedir,0755,true);$this->saveurl=app()->getAssetURL().'/captcha';}static function newInstance($VF=6,$VE=80,$SF=30,$TF=null,$RF=null){$dB=new self();$dB->phrase_size=$VF;$dB->width=$VE;$dB->height=$SF;$dB->font=$TF;$dB->finger_print=$RF;return$dB;}protected static function encrypt($i){return md5(strtolower($i).self::ENCRYPT_SALT);}static function clean($V,$qD=0.3,$OB=60){$QF=mt_rand(1,10000)/10000;if($qD<=0||$qD>=1||$QF<=$qD){$MF=time()-$OB;$SD=glob($V.'cc_*.jpg');foreach($SD as$AB){if(fileatime($AB)<$MF){unlink($AB);}}}}function refresh(){$i=Word::randString($this->phrase_size);$this->builder->setPhrase($i);return$this;}function build(array$B=array()){$NF=array($this->width,$this->height,$this->font,$this->finger_print,);exec_method_array($this->builder,'build',$B+$NF);return$this->builder;}function show(){@session_start();$i=$this->builder->getPhrase();$_SESSION['phrase']=self::encrypt($i);@header('Content-Type: image/jpeg');$this->build(func_get_args());return$this->builder->output();}function save(){self::clean($this->savedir,0.3,60);$X=uniqid(self::FILENAME_PREFIX).'.jpg';$this->build(func_get_args());$this->builder->save($this->savedir.'/'.$X);$i=$this->builder->getPhrase();$m=$this->saveurl.'/'.$X.'#'.self::encrypt($i);die($m);}}use \Cute\Cache\Subject;class Counter extends Subject{protected$name='';protected$value=0;protected$maxium=0;function __construct($A,$E=0,$OF=0){$this->name=$A;$this->value=intval($E);$this->maxium=intval($OF);}function setCache($I='\\Cute\\Cache\\RedisCache'){$WD=new$I($this->name);$WD->share($this->value,'intval');$WD->initiate()->readData();$this->attach($WD);return$WD;}function findCaches(){return$this->observers;}function increase($PF=1){$this->value+=$PF;if($this->maxium>0){$this->value=$this->value%$this->maxium;}$this->notify();return$this->value;}}}