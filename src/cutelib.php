<?php
namespace{defined('VENDOR_ROOT')or define('VENDOR_ROOT',APP_ROOT.'/vendor');defined('APP_CLASS')or define('APP_CLASS','\\Cute\\Website');defined('SQL_VERBOSE')or define('SQL_VERBOSE',true);defined('ERROR_LEVEL')or define('ERROR_LEVEL',E_ALL&~E_DEPRECATED&~E_NOTICE);@error_reporting(ERROR_LEVEL);set_error_handler(function($GG,$sF,$rF,$UF,array$KH){if(0===error_reporting()){return false;}throw new ErrorException($sF,0,$GG,$rF,$UF);},E_WARNING|E_CORE_WARNING|E_COMPILE_WARNING);if(!class_exists('\\Cute\\Importer')){require_once SRC_ROOT.'/Cute/Importer.php';}function app($eE=''){static$y=null;if(is_null($y)&&$eE){$YE=\Cute\Importer::getInstance();$YE->addNamespace('Cute',SRC_ROOT);$PC=\Cute\Base\Storage::newInstance($eE);$I=constant('APP_CLASS');$y=new$I($PC);$y->install($YE,array('import'=>'addNamespace'));$y->initiate();}return$y;}function starts_with($XD,$xC){return strncmp($XD,$xC,strlen($xC))===0;}function ends_with($XD,$xC){$nD=strlen($xC);return$nD===0||(strlen($XD)>=$nD&&substr_compare($XD,$xC,-$nD)===0);}function convert($q,$TC='UTF-8'){$TC=strtoupper($TC);if(function_exists('mb_detect_encoding')){return mb_detect_encoding($q,$TC,true)?$q:mb_convert_encoding($q,$TC,'UTF-8, GBK');}else if(function_exists('iconv')){$pG=$TC==='UTF-8'?'GBK':'UTF-8';return iconv($pG,$TC.'//IGNORE',$q);}}function b64decode($q){if(preg_match('!([A-Za-z0-9+/= ]+)!',$q,$bB)){$q=$bB[1];}return base64_decode($q);}function exec_function_array($b,array$B=array()){switch(count($B)){case 0:return$b();case 1:return$b($B[0]);case 2:return$b($B[0],$B[1]);case 3:return$b($B[0],$B[1],$B[2]);case 4:return$b($B[0],$B[1],$B[2],$B[3]);case 5:return$b($B[0],$B[1],$B[2],$B[3],$B[4]);default:if(is_object($b)){$MB=new ReflectionMethod($b,'__invoke');return$MB->invokeArgs($b,$B);}else if(is_callable($b)){$MB=new ReflectionFunction($b);return$MB->invokeArgs($B);}}}function exec_method_array($RB,$V,array$B=array()){if(is_object($RB)){switch(count($B)){case 0:return$RB->{$V}();case 1:return$RB->{$V}($B[0]);case 2:return$RB->{$V}($B[0],$B[1]);case 3:return$RB->{$V}($B[0],$B[1],$B[2]);case 4:return$RB->{$V}($B[0],$B[1],$B[2],$B[3]);case 5:return$RB->{$V}($B[0],$B[1],$B[2],$B[3],$B[4]);}}if(method_exists($RB,$V)){$MB=new ReflectionMethod($RB,$V);if($MB->isPublic()&&!$MB->isAbstract()){if($MB->isStatic()){return$MB->invokeArgs(null,$B);}else{return$MB->invokeArgs($RB,$B);}}}}function exec_construct_array($I,array$B=array()){switch(count($B)){case 0:return new$I();case 1:return new$I($B[0]);case 2:return new$I($B[0],$B[1]);case 3:return new$I($B[0],$B[1],$B[2]);case 4:return new$I($B[0],$B[1],$B[2],$B[3]);case 5:return new$I($B[0],$B[1],$B[2],$B[3],$B[4]);default:if(class_exists($I)){$MB=new ReflectionClass($I);return$MB->newInstanceArgs($B);}}}}
namespace Cute{use \Cute\Importer;use \Cute\Factory;use \Cute\Base\Storage;abstract class Application{protected$shortcuts=array();function __construct(Storage&$PC){$this->install($PC,array('getConfig'));$oG=new Factory($PC);$this->install($oG,array('load'));}function initiate(){return$this;}function install($yD,array$iG){foreach($iG as$RD=>$V){$RD=strtolower(is_numeric($RD)?$V:$RD);$this->shortcuts[$RD]=array($yD,$V);}return$this;}function __call($A,$B){$A=strtolower($A);if(isset($this->shortcuts[$A])){list($yD,$V)=$this->shortcuts[$A];return exec_method_array($yD,$V,$B);}}abstract function run();}abstract class Command{protected$app=null;protected$args=array();protected$pid=0;var$cmdfile='';function __construct($y,$rD,array$hB=array()){$this->app=$y;$this->cmdfile=$rD;list($B,$QB)=self::parse($hB);$this->args=array_merge($B,$QB);}function __clone(){$this->args=array_change_key_case($this->args);}function __toString(){$B=array();foreach($this->args as$C=>$E){if(is_numeric($C)){$B[]=$E;}else if($E===true){$B[]=strlen($C)===1?" -$C":" --$C";}else{$B[]=" --$C='$E'";}}$BC=$this->cmdfile;$BC.=' '.substr(__CLASS__,0,-strlen('Command'));$BC.=' '.implode(' ',$B);return$BC;}static function parse(array$hB){$B=array();$QB=array();foreach($hB as$LC=>$LB){$LB=trim($LB);if($LB==='--'){$B[]=implode(' ',array_slice($hB,$LC+1));break;}if(substr($LB,0,1)!=='-'){$B[]=$LB;}else if(substr($LB,1,1)!=='-'){$hC=str_split(substr($LB,1));foreach($hC as$C){$QB[$C]=true;}}else{if(($AF=strpos($LB,'='))!==false){$C=substr($LB,2,$AF-2);$E=substr($LB,$AF+1);}else{$C=substr($LB,2);$E=true;}if(!array_key_exists($C,$QB)){$QB[$C]=$E;}else{if(!is_array($QB[$C])){$QB[$C]=array($QB[$C]);}$QB[$C][]=$E;}}}return array($B,$QB);}function addArg($E,$C=false){if($C===false||is_null($C)){$this->args[]=$E;}else{$this->args[$C]=$E;}return$this;}function getArg($C=false,$M=null){if($C===false||is_null($C)){return$this->args;}if(isset($this->args[$C])){return$this->args[$C];}else{return$M;}}function popArg($C){if($C===false||is_null($C)){return;}if(isset($this->args[$C])){$E=$this->args[$C];unset($this->args[$C]);return$E;}}function readPid($OC=null){if(!is_null($OC)&&is_readable($OC)){$_B=trim(file_get_contents($OC));if(is_numeric($_B)){$this->pid=$_B;}}return$this->pid;}function isRunning(){if($this->pid>0){try{$D=shell_exec(sprintf('ps %d',$this->pid));return substr_count($D,"\n")>=2;}catch(\Exception$z){}}return false;}function wait($IH=0.1){while($this->isRunning()){usleep($IH*1000000);}return true;}function stop(){if($this->pid>0&&$this->isRunning()){return posix_kill($this->pid,SIGTERM);}}function fork($OC=null,array$eC=array()){$NC=clone$this;$NC->args=array_merge($NC->args,$eC);$BC=strval($NC);$y=$NC->app;if($y->outfile!==1){$BC.=' > '.$y->getFileSymbol($y->outfile,true);}if($y->errfile!==2){$BC.=' 2 > '.$y->getFileSymbol($y->errfile,true);}if($_B=shell_exec($BC.' & echo $!')){$_B=trim($_B);$NC->pid=intval($_B);if(!is_null($OC)){file_put_contents($OC,$_B.PHP_EOL,LOCK_EX);}}return$NC->pid;}function loop($EB=1,$bC=0,$EF=0){if($bC>0){$bC=intval($bC)+time();}do{$this->execute();if($EB>0){$EB--;}if($EF>0){usleep($EF*1000000);}}while($EB===0||$bC<0||$bC<time());}abstract function execute();}use \Cute\Application;use \Cute\Command;use \Cute\Utility\Inflect;class Console extends Application{const STDIN='php://stdin';const STDOUT='php://stdout';const STDERR='php://stderr';const DEVNULL='/dev/null';const COLOR_BLACK=90;const COLOR_RED=91;const COLOR_GREEN=92;const COLOR_YELLOW=93;const COLOR_BLUE=94;const COLOR_MAGENTA=95;const COLOR_CYAN=96;const COLOR_WHITE=97;protected$color=false;var$outfile=1;var$errfile=null;function initiate(){return$this;}static function getFileSymbol($AB,$zD=false){if(is_null($AB)){return self::DEVNULL;}else if(is_int($AB)){if($AB===0){return$zD?'&0':self::STDIN;}else if($AB===1){return$zD?'&1':self::STDOUT;}else if($AB===2){return$zD?'&2':self::STDERR;}}return strval($AB);}static function appendTo($OB,$DC=false,$RC=null){if(empty($RC)&&$RC!==0){return 0;}if(is_int($RC)&&is_int($DC)){$OB=sprintf("\033[%dm%s\033[%dm",$DC,$OB,0);}$RC=self::getFileSymbol($RC);return file_put_contents($RC,$OB,FILE_APPEND|LOCK_EX);}function setColor($DC){if(is_string($DC)){$DC='COLOR_'.strtoupper($DC);$this->color=constant(__CLASS__.'::'.$DC);}return$this;}function write($OB){$OB=strval($OB);if(func_num_args()>1){$B=array_slice(func_get_args(),1);$OB=vsprintf($OB,$B);}return self::appendTo($OB,$this->color,$this->outfile);}function writeln($OB){$B=func_get_args();$B[0].=PHP_EOL;return exec_method_array($this,'write',$B);}function mount($d){$sE=func_get_args();foreach($sE as&$d){$d=rtrim($d,DIRECTORY_SEPARATOR);}$hD=PATH_SEPARATOR.implode(PATH_SEPARATOR,$sE);set_include_path(get_include_path().$hD);return$this;}function run(){if(php_sapi_name()!=='cli'){return;}if($_SERVER['argc']<2){return;}$hB=$_SERVER['argv'];$rD=array_shift($hB);$A=array_shift($hB);$I=Inflect::camelize($A).'Command';@require_once$I.'.php';if(class_exists($I)){$X=new$I($this,$rD,$hB);return$X->execute();}}}class Factory{protected$storage=null;protected$objects=array();function __construct(Storage&$PC){$this->storage=$PC;}function normalize($I){return rtrim($I,'\\');}function create($I,$A='default'){$I=$this->normalize($I);$BD=$this->storage->getSectionOnce($I);$H=$BD->getArray($A);if($A!=='default'){$H=array_merge($BD->getArray('default'),$H);}if(class_exists($I)){foreach($H as$C=>&$E){if(starts_with($C,'\\')){$E=$this->load($C,$E);}}return exec_construct_array($I,array_values($H));}}function load($I,$A='default'){$I=$this->normalize($I);if(!isset($this->objects[$I])){$this->objects[$I]=array();if(!isset($this->objects[$I][$A])){$this->objects[$I][$A]=$this->create($I,$A);}}return$this->objects[$I][$A];}}class Handler{protected$app=null;protected$succor=null;function __construct($SC=null){$this->app=app();$this->succor=$SC;}function init($V){return method_exists($this,$V)?$V:'';}function __invoke(){$V=$this->app->getMethod();$B=func_get_args();if($V=$this->init($V)){return exec_method_array($this,$V,$B);}else if($this->succor){return exec_function_array($this->succor,$B);}else{return$this->app->abort(403);}}}if(!function_exists('trait_exists')){function trait_exists($I,$CD){return false;}}final class Importer{private static$instance=null;private$classes=array();private$namespaces=array();private function __construct(){}static function getInstance(){if(is_null(self::$instance)){self::$instance=new self();self::$instance->register();}return self::$instance;}static function exists($I,$CD=true){return class_exists($I,$CD)||interface_exists($I,$CD)||trait_exists($I,$CD);}function autoload($I){$I=trim($I,'\\_');if(isset($this->classes[$I])){require_once$this->classes[$I];return self::exists($I,false);}$DH=$this->checkNamespace($I);return($DH===true);}function register(){return spl_autoload_register(array($this,'autoload'));}function addClass($Y,$I){$vE=func_get_args();$Y=array_shift($vE);if(is_readable($Y)){foreach($vE as$I){$this->classes[trim($I,'\\')]=$Y;}}ksort($this->classes);return$this;}function addNamespaceStrip($w,$U){$w=trim($w,'\\');$U=rtrim($U,'\\/');$this->namespaces[$w]=$U;ksort($this->namespaces);return$this;}function addNamespace($w,$U){$w=trim($w,'\\');$iB=strtok($w,'\\_');$U=rtrim($U,'\\/').DIRECTORY_SEPARATOR.$iB;return$this->addNamespaceStrip($w,$U);}function checkNamespace($I){$iB=strtok($I,'\\_');$Z=strlen($iB)+1;if(isset($this->namespaces[$iB])){$d=$this->namespaces[$iB];}else if(isset($this->namespaces[''])){$d=$this->namespaces[''];}else{return false;}$IB=$d.DIRECTORY_SEPARATOR;$IB.=str_replace(array('\\','_'),DIRECTORY_SEPARATOR,substr($I,$Z));if(file_exists($IB.'.php')){require_once$IB.'.php';if(self::exists($I,false)){return true;}}while($iB){$d.=DIRECTORY_SEPARATOR.$iB;if(file_exists($d.'.php')){require_once$d.'.php';if(self::exists($I,false)){return true;}}if(!file_exists($d)){return false;}$iB=strtok('\\_');}}}use \Cute\Context\Router;use \Cute\Context\SessionHandler;class Website extends Application{protected$method='';var$url='';var$rule='';static function header($A,$E,$vB=true){if(!headers_sent()){$c=empty($A)?'':strval($A).': ';$c.=is_array($E)?implode(' ',$E):strval($E);@header($c,$vB);}}function initiate(){$EC=Router::getCurrent();$this->install($EC,array('dispatch','abort','redirect'));$this->install('\\Cute\\Context\\Input',array('getClientIP','input'=>'getInstance',));$cG=new SessionHandler();$this->install($cG,array('setExpire','share','update'));return$this;}function route(){$EC=Router::getCurrent();$B=func_get_args();return exec_method_array($EC,'route',$B);}function mount($FB,$tC='*.php'){$EC=Router::getCurrent();$EC->mount($FB,$tC);return$this;}function getMethod(){if(empty($this->method)){$CC=$this->input('SERVER');$V=$CC->request('_method','');if(empty($V)){$V=$CC->get('REQUEST_METHOD','GET');}$this->method=strtolower($V);}return$this->method;}function run(){$FG=$this->getConfig('route_key','r');$d=$this->input('GET')->pop($FG,'/');try{$LD=$this->dispatch($d);$SC=null;foreach($LD['handlers']as$UB){if(empty($UB)){continue;}if(is_string($UB)&&class_exists($UB,true)){$UB=new$UB($SC);}if($UB&&is_callable($UB)){$SC=$UB;}}if($SC){$this->url=$LD['url'];$this->rule=$LD['rule'];$wE=exec_function_array($SC,$LD['args']);}}catch(\Exception$z){$wE=strval($z);}return die($wE);}}}
namespace Cute\Base{trait Deferring{protected$closed=false;function defer(){register_shutdown_function(function($HG){$HG->__destruct();},$this);}function __destruct(){if($this->closed===false){$this->close();}$this->closed=true;}function close(){}}use \Cute\Context\Input;defined('IP_ECHO_URL')or define('IP_ECHO_URL','http://ipecho.net/plain');class IP{const BYTE_IP_V4=4;const BYTE_IP_V6=6;protected$ipaddr='';function __construct($CB=false){$this->ipaddr=$CB?:self::getClientIP();}function __toString(){return$this->ipaddr;}static function toHex($CB){return sprintf('%08x',ip2long($CB));}static function getClientIP(){return Input::getClientIP();;}static function getServerIP(){if($CB=file_get_contents(IP_ECHO_URL)){return trim($CB);}}static function getHostIP($YC,$OE=array()){$qE=dns_get_record($YC,DNS_A,$PH,$OH);if($qE&&$CB=$qE[0]['ip']){return$CB;}else if($OE){return$OE[array_rand($OE)];}}}class Mocking{protected$inner=null;private function __construct(&$FE=null){$this->inner=$FE;}static function mock(&$FE=null){$EE=new self($FE);return$EE->isReady()?$EE->inner:$EE;}function __call($A,$HE){return false;}function __set($A,$E){return false;}function __get($A){return;}function isReady(){return!is_null($this->inner);}}use \ArrayObject;class Storage extends ArrayObject{const CONFIG_SECTION_NAME='configs';function __construct($CC=array(),$BG=ArrayObject::ARRAY_AS_PROPS){parent::__construct($CC,$BG);}static function newInstance($Y,$nE=false){$Y.=empty($nE)?'':$nE;assert(is_readable($Y));return new self(include$Y);}function getItem($A,$M=null){$YB=@$this->offsetGet($A);return is_null($YB)?$M:$YB;}function getArray($A,array$M=array()){$H=$this->getItem($A);return is_array($H)?$H:$M;}function getSection($A){$H=$this->getArray($A,array());return new self($H);}function getSectionOnce($A){$H=$this->getItem($A);if(!($H instanceof self)){$H=new self($H);$this->offsetSet($A,$H);}return$H;}function getConfig($A,$M=null){$BD=$this->getSectionOnce(self::CONFIG_SECTION_NAME);return$BD->getItem($A,$M);}}}
namespace Cute\Cache{use \SplSubject;use \SplObserver;abstract class BaseCache implements SplObserver{protected$data=null;protected$ttl=0;protected$coerce=false;function setExpire($ME){$this->ttl=intval($ME);return$this;}function share(&$H,$JE=false,$ME=0){$this->data=&$H;$this->coerce=$JE;$this->ttl=intval($ME);return$this;}function update(SplSubject$QH=null){if($JE=$this->coerce){$this->data=$JE($this->data);}$this->writeData();}abstract function initiate();abstract function readData();abstract function removeData();abstract function writeData($kC=false);}class FileCache extends BaseCache{protected$filename='';protected$ext='.php';function __construct($A,$U=false){if(empty($U)){$U=sys_get_temp_dir();}else{$U=rtrim($U,DIRECTORY_SEPARATOR);@mkdir($U,0755,true);}$this->filename=$U.DIRECTORY_SEPARATOR.$A.$this->ext;}function initiate(){if(!is_readable($this->filename)){touch($this->filename);}return$this;}function readData(){$O=filesize($this->filename);if($O>0){$this->data=(include$this->filename);}return$this->data;}function writeData($kC=false){$c="<?php \nreturn ".var_export($this->data,true).";\n";$O=file_put_contents($this->filename,$c);return$O&&$O>0;}function removeData(){if(file_exists($this->filename)){return unlink($this->filename);}}}class MemCache extends BaseCache{use\Cute\Base\Deferring;const MEMCACHE_WEIGHT_UNIT=12;protected$name='';protected$memcache=null;protected$host='';protected$port=0;protected$persistent=false;protected$weight=1;function __construct($A,$_='127.0.0.1',$k=11211,$vF=false,$MC=1){$this->name=$A;$this->host=$_;$this->port=intval($k);$this->persistent=$vF;$this->weight=intval($MC);}function initiate(){if(extension_loaded('memcache')){$this->memcache=new\Memcache();try{$this->connect();}catch(\Exception$z){$this->memcache=null;}}return$this;}function connect(){$MC=intval($this->weight)*self::MEMCACHE_WEIGHT_UNIT;$this->memcache->addServer($this->host,$this->port,$this->persistent,$MC);}function close(){$this->memcache->close();}function readData(){$H=$this->memcache->get($this->name);if($H!==false){return$H;}}function writeData($kC=false){return$this->memcache->set($this->name,$this->data,MEMCACHE_COMPRESSED,$this->ttl);}function removeData(){if($this->memcache->exists($this->name)){return$this->memcache->delete($this->name);}}}class RedisCache extends BaseCache{use\Cute\Base\Deferring;protected$name='';protected$redis=null;protected$host='';protected$port=0;protected$params=array('persistent'=>false,'socket'=>null,'serializer'=>null,);function __construct($A,$_='127.0.0.1',$k=6379,array$N=array()){$this->name=$A;$this->host=$_;$this->port=intval($k);if(isset($N['socket'])&&is_string($N['socket'])){if(starts_with($N['socket'],'unix://')){$N['socket']=substr($N['socket'],7);}}$this->params=array_merge($this->params,$N);}function initiate(){if(extension_loaded('redis')){$this->redis=new\Redis();try{$this->connect();}catch(\Exception$z){$this->redis=null;}}return$this;}function connect(){if(isset($this->params['socket'])){$B=array($this->params['socket']);}else{$B=array($this->host,$this->port);}$WG=$this->params['persistent']?'pconnect':'connect';exec_method_array($this->redis,$WG,$B);if($PE=$this->params['serializer']){$PE=constant('\\Redis::SERIALIZER_'.$PE);$this->redis->setOption(\Redis::OPT_SERIALIZER,$PE);}}function close(){$this->redis->close();}function readData(){$H=$this->redis->get($this->name);if($H!==false){$this->data=$H;return$this->data;}}function writeData($kC=false){return$this->redis->set($this->name,$this->data,$this->ttl);}function removeData(){if($this->redis->exists($this->name)){return$this->redis->del($this->name);}}}class Subject implements SplSubject{protected$observers=array();function attach(SplObserver$sC){$this->observers[]=$sC;}function detach(SplObserver$sC){$C=array_search($sC,$this->observers,true);if($C){unset($this->observers[$C]);}}function notify(){foreach($this->observers as&$sC){$sC->update($this);}}}class TSVCache extends FileCache{protected$delimiter="\t";protected$ext='.csv';function __construct($A,$U=false,$GF=''){parent::__construct($A,$U);if(!empty($GF)){$this->delimiter=$GF;}}function readData($gE=0){$this->data=array();$NB=fopen($this->filename,'rb');if($NB===false){return$this->data;}do{$QC=fgetcsv($NB,0,$this->delimiter);if(is_null($QC)||$QC===false){break;}if(is_null($QC[0])){$QC=array();}if($gE>0&&count($QC)<$gE){continue;}$this->data[]=$QC;}while(1);fclose($NB);return$this->data;}function writeData($kC=false){$RE=0;$NB=fopen($this->filename,'wb');if($NB===false){return$RE;}foreach($this->data as$i){$RE+=fputcsv($NB,$i,$this->delimiter);}fclose($NB);return$RE;}}class TextCache extends FileCache{protected$ext='.txt';function encode($H){return$H;}function decode($H){return$H;}function readData(){$O=filesize($this->filename);if($O>0){$c=file_get_contents($this->filename);$this->data=$this->decode($c);}return$this->data;}function writeData($kC=false){$c=$this->encode($this->data);$O=file_put_contents($this->filename,$c,LOCK_EX);return$O&&$O>0;}}class XSONCache extends TextCache{protected$ext='.json';function encode($H){return json_encode($H);}function decode($H){return json_decode($H);}}class YAMLCache extends TextCache{protected$ext='.yml';function encode($H){if(extension_loaded('yaml')){return yaml_emit($H,YAML_UTF8_ENCODING,YAML_LN_BREAK);}else if(class_exists('sfYamlDumper',true)){$aG=new\sfYamlDumper();return$aG->dump($H);}}function decode($H){if(extension_loaded('yaml')){return yaml_parse($H);}else if(class_exists('sfYamlParser',true)){$NG=new\sfYamlParser();return$NG->parse($H);}}}}
namespace Cute\Commun{use \Cute\Base\Mocking;defined('GEARMAN_SUCCESS')or define('GEARMAN_SUCCESS',0);class Job{protected$json='';function __construct($WB){$this->json=$WB;}function workload(){return$this->json;}function worknorm(){$WB=$this->workload();return json_decode($WB,true);}}class JobServer{use\Cute\Base\Deferring;protected static$instance=null;protected$worker_file='';protected$callbacks=array();protected$host='';protected$port=4730;protected$timeout=0;protected$client=null;protected$worker=null;protected function __construct($_,$k){$this->host=$_;$this->port=intval($k);}static function getInstance($_='127.0.0.1',$k=4730,$NE=0){if(!self::$instance){self::$instance=new self($_,$k);self::$instance->setTimeout($NE);}return self::$instance;}function close(){unset($this->client);unset($this->worker);unset($this->callbacks);}function setTimeout($NE=0){$this->timeout=intval($NE);return$this;}function setWorkerFile($PG){$this->worker_file=$PG;return$this;}function standIn($A,$WB){if($this->worker_file){defined('WORKER_RUNNING')or define('WORKER_RUNNING',true);require$this->worker_file;}if($yG=self::$instance->$A){$RG=new Job($WB);return$yG($RG);}}function __call($A,$B){$WB=json_encode($B);$TE=$this->getClient();if($TE instanceof Mocking){return$this->standIn($A,$WB);}try{$D=$TE->doNormal($A,$WB);assert($TE->returnCode()===GEARMAN_SUCCESS);}catch(\Exception$z){$D=$this->standIn($A,$WB);}return$D;}function __set($A,$b){$this->callbacks[$A]=$b;$SG=$this->getWorker();return$SG->addFunction($A,$b);}function __get($A){if(isset($this->callbacks[$A])){return$this->callbacks[$A];}}function getClient(){if(!$this->client){if(class_exists('\\GearmanClient')){$this->client=new\GearmanClient();$this->client->addServer($this->host,$this->port);}else{$this->client=Mocking::mock();}if($this->timeout>=0){$this->client->setTimeout($this->timeout);}}return$this->client;}function getWorker(){if(!$this->worker){if(class_exists('\\GearmanWorker')){$this->worker=new\GearmanWorker();$this->worker->addServer($this->host,$this->port);}else{$this->worker=Mocking::mock();}}return$this->worker;}function run(){if(!defined('WORKER_RUNNING')){define('WORKER_RUNNING',true);while($this->getWorker()->work());}}}use \Cute\Logging\Logger;class cURL{use\Cute\Base\Deferring;const CONN_FAIL_ERRNO=7;const DNS_FAIL_ERRNO=28;protected$base_url='';protected$global_opts=array();protected$logger=null;function __construct($QE='',Logger&$QG=null){\app()->import('Unirest',VENDOR_ROOT.'/unirest/src');$this->setBaseURL($QE);$this->logger=Mocking::mock($QG);}function close(){unset($this->logger);}static function getRequestMethod($V='GET'){return@constant('\Unirest\Method::'.strtoupper($V));}function setBaseURL($QE){$this->base_url=rtrim($QE,'/');return$this;}function prepare(array$KB=array()){if(!array_key_exists('timeout',$KB)&&!array_key_exists('Timeout',$KB)){$KB['Timeout']=intval(ini_get('default_socket_timeout'));}if(!array_key_exists('useragent',$KB)&&!array_key_exists('UserAgent',$KB)){$KB['UserAgent']='Mozilla/4.0';}if(empty($this->global_opts)){$this->global_opts=\Unirest\Request::curlOpts(array());}if(!empty($KB)){\Unirest\Request::curlOpts($this->global_opts);}return$this;}function finish(&$yE,$V='GET',$MG='-',$h=''){\Unirest\Request::clearCurlOpts();\Unirest\Request::curlOpts($this->global_opts);if($this->logger instanceof Mocking){return;}$o=\Unirest\Request::getInfo(CURLINFO_EFFECTIVE_URL);$OG=\Unirest\Request::getInfo(CURLINFO_CONNECT_TIME);$TG=\Unirest\Request::getInfo(CURLINFO_TOTAL_TIME);$IE=$yE->code;$UG=$yE->body?:'-';$h.=$h?"\n":"";$this->logger->info("{$V} \"{$o}\" {$OG} {$TG} {$IE}"."\n{$h}>>>>>>>>\n{$MG}\n<<<<<<<<\n{$UG}\n");}function getURLString($o){$o=$this->base_url.'/'.ltrim($o,'/');return$o;}function getBodyString($GB){if(empty($GB)){$GB='-';}else if(is_array($GB)||$GB instanceof\Traversable){$GB=\Unirest\Request::buildHTTPCurlQuery($GB);$GB=http_build_query($GB);}return$GB;}function __call($A,$B){$V=self::getRequestMethod($A);if($V){$this->prepare();if(!empty($this->base_url)){$B[0]=$this->getURLString($B[0]);}$h='';try{$D=exec_method_array('\\Unirest\\Request',$A,$B);}catch(\Exception$z){$h=$z->getMessage();}$GB=$this->getBodyString($B[2]);$this->finish($D,$V,$GB,$h);}else{$D=exec_method_array(\Unirest\Request,$A,$B);}return$D;}}}
namespace Cute\Context{class Input{protected static$instances=array();protected static$client_ip='-';protected$input_type=null;protected$data=array();protected$done=false;protected function __construct($aB='POST'){$this->input_type=constant('INPUT_'.$aB);if($aB==='REQUEST'){$this->raw_data=$_REQUEST;}assert(!is_null($this->input_type));}function __call($A,$HE){if(starts_with($A,'get')&&count($HE)>0){$F=substr($A,3);@list($C,$M)=$HE;return$this->get($C,$M,$F);}}static function getInstance($aB='POST'){$aB=strtoupper($aB);if(!isset(self::$instances[$aB])){$mB=new static($aB);self::$instances[$aB]=$mB;}return self::$instances[$aB];}static function request($C,$M=null,$F=false){$bG=self::getInstance('POST');$E=$bG->get($C,null,$F);if(is_null($E)){$ZG=self::getInstance('GET');$E=$ZG->get($C,$M,$F);}return$E;}static function getClientIP(){if(strlen(self::$client_ip)>=7){return self::$client_ip;}$hC=array('HTTP_CLIENT_IP','HTTP_X_REAL_IP','HTTP_X_FORWARDED_FOR','HTTP_X_FORWARDED','HTTP_X_CLUSTER_CLIENT_IP','HTTP_FORWARDED_FOR','HTTP_FORWARDED','REMOTE_ADDR');$YG=self::getInstance('SERVER');foreach($hC as$C){$CB=$YG->get($C);if($CB&&strlen($CB)>=7){self::$client_ip=$CB;break;}}return self::$client_ip;}static function detectType($F){$F=empty($F)?'string':strtolower($F);foreach(filter_list()as$A){if(ends_with($A,$F)){return filter_id($A);}}}static function coerce($E,$F='raw'){if(is_array($E)){foreach($E as$C=>$wC){if(is_array($F)&&isset($F[$C])){$oE=$F[$C];}else{$oE=$F;}$E[$C]=self::coerce($wC,$oE);}}else{$F=strtolower($F);if($F==='int'||$F==='float'){settype($E,$F);}else if($F==='array'){$E=(array)$E;}else if($F!=='raw'){settype($E,'string');}}return$E;}protected function filterData($C,$F){$F=self::detectType($F);return filter_input($this->input_type,$C,$F);}protected function filterArrayData($rB){if(is_array($rB)){foreach($rB as$C=>&$F){if(is_array($F)){$F['filter']=self::detectType($F['filter']);}else{$F=self::detectType($F);}}}else{$rB=self::detectType($rB);}return filter_input_array($this->input_type,$rB);}function get($C,$M=null,$F=false){if(!array_key_exists($C,$this->data)){if($this->done===true){if(!is_array($M)){$M=self::coerce($M,$F);}return$M;}if(is_array($M)){$F=array($C=>array('filter'=>$F,'flags'=>FILTER_FORCE_ARRAY));$H=$this->filterArrayData($F);$this->data=array_merge($this->data,$H);}else{$E=$this->filterData($C,$F);if(is_null($E)||$E===false){$E=self::coerce($M,$F);}$this->data[$C]=$E;}}return$this->data[$C];}function pop($C,$M=null,$F=false){$this->all();$E=$this->get($C,$M,$F);unset($this->data[$C]);return$E;}function all($rB=false){if($this->done===false){$this->data=$this->filterArrayData($rB);$this->done=true;}if(is_null($this->data)){$this->data=array();}return$this->data;}}use \Cute\Context\Input;class Locale{protected$language='';protected$locale_dir='';protected$timezone='Asia/Shanghai';function __construct($CE='',$XB=''){if(empty($CE)){$CE=APP_ROOT.'/protected/locales';}$this->locale_dir=$CE;$this->setTimezone($XB);}function detectLanguage(){$CC=Input::getInstance('SERVER');$cB=strstr($CC->get('LANG',''),'.',true);if(empty($cB)){$VG=$CC->get('HTTP_ACCEPT_LANGUAGE','');preg_match_all('/([a-z]{2}\-?[A-Z]{0,2})/',$VG,$bB);foreach($bB[0]as$cB){$cB=str_replace('-','_',$cB);if(file_exists($this->locale_dir.'/'.$cB)){break;}}}return$cB;}function setLocale($cB,$YC='messages'){if($cB){$this->language=$cB;}else{$this->language=$this->detectLanguage();}putenv('LANG='.$this->language);setlocale(LC_ALL,$this->language);bindtextdomain($YC,$this->locale_dir);bind_textdomain_codeset($YC,'UTF-8');textdomain($YC);return$this->language;}function setTimezone($XB){if($XB){$this->timezone=$XB;}@date_default_timezone_set($this->timezone);return$this->timezone;}}class Router{protected static$current=null;static$aliases=array('<int>'=>'([0-9\-]+)','<float>'=>'([0-9\.\-]+)','<num>'=>'([0-9\.\-,]*)','<string>'=>'([a-z0-9\-_]+)','<page>'=>'([0-9]*)/?([0-9]*)/?','<path>'=>'([a-z0-9\-_/])');protected$filename='';protected$prefix='';protected$children=array();protected$items=array();function __construct($Y='',$v='/'){$this->filename=$Y;$this->prefix=rtrim($v,'/');self::$current=$this;if($Y&&is_readable($Y)){include_once$Y;}}static function getCurrent(){if(is_null(self::$current)){self::$current=new self();}return self::$current;}static function toPrefix($Y){$XG=strstr(basename($Y),'.');$LG=substr($Y,0,-strlen($XG));$v=str_replace(DIRECTORY_SEPARATOR,'/',$LG);return strtolower(rtrim($v,'/'));}static function compileUrl($o,$KG=false){$o=preg_quote(strtolower(rtrim($o,'/')));$hC=array_map('preg_quote',array_keys(self::$aliases));$S=array_values(self::$aliases);$o=str_replace($hC,$S,$o);$tC=($KG===false)?'':'(.*)?';return'!^'.$o.'/?'.$tC.'$!';}function route($d,$UB){$aC=self::compileUrl($d);if(func_num_args()>2){$TD=array_slice(func_get_args(),1);}else{$TD=array($UB);}$this->items[$aC]=$TD;return$aC;}function mount($FB,$tC='*.php'){$FB=rtrim($FB,DIRECTORY_SEPARATOR);$PD=glob($FB.'/'.$tC,GLOB_BRACE);if(!empty($PD)){$_F=strlen($FB);foreach($PD as$Y){$v=self::toPrefix(substr($Y,$_F));$this->children[$v]=$Y;}}return$this;}function dispatch($d,$jE=false){$d=rtrim(strtolower($d),' /').'/';if(!$jE){krsort($this->children);}foreach($this->children as$v=>$Y){if(starts_with($d,$v)){$EC=new self($Y,$v);$d=substr($d,strlen($v));return$EC->dispatch($d);}}if(!$jE){krsort($this->items);}foreach($this->items as$aC=>$TD){if(preg_match($aC,$d,$B)===1){$o=$this->prefix.array_shift($B);return array('handlers'=>&$TD,'args'=>$B,'url'=>$o,'rule'=>$aC);}}$this->abort(404);return array('handlers'=>array());}static function abort($IE=500){return@http_response_code($IE);}static function redirect($AG='',$zF=false){$yF=$zF?301:302;@header('Location: '.$AG,true,$yF);return die();}}use \Cute\Cache\RedisCache;use \SessionHandlerInterface;class SessionHandler extends RedisCache implements SessionHandlerInterface{const PREFIX='PHPSESSID:';protected$ttl=1800;protected$params=array('persistent'=>true,'socket'=>null,'serializer'=>null,);function __construct($_='127.0.0.1',$k=6379){parent::__construct('',$_,$k);$this->initiate();session_set_save_handler($this);@session_start();}function setName($sB){$this->name=self::PREFIX.$sB;return$this;}function open($MH,$JH){}function read($sB){return$this->setName($sB)->readData();}function write($sB,$H){$this->data=$H;$this->setName($sB)->writeData();}function destroy($sB){return$this->setName($sB)->removeData();}function gc($LH){}}}
namespace Cute\DB{use \DateTime;use \PDO;use \PDOException;use \Cute\DB\Literal;use \Cute\Utility\Inflect;use \Cute\View\Templater;abstract class Database{const DB_ACTION_READ='R';const DB_ACTION_WRITE='W';protected$pdo=null;protected$user='';protected$password='';protected$dbname='';protected$tblpre='';protected$host='';protected$port=0;protected$charset='';protected$past_sqls=array();function __construct($wF,$xF,$BB,$IC='',$_='127.0.0.1',$k=0,$cE=''){$this->user=$wF;$this->password=$xF;$this->dbname=$BB;$this->tblpre=$IC;$this->host=$_;if(intval($k)>0){$this->port=intval($k);}if(!empty($cE)){$this->charset=$cE;}}function getPDO(){if(!$this->pdo){$this->connect($this->dbname,$this->tblpre);}return$this->pdo;}function getPastSQL($BB=false,$r=0){if($BB===true||$BB==='*'){return$this->past_sqls;}$BB=empty($BB)?$this->dbname:$BB;$_E=$this->past_sqls[$BB];$r=empty($r)?0:-abs($r);return$r?array_slice($_E,$r,null,true):$_E;}function getDriverName(){$ZD=$this->getPDO()->getAttribute(PDO::ATTR_DRIVER_NAME);$ZD=strtolower($ZD);return$ZD==='dblib'?'sqlsrv':$ZD;}function inline($s){return new Literal($s);}function quote($s){if(is_null($s)){return Literal::quoteNull();}else if($s instanceof Literal||$s instanceof DateTime){return Literal::quote($s);}else{$F=is_int($s)?PDO::PARAM_INT:PDO::PARAM_STR;return$this->getPDO()->quote($s,$F);}}function embed($G,array$N=array()){foreach($N as&$s){$s=$this->quote($s);}$G=str_replace('?','%s',$G);return vsprintf($G,$N);}function execute($G,array$N=array()){if(!empty($N)){$G=$this->embed($G,$N);}try{$D=$this->getPDO()->exec($G);}catch(PDOException$z){$a="SQL: $G\n".$z->getMessage();throw new PDOException($a);}if(SQL_VERBOSE){$this->past_sqls[$this->dbname][]=array('act'=>self::DB_ACTION_WRITE,'sql'=>$G,);}return$D;}function query($G,array$N=array()){try{$e=$this->getPDO()->prepare($G);if($e->execute($N)){$e->setFetchMode(PDO::FETCH_ASSOC);}}catch(PDOException$z){$G=$this->embed($G,$N);$a="SQL: $G\n".$z->getMessage();throw new PDOException($a);}if(SQL_VERBOSE){$G=$this->embed($G,$N);$this->past_sqls[$this->dbname][]=array('act'=>self::DB_ACTION_READ,'sql'=>$G,);}return$e;}function fetch($G,array$N=array(),$dC=false){if($e=$this->query($G,$N)){if(is_numeric($dC)){$D=$e->fetchColumn(intval($dC));}else{$D=$e->fetch();if($D&&$dC){$D=isset($D[$dC])?$D[$dC]:null;}}$e->closeCursor();return$D;}}function transact(callable$CG){$DE=$this->getPDO();if($DE->beginTransaction()){$B=func_get_args();array_unshift($B,$this);try{$CG($B);$DE->commit();}catch(PDOException$z){$DE->rollBack();}}}function listTables(){if(empty($this->tblpre)){$G="SHOW TABLES FROM ?";$s=$this->getDBName();}else{$G="SHOW TABLES LIKE ?";$s=str_replace('_','\_',$this->tblpre).'%';}$D=array();if($e=$this->query($G,array($s))){$IG=strlen($this->tblpre);while($K=$e->fetchColumn(0)){$D[]=substr($K,$IG);}$e->closeCursor();}return$D;}function readFields($K){$L=$this->getColumns($K);$t=array();$TB=array();foreach($L as$J){if($J->isPrimaryKey()){$t[]=$J->name;}$M=$J->default;$ID=$J->getCategory();if($ID==='int'){$M=intval($M);}else if($ID==='float'){$M=floatval($M);}else if(!$J->isNullable()){if($ID==='char'){$M='';}else if($ID==='datetime'){$M='0000-00-00 00:00:00';}}$TB[$J->name]=$M;}return compact('table','pkeys','fields');}function generateModel($U,$K,$W='',$w='',$JG=false){if(empty($W)){$W=$JG?Inflect::singularize($K):$K;$W=Inflect::camelize($W);}$U=rtrim($U,DIRECTORY_SEPARATOR).DIRECTORY_SEPARATOR;if($w){$U.=str_replace('\\',DIRECTORY_SEPARATOR,trim($w));if(!file_exists($U)){mkdir($U,0777,true);}}$Y=$U.DIRECTORY_SEPARATOR.$W.'.php';if(class_exists($w.'\\'.$W)){return$Y;}$H=$this->readFields($K);$H['name']=$W;$H['ns']=$w;$H['mixin']=null;$H['relations_in_mixin']=false;$GD=$w.'\\'.$W.'Mixin';if(trait_exists($GD,true)){foreach($H['fields']as$HD=>$M){if(property_exists($GD,$HD)){unset($H['fields'][$HD]);}}$H['mixin']=$GD;$H['relations_in_mixin']=method_exists($GD,'getRelations');}$VC=new Templater(SRC_ROOT);ob_start();$VC->render('model_tpl.php',$H);$c="<?php\n\n".trim(ob_get_clean());file_put_contents($Y,$c);return$Y;}static function csvline($i,$tB="\t",$XC=PHP_EOL,$jB='"',$mC=null){foreach($i as&$YB){if(is_null($YB)){$YB=$mC;}else if(is_string($YB)){if(strpbrk($YB," $tB")!==false){$YB="$jB$YB$jB";}}}return implode($tB,$i).$XC;}abstract function connect($BB,$IC='',$KC=false);abstract function getLimit($Z,$r=0);abstract function getColumns($K);}use \HandlerSocketi;class HandlerSocket{const HS_PORT_R=9998;const HS_PORT_RW=9999;protected$handler=null;protected$query=null;protected$read_only=false;protected$dbname='';protected$table='';protected$fields=array();protected$index=null;function __construct($BB,$_='127.0.0.1',$k=0,$DG=false){$this->dbname=$BB;$this->read_only=$DG;if(empty($k)){$k=$this->read_only?self::HS_PORT_R:self::HS_PORT_RW;}$this->handler=new HandlerSocketi($_,$k);}function open($K,$TB){if(is_string($TB)){$TB=explode(',',str_replace(' ','',$TB));}$this->table=$K;$this->fields=$TB;$this->query=null;return$this;}protected function prepare($f=null){if(empty($this->query)||$this->index!==$f){$this->index=$f;$KB=empty($this->index)?array():array('index'=>$this->index);$this->query=$this->handler->open_index($this->dbname,$this->table,$this->fields,$KB);}return$this->query;}function insert(array$FD){$C=$this->index;$D=$this->prepare($C)->insert($FD);return$D!==false;}function delete($E){if(func_num_args()>1){$C=$E;$E=func_get_arg(1);}else{$C=null;}return$this->prepare($C)->remove($E);}function truncate($ED){$rC=array();$C=null;$ED=is_array($ED)?$ED:func_get_args();foreach($ED as$JB){$rC[]=array('remove',$JB);}$D=$this->prepare($C)->multi($rC);$dG=create_function('$a,$b','return $a && $b;');return array_reduce($D,$dG,true);}function update(array$oC,$C,$E){return$this->prepare($C)->update($E,$oC);}function get($E){if(func_num_args()>1){$C=$E;$E=func_get_arg(1);}else{$C=null;}$D=$this->prepare($C)->find($E);if(empty($D)){return($D===false)?false:null;}return array_combine($this->fields,$D[0]);}function all($C=null,$u='>=',$E=0,$PB=0,$r=0){$eC=array();if($PB>0){$eC['limit']=$PB;}if($r>0){$eC['offset']=$r;}$E=array($u=>$E);$D=$this->prepare($C)->find($E,$eC);if($D===false){return false;}foreach($D as&$i){$i=array_combine($this->fields,$i);}return$D;}function in($C,$E){$rC=array();$S=array_slice(func_get_args(),1);if(count($S)===1&&is_array($S[0])){$S=$S[0];}foreach($S as$E){$rC[]=array('find',$E);}$D=$this->prepare($C)->multi($rC);if($D===false){return false;}$HC=exec_function_array('array_merge',$D);foreach($HC as&$i){$i=array_combine($this->fields,$i);}return$HC;}}class Literal{protected static$format="'%s'";protected$value;function __construct($E){$this->value=$E;}function __toString(){return strval($this->value);}static function quoteNull(){return'NULL';}static function quote($E){if(is_null($E)){return self::quoteNull();}else if($E instanceof self){return strval($E);}if($E instanceof DateTime){$E=$E->format('Y-m-d H:i:s');}else if(is_string($E)){$E=convert($E,'UTF-8');}else{$E=strval($E);}return sprintf(self::$format,$E);}}use \Cute\DB\Database;class MySQL extends Database{protected$port=3306;protected$charset='utf8';protected$lower_table_name=null;function connect($BB,$IC='',$KC=false){$SE=sprintf('mysql:host=%s;port=%d;charset=%s',$this->host,$this->port,$this->charset);$KB=array(PDO::ATTR_ERRMODE=>PDO::ERRMODE_EXCEPTION,PDO::MYSQL_ATTR_INIT_COMMAND=>sprintf("SET NAMES '%s'",$this->charset),);$this->pdo=new PDO($SE,$this->user,$this->password,$KB);if($KC){$this->pdo->exec(sprintf("CREATE DATABASE IF NOT EXIST `%s`",$this->dbname));}$this->pdo->exec(sprintf("USE `%s`",$this->dbname));$this->tblpre=$IC;if(!array_key_exists($this->dbname,$this->past_sqls)){$this->past_sqls[$this->dbname]=array();}return$this;}function needTableToLower(){if(is_null($this->lower_table_name)){$G="SHOW Variables LIKE 'lower_case_table_names'";$xG=$this->fetch($G,array(),'Value');$this->lower_table_name=intval($xG)===1;}return$this->lower_table_name;}function getTableName($K,$pC=false){$P=$this->tblpre.$K;if($this->needTableToLower()){$P=strtolower($P);}return$pC?'`'.$P.'`':$P;}function getLimit($Z,$r=0){if($r>0){$PB=sprintf(" LIMIT %d, %d",$r,$Z);}else{$PB=sprintf(" LIMIT %d",$Z);}return array("",$PB);}function getPKey($K){$P=$this->getTableName($K);$G="SELECT COLUMN_NAME FROM information_schema.COLUMNS"." WHERE TABLE_SCHEMA=? AND TABLE_NAME=? AND COLUMN_KEY='PRI'";$N=array($this->dbname,$P);return$this->fetch($G,$N,0);}function getColumns($K){$P=$this->getTableName($K);$L=array('COLUMN_NAME','COLUMN_DEFAULT','COLUMN_KEY','IS_NULLABLE','COLUMN_TYPE','DATA_TYPE','CHARACTER_MAXIMUM_LENGTH','NUMERIC_PRECISION','NUMERIC_SCALE','DATETIME_PRECISION',);$G="SELECT %s FROM information_schema.COLUMNS"." WHERE TABLE_SCHEMA=? AND TABLE_NAME=? ORDER BY ORDINAL_POSITION";$G=sprintf($G,implode(', ',$L));$N=array($this->dbname,$P);if($e=$this->query($G,$N)){$UE=PDO::FETCH_CLASS|PDO::FETCH_PROPS_LATE;$D=$e->fetchAll($UE,'\\Cute\\ORM\\Column');$e->closeCursor();return$D;}}function isExists($K){$P=$this->getTableName($K);$G="SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES"." WHERE TABLE_NAME=? AND (TABLE_SCHEMA=? OR TABLE_CATALOG=?)";$N=array($P,$this->dbname,$this->dbname);$K=$this->fetch($G,$N,0);return$P===$K;}function getCreateSQL($K,$wB,$GE=false,$BE=false){$P=$this->getTableName($K);if($GE){$G="CREATE TABLE `%s` LIKE `%s`";return sprintf($G,$wB,$P);}else if($BE){$KC=sprintf("CREATE TABLE `%s`",$P);$G=$this->fetch("SHOW $KC",array(),'Create Table');$G=preg_replace('/(AUTO_INCREMENT=\d+)/','AUTO_INCREMENT=1',$G,1);$EH=sprintf("CREATE TABLE IF NOT EXISTS `%s`",$wB);return str_replace($KC,$EH,$G);}else{$gB="";$JC="";$x="";$L=$this->getColumns();foreach($L as$J){$A=$J->name;$M=trim($J->default,"()");if($J->getCategory()==='char'){$Z=intval($J->length);$F=($Z>255||$Z<0)?"text":"varchar($Z)";}else if($J->getCategory()==='int'){$yB=intval($J->precision);if($M===''){$M="0";}$F=$J->type."($yB)";}else if($J->getCategory()==='float'){$yB=intval($J->precision);$lD=intval($J->scale);if($M===''){$M="0.0";}$F=$J->type;if($J->type==='real'){$F='float';}else if($J->type==='money'){$F='numeric';}$F.="($yB,$lD)";}else if($J->getCategory()==='datetime'){$F='datetime';}else{$F=$J->type;}if($J->isPrimaryKey()){$gB="    `$A` int(10) unsigned NOT NULL AUTO_INCREMENT,";$JC="PRIMARY KEY (`$A`)";}else if(starts_with($F,'date')||ends_with($F,'text')){$x.="    `$A` $F NULL,\n";}else if($J->isNullable()){$x.="    `$A` $F NULL,\n";}else{$x.="    `$A` $F NOT NULL DEFAULT '$M',\n";}}$VC=<<<EOD
CREATE TABLE IF NOT EXISTS `%s` (
%s
%s
    %s
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT
EOD
;if(empty($gB)){$x=rtrim($x,",\n");}$G=sprintf($VC,$wB,$gB,$x,$JC);return$G;}}function sqlToFile($G,$IB,$tB="\t",$XC=PHP_EOL,$jB='"',$mC=null){@mkdir(dirname($IB),0664,true);$KD="FIELDS TERMINATED BY '".addslashes($tB)."'";$KD.=" LINES TERMINATED BY '".addslashes($XC)."'";if($jB){$KD.=" OPTIONALLY ENCLOSED BY '".addslashes($jB)."'";}if($CH){$KD.=" FIELDS ESCAPED BY '".addslashes($CH)."'";}$vC=sys_get_temp_dir().DIRECTORY_SEPARATOR.basename($IB);$BH="$G INTO OUTFILE '$vC' $KD";try{if(file_exists($vC)){unlink($vC);}$this->db->execute($BH);if(file_exists($vC)){rename($vC,$IB);$zB=shell_exec('wc -l '.$IB.' | cut -d" " -f1');$zB=trim($zB);return is_numeric($zB)?intval($zB):0;}}catch(\Exception$z){}}}class Query{const COUNT_INSERT_BULK_MAX=500;static$db_actions=array('select','update','delete','insert','insertBulk','apply',);protected$table='';protected$constrains=array();protected$parameters=array();protected$offset=0;protected$length=-1;protected$additions=array('GROUP BY'=>null,'HAVING'=>null,'ORDER BY'=>null,);function __construct($K){$this->table=$K;}function getTable(){return$this->table;}function deduceWhere($uB='',array&$B=array()){$l=implode(' AND ',$this->constrains);$N=$this->parameters;if(!empty($uB)){if($l){$l='('.$l.') OR ('.$uB.')';}else{$l=$uB;}if(count($B)>0){$N=array_merge($N,$B);}}$l=$l?'WHERE '.$l:'';return array($l,$N);}protected function deduceTail($RH=''){$zG=func_get_args();$UC="";foreach($this->additions as$C=>$E){if(!is_null($E)&&!in_array($C,$zG)){$UC.=" $C $E";}}return$UC;}function groupBy($_G,$GH=null){$this->additions['GROUP BY']=$_G;$this->additions['HAVING']=$GH;return$this;}function orderBy($xE,$MD=''){if($MD){$xE.=' '.strtoupper($MD);}$this->additions['ORDER BY']=$xE;return$this;}function setPage($iC,$HB=1,$xB=0){$this->length=intval($iC)<0?-1:intval($iC);if($this->length>0){$HB=intval($HB);if($HB<0&&$xB>0){$FH=ceil($xB/$this->length);$HB+=$FH+1;}if($HB>0){$this->offset=($HB-1)*$this->length;}}return$this;}function contain($HD,array$S){$DB=count($S);if($DB===0){$u='IS NULL';}else if($DB===1){$u='= ?';}else{$dB=implode(', ',array_fill(0,count($S),'?'));$u='IN ('.$dB.')';}$S=array_values($S);$this->constrains[]="$HD $u";$this->parameters=array_merge($this->parameters,$S);return$this;}function filter($GC,$E,$u='= ?'){$u=empty($u)?false:strtoupper($u);if(is_array($E)){if(substr_count($u,'?')===count($E)){$this->constrains[]="$GC $u";$this->parameters=array_merge($this->parameters,$E);}else{$this->contain($GC,$E);}}else if(is_null($E)){if(trim($u)==='<>'){$this->constrains[]="$GC IS NOT NULL";}else{$this->constrains[]="$GC IS NULL";}}else{$this->constrains[]=($u===false)?$GC:"$GC $u";$this->parameters[]=$E;}return$this;}static function getSelectSQL($P,$L='*',$v=""){if(is_object($L)){$L=get_object_vars($L);}if(is_array($L)){array_walk($L,create_function('&$v,$k','if(!is_numeric($k))$v.=" as ".$k;'));$L=implode(', ',$L);}$L=trim($L);$G="SELECT $v$L FROM $P";return$G;}function select(Database&$Q,$L='*',$DF='fetchAll',array$fC=array(),$uB='',array&$B=array()){$WD="";$PB="";if(starts_with($L,'COUNT')){$UC=$this->deduceTail('ORDER BY');}else{$UC=$this->deduceTail();if($this->length>0){list($WD,$PB)=$Q->getLimit($this->length,$this->offset);}}$P=$Q->getTableName($this->getTable(),true);list($l,$N)=$this->deduceWhere($uB='',$B);$G=self::getSelectSQL($P,$L,$WD);$G.=($l?' '.$l:'').$UC.$PB;$e=$Q->query(rtrim($G),$N);if($e&&$DF){$D=exec_method_array($e,$DF,$fC);$e->closeCursor();return$D;}}function apply(Database&$Q,$b){$b=strtoupper($b);$B=array_slice(func_get_args(),2);if(empty($B)){$L=$b==='COUNT'?'*':'';}else{$L=implode(', ',$B);}$L=$b.'('.$L.')';$D=$this->select($Q,$L,'fetchColumn');return$D;}function delete(Database&$Q){$P=$Q->getTableName($this->getTable(),true);list($l,$N)=$this->deduceWhere();$G="DELETE FROM $P $l";if(empty($l)&&$Q->getDriverName()==='mysql'){$G="TRUNCATE $P";}return$Q->execute(rtrim($G),$N);}static function getUpdateSet(array$oC){$zE=array();$S=array();foreach($oC as$C=>$wC){$zE[]=$C.'=?';$S[]=$wC;}$tD="SET ".implode(', ',$zE);return array($tD,$S);}function update(Database&$Q,array$oC,$lB=false){list($l,$N)=$this->deduceWhere();list($tD,$S)=self::getUpdateSet($oC);$cC=$lB?'UPDATE DELAYED':'UPDATE';$P=$Q->getTableName($this->getTable(),true);$G="$cC $P $tD $l";$N=array_merge($S,$N);return$Q->execute(rtrim($G),$N);}static function getInsertSQL($P,array$L,$lB=false,$vB=false){if($vB===true){$cC=$lB?'REPLACE DELAYED':'REPLACE INTO';}else{$cC=$lB?'INSERT DELAYED':'INSERT INTO';}if($DB=count($L)){$L=implode(',',$L);$dB=implode(', ',array_fill(0,$DB,'?'));return array("$cC $P ($L)",$dB);}else{return array("$cC $P",'');}}function insert(Database&$Q,array$FD,$lB=false,$vB=false){$P=$Q->getTableName($this->getTable(),true);list($G,$dB)=self::getInsertSQL($P,array_keys($FD),$lB,$vB);if(!empty($dB)){$G.=" VALUES ($dB)";$N=array_values($FD);if($Q->execute($G,$N)){return$Q->getPDO()->lastInsertId();}}}function insertBulk(Database&$Q,array$HC,array$L=null,$lB=false,$vB=false){assert(count($HC)>0);if(empty($L)){$L=array_keys(reset($HC));}$P=$Q->getTableName($this->getTable(),true);list($G,$dB)=self::getInsertSQL($P,$L,$lB,$vB);$HH=array_chunk($HC,self::COUNT_INSERT_BULK_MAX);foreach($HH as$HF){$AH=array_fill(0,count($HF),"($dB)");$G.=" VALUES ".implode(', ',$AH);$uF=array_map('array_values',$HF);$N=exec_funcution_array('array_merge',$uF);$Q->execute($G,$N);}}}class SQLServer extends Database{protected$port=1433;protected$charset='utf8';function connect($BB,$IC='',$KC=false){$SE=sprintf('dblib:host=%s;port=%d;charset=%s',$this->host,$this->port,$this->charset);$this->pdo=new PDO($SE,$this->user,$this->password);$this->pdo->exec(sprintf("USE `%s`",$this->dbname));$this->tblpre=$IC;if(!array_key_exists($this->dbname,$this->past_sqls)){$this->past_sqls[$this->dbname]=array();}return$this;}function getTableName($K,$pC=false){$P=$this->tblpre.$K;return$pC?'['.$P.']':$P;}function getLimit($Z,$r=0){$WD=sprintf("TOP %d ",$Z);return array($WD,"");}function getPKey($K){$P=$this->getTableName($K);$G="SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.%s WHERE TABLE_SCHEMA='dbo'"." AND TABLE_CATALOG=? AND TABLE_NAME=? ORDER BY ORDINAL_POSITION";$N=array($this->dbname,$P);$ZB=$this->fetch(sprintf($G,'KEY_COLUMN_USAGE'),$N,0);if(empty($ZB)){$ZB=$this->fetch(sprintf($G,'COLUMNS'),$N,0);}return$ZB;}function getColumns($K){$P=$this->getTableName($K);$L=array('COLUMN_NAME','COLUMN_DEFAULT','COLUMN_KEY','IS_NULLABLE','COLUMN_TYPE','DATA_TYPE','CHARACTER_MAXIMUM_LENGTH','NUMERIC_PRECISION','NUMERIC_SCALE','DATETIME_PRECISION',);$G="SELECT %s FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA='dbo'"." AND TABLE_CATALOG=? AND TABLE_NAME=? ORDER BY ORDINAL_POSITION";$G=sprintf($G,implode(', ',$L));$N=array($this->dbname,$P);if($e=$this->query($G,$N)){$UE=PDO::FETCH_CLASS|PDO::FETCH_PROPS_LATE;$D=$e->fetchAll($UE,'\\Cute\\ORM\\Column');$e->closeCursor();return$D;}}function isExists($K){$P=$this->getTableName($K);$G="SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='dbo'"." AND TABLE_CATALOG=? AND TABLE_NAME=?";$N=array($this->dbname,$this->table);$K=$this->fetch($G,$N,0);return$P===$K;}function getCreateSQL($wB,$L=array(),$GE=false,$BE=false){$gB="";$JC="";$x="";$L=$this->getColumns();if($GE||$BE){foreach($L as$J){if($J->getCategory()==='char'){$F="[".$J->type."](".intval($J->length).")";}else if($J->type==='numeric'){$F="[numeric](".$J->precision.", ".$J->scale.")";}else{$F="[".$J->type."]";}if($J->isPrimaryKey()){$gB="    [$A] $F IDENTITY(1,1) NOT FOR REPLICATION NOT NULL,";$JC="PRIMARY KEY NONCLUSTERED ( [$A] ASC )";}else{$kG=$J->isNullable()?"NULL":"NOT NULL DEFAULT ".$J->default;$x.="    [$A] $F $kG,\n";}}}else{foreach($L as$J){$M=trim($J->default,"()");if($J->getCategory()==='char'){$Z=intval($J->length);$F=($Z>255||$Z<0)?"text":"varchar($Z)";}else if($J->getCategory()==='int'){$yB=intval($J->precision);if($M===''){$M="0";}$F=$J->type."($yB)";}else if($J->getCategory()==='float'){$yB=intval($J->precision);$lD=intval($J->scale);if($M===''){$M="0.0";}$F=$J->type;if($J->type==='real'){$F='float';}else if($J->type==='money'){$F='numeric';}$F.="($yB,$lD)";}else if($J->getCategory()==='datetime'){$F='datetime';}else{$F=$J->type;}if($J->isPrimaryKey()){$gB="    [$A] $F IDENTITY(1,1) NOT FOR REPLICATION NOT NULL,";$JC="PRIMARY KEY NONCLUSTERED ( [$A] ASC )";}else if(starts_with($F,'date')||ends_with($F,'text')){$x.="    [$A] $F NULL,\n";}else if($J->isNullable()){$x.="    [$A] $F NULL,\n";}else{$x.="    [$A] $F NOT NULL DEFAULT '$M',\n";}}}$VC=<<<EOD
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES
    WHERE TABLE_SCHEMA='dbo' AND TABLE_NAME='%s')
BEGIN
CREATE TABLE [dbo].[%s] (
%s
%s
    CONSTRAINT [PK_%s]
    %s
    WITH ( PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF,
        ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON )
    ON [PRIMARY]
) ON [PRIMARY]
END
EOD
;if(empty($gB)){$x=rtrim($x,",\n");}$G=sprintf($VC,$wB,$wB,$gB,$x,$wB,$JC);return$G;}function sqlToFile($G,$IB,$tB="\t",$XC=PHP_EOL,$jB='"',$mC=null){@mkdir(dirname($IB),0664,true);$NB=fopen($IB,'wb');$zB=0;$XE=$this->query($G);while($i=$XE->fetch()){if(is_null($mC)){fputcsv($NB,$i,$tB,$jB);}else{fwrite($NB,self::csvline($i,$tB,$XC,$jB,$mC));}$zB++;}$XE->closeCursor();fclose($NB);return$zB;}}}
namespace Cute\Logging{use \Cute\Logging\Logger;defined('LOG_WRITE_FILE_FREQ')or define('LOG_WRITE_FILE_FREQ',1);class FileLogger extends Logger{use\Cute\Base\Deferring;protected$filename='';protected$records=array();function __construct($A='',$FB=false,$OD=false){$this->filename=($A?$A.'_':'').'%s.log';if($FB===false){$FB=realpath('./logs');}if(is_dir($FB)||mkdir($FB,0777,true)){$this->filename=$FB.DIRECTORY_SEPARATOR.$this->filename;}parent::__construct($OD);$this->defer();}function close(){$this->writeFiles();unset($this->records);}function writeFiles(){foreach($this->records as$lG=>&$fE){$AB=sprintf($this->filename,$lG);$hD=implode('',$fE);$O=file_put_contents($AB,$hD,FILE_APPEND|LOCK_EX);if($O!==false){$fE=array();}}}function append(){$mG=implode(' ',func_get_args());$sD=date('Ymd');if(!isset($this->records[$sD])){$this->records[$sD]=array();}array_push($this->records[$sD],$mG.PHP_EOL);}function rawlog($nB,$a,array$T=array()){$nB=strtoupper($nB);if($this->compareLevel($nB)){$c=self::format($a,$T);$CB=self::getClientIP();$jG=date('Y-m-d H:i:s');$this->append($jG,$CB,$nB,$c);}if(LOG_WRITE_FILE_FREQ>=1||LOG_WRITE_FILE_FREQ>=mt_rand(1,10000)/10000){$this->writeFiles();}}}use \Cute\Context\Input;use \Cute\Utility\Word;abstract class Logger{const EMERGENCY='EMERGENCY';const ALERT='ALERT';const CRITICAL='CRITICAL';const ERROR='ERROR';const WARNING='WARNING';const NOTICE='NOTICE';const INFO='INFO';const DEBUG='DEBUG';protected$threshold=false;protected$threshold_value=null;function __construct($OD=false){if($OD===false){$this->threshold=self::DEBUG;}else{$this->threshold=strtoupper($OD);}}static function format($a,array$T=array()){$c=is_null($a)?'':(string)$a;return Word::replaceWith($c,$T,'{','}');}static function getClientIP(){return Input::getClientIP();}function compareLevel($nB){static$YD=array(self::EMERGENCY=>0,self::ALERT=>1,self::CRITICAL=>2,self::ERROR=>3,self::WARNING=>4,self::NOTICE=>5,self::INFO=>6,self::DEBUG=>7,);if(is_null($this->threshold_value)&&isset($YD[$this->threshold])){$this->threshold_value=$YD[$this->threshold];}if(isset($YD[$nB])){return$YD[$nB]<=$this->threshold_value;}}function emergency($a,array$T=array()){$this->rawlog(self::EMERGENCY,$a,$T);}function alert($a,array$T=array()){$this->rawlog(self::ALERT,$a,$T);}function critical($a,array$T=array()){$this->rawlog(self::CRITICAL,$a,$T);}function error($a,array$T=array()){$this->rawlog(self::ERROR,$a,$T);}function warning($a,array$T=array()){$this->rawlog(self::WARNING,$a,$T);}function notice($a,array$T=array()){$this->rawlog(self::NOTICE,$a,$T);}function info($a,array$T=array()){$this->rawlog(self::INFO,$a,$T);}function debug($a,array$T=array()){$this->rawlog(self::DEBUG,$a,$T);}abstract function rawlog($nB,$a,array$T=array());abstract function close();}}
namespace Cute\ORM{use \Cute\ORM\Relation;class BelongsTo extends Relation{protected$another_foreign_key='';function __construct($W='',$qD=''){parent::__construct($W);$this->another_foreign_key=$qD;}function getAnotherForeignKey($A){if(empty($this->another_foreign_key)){$this->another_foreign_key=$A.'_id';}return$this->another_foreign_key;}function relative($A,array&$D){if(empty($D)){return array();}$t=exec_method_array($this->model,'getPKeys');if(empty($t)){return array();}$SB=$this->getAnotherForeignKey($A);$S=$this->getAttrs($D,$SB);$AC=$this->getMapper();$AC->combine(reset($t),$S,true);$this->setAttrs($D,$S,$A,$SB);return$S;}}use \Cute\ORM\Model;class Column extends Model{protected static$_keys=array('COLUMN_NAME'=>'name','COLUMN_DEFAULT'=>'default','COLUMN_KEY'=>'index','IS_NULLABLE'=>'nullable','COLUMN_TYPE'=>'column','DATA_TYPE'=>'type','CHARACTER_MAXIMUM_LENGTH'=>'length','NUMERIC_PRECISION'=>'precision','NUMERIC_SCALE'=>'scale','DATETIME_PRECISION'=>'datetime',);var$name='';var$default=null;var$index=null;var$nullable='YES';var$column='';var$type='';var$length=null;var$precision=null;var$scale=null;var$datetime=null;static function getTable(){return'COLUMNS';}function __set($hE,$E){if(isset(self::$_keys[$hE])){$A=self::$_keys[$hE];$this->$A=$E;}}function isPrimaryKey(){return$this->index==='PRI';}function isNullable(){return$this->nullable==='YES';}function getCategory(){if(!is_null($this->datetime)){return'datetime';}else if(!is_null($this->precision)){return$this->scale>0?'float':'int';}else if(!is_null($this->length)){return'char';}else{return$this->type;}}}use \Cute\DB\Database;use \Cute\Utility\Inflect;class HasMany extends Relation{protected$foreign_key='';protected$is_unique=false;function __construct($W='',$_D=''){parent::__construct($W);$this->foreign_key=$_D;}function bind(Database&$Q,$K=''){if(empty($this->foreign_key)){$this->foreign_key=Inflect::singularize($K).'_id';}return parent::bind($Q,$K);}function getForeignKey(){return$this->foreign_key;}function relative($A,array&$D){if(empty($D)){return array();}$SB=$this->getForeignKey();$S=$this->getAttrs($D);$AC=$this->getMapper();$AC->combine($SB,$S,$this->is_unique);$M=$this->is_unique?null:array();$this->setAttrs($D,$S,$A,false,$M);return$S;}}use \Cute\ORM\HasMany;class HasOne extends HasMany{protected$is_unique=true;}class ManyToMany extends HasMany{protected$another_foreign_key='';protected$middle_table='';function __construct($W='',$_D='',$qD='',$eG=''){parent::__construct($W,$_D);$this->another_foreign_key=$qD;$this->middle_table=$eG;}function getAnotherForeignKey($A){if(empty($this->another_foreign_key)){$this->another_foreign_key=$A.'_id';}return$this->another_foreign_key;}function relative($A,array&$D){if(empty($D)){return array();}$t=exec_method_array($this->model,'getPKeys');if(empty($t)){return array();}$SB=$this->getForeignKey();$S=$this->getAttrs($D);$AC=$this->getMapper('',$this->middle_table);$AC->combine($SB,$S,false);$fG=$this->getAnotherForeignKey($A);$UD=array();foreach($S as$C=>$E){foreach($E as$gG=>$wC){$f=$wC->$fG;$S[$C][$gG]=$f;$UD[$f]=null;}}$AC=$this->getMapper();$AC->combine(reset($t),$UD,true);foreach($D as&$X){$C=$X->getID();if(!isset($S[$C])){continue;}$WC=array();foreach($S[$C]as$f){$WC[]=&$UD[$f];}$X->$A=$WC;}return$UD;}}use \PDO;use \Cute\DB\Query;class Mapper{protected$db=null;protected$query=null;protected$model='';protected$table='';protected$fetch_style=0;protected$relations=array();protected$nothing=false;function __construct(Database&$Q,$W='',$K=''){$this->db=$Q;$this->table=$K;if($W&&is_object($W)){$W=get_class($W);}$this->setModel($W);}function setModel($W){$this->fetch_style=PDO::FETCH_CLASS;if(empty($W)){$this->model='\\Cute\\ORM\\Model';return$this;}$this->model=$W;if(method_exists($this->model,'__set')||method_exists($this->model,'__construct')){$this->fetch_style=$this->fetch_style|PDO::FETCH_PROPS_LATE;}if(empty($this->table)){$this->table=exec_method_array($this->model,'getTable');}return$this;}function getModel(){return$this->model;}function getDB(){return$this->db;}function getQuery(){if(!$this->query){$this->query=new Query($this->getTable());}return$this->query;}function getTable(){return$this->table;}function getTableName($pC=false){$Q=$this->getDB();return$Q->getTableName($this->getTable(),$pC);}function getPKey(){$t=exec_method_array($this->getModel(),'getPKeys');return empty($t)?null:reset($t);}function setPage($iC,$HB=1){$HB=intval($HB);if($HB<0&&intval($iC)>0){$xB=intval($this->count());}else{$xB=0;}$this->getQuery()->setPage($iC,$HB,$xB);return$this;}function setNothing($hG=true){$this->nothing=$hG;return$this;}function join($A='*'){$W=exec_construct_array($this->model);$oD=$W->getRelations();if($A==='*'){$this->relations=&$oD;}else{$nG=func_get_args();foreach($nG as$A){if($A&&isset($oD[$A])){$this->relations[$A]=&$oD[$A];}}}return$this;}function all($L='*',$eB=null,$uB='',array&$B=array()){$Q=$this->getDB();if($this->nothing){$D=array();}else{$m=$this->getQuery();$eB=empty($eB)?$this->fetch_style:$eB;$fC=array($eB,$this->getModel());$D=$m->select($Q,$L,'fetchAll',$fC,$uB,$B);}if(is_array($D)){$K=$this->getTable();foreach($this->relations as$A=>&$uG){$uG->bind($Q,$K)->relative($A,$D);}return$D;}}function get($JB,$C=false,$L='*'){if(empty($C)){$C=$this->getPKey();if(empty($C)){return;}}$this->getQuery()->filter($C,$JB)->setPage(1,1);$WC=$this->all($L);if(count($WC)>0){return reset($WC);}else{return exec_construct_array($this->getModel());}}function combine($SB,array&$D,$vG=false,$L='*'){if(empty($SB)||count($D)===0){return$D;}$Q=$this->getDB();$m=$this->getQuery();$m->contain($SB,array_keys($D));if($L==='*'){$P=$this->getTableName(true);$L=sprintf('%s,%s.*',$SB,$P);}$wG=$vG?PDO::FETCH_UNIQUE:PDO::FETCH_GROUP;$eB=$this->fetch_style|$wG;$fC=array($eB,$this->getModel());$D=$m->select($Q,$L,'fetchAll',$fC);return$D;}function __call($A,$B){$m=$this->getQuery();if(!method_exists($m,$A)){array_unshift($B,$A);$A='apply';}if(in_array($A,Query::$db_actions)){$Q=$this->getDB();array_unshift($B,$Q);return exec_method_array($m,$A,$B);}else{$D=exec_method_array($m,$A,$B);return($D instanceof Query)?$this:$D;}}function add(&$X){assert($X instanceof$this->model);$Q=$this->getDB();$m=new Query($this->getTable());$H=$X->toArray();if($X->isExists()){$ZB=$this->getPKey();$m->filter($ZB,$X->getID());$m->update($Q,$H);}else{$JB=$m->insert($Q,$H);$X->setID($JB);}return$this;}}class Model{protected static$_fields=array();static function getTable(){return'';}static function getPKeys(){return array();}function getRelations(){return array();}function getFields(){$K=$this->getTable();if(!isset(self::$_fields[$K])){$TB=get_object_vars($this);foreach($TB as$A=>$M){if(starts_with($A,'_')){unset($TB[$A]);}}self::$_fields[$K]=&$TB;}return self::$_fields[$K];}function getID($LC=0){if($t=$this->getPKeys()){$ZB=$t[$LC];return$this->$ZB;}}function setID($JB){if($t=$this->getPKeys()){foreach($t as$LC=>$ZB){$this->$ZB=func_get_arg($LC);}}return$this;}function isExists(){$JB=$this->getID();return$JB!==0&&!is_null($JB);}function toArray(){$H=get_object_vars($this);foreach($H as$C=>$E){if(starts_with($C,'_')){unset($H[$C]);}}return$H;}}use \Cute\ORM\NestedSet;trait NestedMixin{protected$low_value=0;protected$high_value=0;var$depth=0;var$parent=null;function getRelations(){return array('children'=>new NestedSet(__CLASS__),);}function getLow(){return$this->low_value;}function getHigh(){return$this->high_value;}function isLeaf(){return$this->getHigh()-$this->getLow()===1;}function recur($b){$b($this);foreach($this->children as$_C){$_C->recur($b);}}}class NestedSet extends Relation{function relative($A,array&$D){$m=$this->getMapper()->orderBy('low_value');if(!empty($D)){$uE=array_pop($D);$B=array($uE->getLow(),$uE->getHigh());$m->filter('low_value',$B,'BETWEEN ? AND ?');}$P=$m->getTableName(true);$L=sprintf('low_value,%s.*',$P);$eB=PDO::FETCH_CLASS|PDO::FETCH_UNIQUE;$SD=$m->all($L,$eB);if(count($SD)===0){return;}$LC=0;$yC=array();$D=reset($SD);foreach($SD as$zC=>&$X){$X->$A=array();if(!$X->isLeaf()){$yC[$zC+1]=$zC;}if(isset($yC[$zC])){$X->parent=&$SD[$yC[$zC]];$X->depth=$X->parent->depth+1;array_push($X->parent->$A,$X);$aE=$X->getHigh();if($aE<$X->parent->getHigh()-1){$yC[$aE+1]=$yC[$zC];}}}return$D;}function exchange(&$iE,&$NH){}function append(&$iE){}function remove(&$iE){}}use \Cute\ORM\Mapper;abstract class Relation{protected$mapper=null;protected$model='';function __construct($W=''){$this->model=empty($W)?'\\Cute\\ORM\\Model':$W;}function getModel(){return$this->model;}function bind(Database&$Q,$K=''){$this->mapper=new Mapper($Q,$this->model);return$this;}function getMapper($W='',$K=''){if(empty($W)&&empty($K)){return$this->mapper;}else{$Q=$this->mapper->getDB();return new Mapper($Q,$W,$K);}}protected function getAttrs(array&$D,$qC=false){$bE=array();foreach($D as&$X){$C=$qC?$X->$qC:$X->getID();$bE[$C]=null;}return$bE;}protected function setAttrs(array&$D,array&$S,$A,$qC=false,$M=null){foreach($D as&$X){$C=$qC?$X->$qC:$X->getID();if(isset($S[$C])){$X->$A=&$S[$C];}else{$X->$A=$M;}}}abstract function relative($A,array&$D);}}
namespace Cute\Utility{class Binary{use\Cute\Base\Deferring;protected$filename='';protected$fp=null;protected$term_size=0;protected$offset_size=0;protected$index_first=0;protected$index_last=0;protected$index_total=0;function __construct($Y='',$ZE=0,$kE=0){$this->filename=$Y;if($ZE>0){$this->term_size=$ZE;}if($kE>0){$this->offset_size=$kE;}}function close(){if($this->fp){fclose($this->fp);$this->fp=null;}}function initiate($tG='read'){if(empty($this->filename)){$this->fp=tmpfile();return$this;}if(!file_exists($this->filename)){@mkdir(dirname($this->filename),0755,true);touch($this->filename,0666);}$sG=($tG==='read')?'rb':'wb';$this->fp=fopen($this->filename,$sG);return$this;}function isBOM(){return false;}function isStopNearStart(){return false;}function getIndexSize(){$DB=$this->isStopNearStart()?2:1;return$this->term_size*$DB+$this->offset_size;}function tell(){return ftell($this->fp);}function seek($fB,$kD=SEEK_SET){if($kD===SEEK_SET){$fB=abs($fB);}else if($kD===SEEK_END){$fB=-abs($fB);}$D=fseek($this->fp,$fB,$kD);return$D===0;}function truncate($qG=0){return ftruncate($this->fp,$qG);}function read($O=1){if($O===1){return fgetc($this->fp);}else if($O>1){return fread($this->fp,$O);}}function readString($R=''){while(1){$fD=$this->read();if($fD===false||ord($fD)===0){break;}$R.=$fD;}return$R;}function readHex($O=1){$g=bin2hex($this->read($O));if(!$this->isBOM()&&$O>1){$g=implode('',array_reverse(str_split($g,2)));}return$g;}function readInt($O=4){$F='C';if($O===2){$F=$this->isBOM()?'n':'v';}else if($O===4){$F=$this->isBOM()?'N':'V';}else if($O===8){$F=$this->isBOM()?'J':'P';}$rG=unpack($F.'int',$this->read($O));return$rG['int'];}function readNumber($O=3){$g=$this->readHex($O);return intval($g,16);}function readHeaders(){$this->seek(0);$this->index_first=$this->readInt();$this->index_last=$this->readInt();$O=$this->index_last-$this->index_first;$oB=$this->getIndexSize();if($oB>0){$this->index_total=floor($O/$oB)+1;}return$this->index_total;}function write($H){return fwrite($this->fp,$H);}function writeString($R,$rE=null,$pB=false){$R.=(is_string($rE)?$rE:chr(0));return$pB?$R:$this->write($R);}function writeHex($g,$O=false,$pB=false){if(empty($O)){$O=ceil(strlen($g)/2);}$g=self::padHex($g,$O,'left');if(!$this->isBOM()&&$O>1){$g=implode('',array_reverse(str_split($g,2)));}$nC=@hex2bin($g);return$pB?$nC:$this->write($nC);}function writeInt($H,$O=4,$pB=false){$F='C';if($O===2){$F=$this->isBOM()?'n':'v';}else if($O===4){$F=$this->isBOM()?'N':'V';}else if($O===8){$F=$this->isBOM()?'J':'P';}$nC=pack($F,$H);return$pB?$nC:$this->write($nC);}function writeNumber($H,$O=3,$pB=false){$g=dechex(intval($H));return$this->writeHex($g,$O,$pB);}function writeHeaders($dD=''){$this->seek(0);$this->writeInt($this->index_first);$this->writeInt($this->index_last);if($dD){$this->writeString($dD);}}function writeOffset($fB){return$this->writeNumber($fB,$this->offset_size);}function appendIndexes(Binary&$uC){$this->index_first=$this->tell();$O=$uC->tell();if($O===0){$uC->seek(0,SEEK_END);$O=$uC->tell();}$uC->seek(0);$this->write($uC->read($O));$oB=$this->getIndexSize();$this->index_last=$this->tell()-$oB;return$this->writeNumber($fB,$this->term_size);}function compare($r,$iD,$oB){$this->seek($this->index_first+$r*$oB);$EG=$this->readHex($this->term_size);$this->seek(-$this->term_size,SEEK_CUR);return strcmp($iD,$EG);}static function binSearch(&$X,$V,$iD,$xB,$oB){$bD=0;$mD=$xB;do{$gD=$bD+floor(($mD-$bD)/2);$AE=$X->$V($gD,$iD,$oB);if($AE>0){$bD=$gD;}else if($AE<0){$mD=$gD;}else{break;}}while($mD-$bD>1);return$AE;}static function padHex($g,$O,$MD='left'){if(is_int($g)){$g=dechex($g);}$RF=(strtolower($MD)==='left')?STR_PAD_LEFT:STR_PAD_RIGHT;return str_pad($g,$O*2,'0',$RF);}}use \Cute\Utility\Word;use \DateTime;use \DateTimeZone;class Calendar extends DateTime{protected$timestamp=0;function __construct($xD='now',$XB=null){if(!is_null($XB)){$XB=new DateTimeZone($M);}if(is_numeric($xD)){parent::__construct('now',$XB);$this->setTimestamp($xD);}else{parent::__construct($xD,$XB);}}function speak($aD='%F %T'){$aD=str_replace('%v','{%w}',$aD);$D=strftime($aD,$this->getTimestamp());if(strpos($aD,'{%w}')!==false){static$tF=array('0'=>'日','1'=>'一','2'=>'二','3'=>'三','4'=>'四','5'=>'五','6'=>'六');$D=Word::replaceWith($D,$tF,'{','}');}return$D;}function thisMonthBegin(){return new self($this->format('Y-m-01'));}function thisMonthEnd(){return new self($this->format('Y-m-01').' +1 month -1 day');}function nextMonthBegin(){return new self($this->format('Y-m-01').' +1 month');}static function parseDurtion($VB){if(empty($VB)){return 0;}if(is_int($VB)||is_float($VB)){return$VB;}if(is_string($VB)){$BF=strtolower(substr($VB,-1));if(is_numeric($BF)){return floatval($VB);}$VB=trim(substr($VB,0,-1));$EB=1;switch($BF){case'w':$EB*=7;case'd':$EB*=24;case'h':$EB*=60;case'm':$EB*=60;}return floatval($VB)*$EB;}}static function getSpringDay($kB){static$mE=array('20'=>4.6295,'21'=>3.87,'22'=>4.15);$kB=intval($kB);$CF=strval(ceil($kB/100));$dE=$kB%100;$kF=array_key_exists($CF,$mE)?$mE[$CF]:4;return floor($dE*0.2422+$kF)-floor(($dE-1)/4);}function getBirthAnimalIndex(){$kB=intval($this->format('Y'));$VD=intval($this->format('m'));$vD=intval($this->format('d'));$pD=$VD*100+$vD;if($pD<200+self::getSpringDay($kB)){$kB-=1;}$f=($kB-1900)%12;return$f;}function getHoroscopeIndex(){$hF=array(120,219,321,420,521,622,723,823,923,1024,1123,1222,);$VD=intval($this->format('m'));$vD=intval($this->format('d'));$pD=$VD*100+$vD;$f=$VD-1;if($pD<$hF[$f]){$f=($f==0)?11:$f-1;}return$f;}}class Inflect{protected static$plural=array('/(quiz)$/i'=>"$1zes",'/^(ox)$/i'=>"$1en",'/([m|l])ouse$/i'=>"$1ice",'/(matr|vert|ind)ix|ex$/i'=>"$1ices",'/(x|ch|ss|sh)$/i'=>"$1es",'/([^aeiouy]|qu)y$/i'=>"$1ies",'/(hive)$/i'=>"$1s",'/(?:([^f])fe|([lr])f)$/i'=>"$1$2ves",'/(shea|lea|loa|thie)f$/i'=>"$1ves",'/sis$/i'=>"ses",'/([ti])um$/i'=>"$1a",'/(tomat|potat|ech|her|vet)o$/i'=>"$1oes",'/(bu)s$/i'=>"$1ses",'/(alias)$/i'=>"$1es",'/(octop)us$/i'=>"$1i",'/(ax|test)is$/i'=>"$1es",'/(us)$/i'=>"$1es",'/s$/i'=>"s",'/$/'=>"s");protected static$singular=array('/(quiz)zes$/i'=>"$1",'/(matr)ices$/i'=>"$1ix",'/(vert|ind)ices$/i'=>"$1ex",'/^(ox)en$/i'=>"$1",'/(alias)es$/i'=>"$1",'/(octop|vir)i$/i'=>"$1us",'/(cris|ax|test)es$/i'=>"$1is",'/(shoe)s$/i'=>"$1",'/(o)es$/i'=>"$1",'/(bus)es$/i'=>"$1",'/([m|l])ice$/i'=>"$1ouse",'/(x|ch|ss|sh)es$/i'=>"$1",'/(m)ovies$/i'=>"$1ovie",'/(s)eries$/i'=>"$1eries",'/([^aeiouy]|qu)ies$/i'=>"$1y",'/([lr])ves$/i'=>"$1f",'/(tive)s$/i'=>"$1",'/(hive)s$/i'=>"$1",'/(li|wi|kni)ves$/i'=>"$1fe",'/(shea|loa|lea|thie)ves$/i'=>"$1f",'/(^analy)ses$/i'=>"$1sis",'/((a)naly|(b)a|(d)iagno|(p)arenthe|(p)rogno|(s)ynop|(t)he)ses$/i'=>"$1$2sis",'/([ti])a$/i'=>"$1um",'/(n)ews$/i'=>"$1ews",'/(h|bl)ouses$/i'=>"$1ouse",'/(corpse)s$/i'=>"$1",'/(us)es$/i'=>"$1",'/s$/i'=>"");protected static$irregular=array('move'=>'moves','foot'=>'feet','goose'=>'geese','sex'=>'sexes','child'=>'children','man'=>'men','tooth'=>'teeth','person'=>'people');protected static$uncountable=array('sheep','fish','deer','series','species','money','rice','information','equipment');protected static$abbreviations=array('AD','API','B2B','B2C','C2C','CEO','CFO','COO','CTO','DB','DSA','GEO','GPS','HTML','HTTP','ID','IO','IP','IQ','MD5','MTV','MV','MVC','NBA','OK','P2P','PC','PV','PDF','PHP','QQ','RMB','RSA','SOHO','SHA','SQL','TV','UI','URI','URL','USA','VIP','WC','WEB','WAP','WIFI','XML',);static function pluralize($R){if(in_array(strtolower($R),self::$uncountable))return$R;foreach(self::$irregular as$j=>$D){$j='/'.$j.'$/i';if(preg_match($j,$R))return preg_replace($j,$D,$R);}foreach(self::$plural as$j=>$D){if(preg_match($j,$R))return preg_replace($j,$D,$R);}return$R;}static function singularize($R){if(in_array(strtolower($R),self::$uncountable))return$R;foreach(self::$irregular as$D=>$j){$j='/'.$j.'$/i';if(preg_match($j,$R))return preg_replace($j,$D,$R);}foreach(self::$singular as$j=>$D){if(preg_match($j,$R))return preg_replace($j,$D,$R);}return$R;}static function pluralizeIf($DB,$R){if($DB==1)return"1 $R";else return$DB." ".self::pluralize($R);}static function camelize($R,$ZF=false){$gC=explode('_',$R);if($ZF){$lE=count($gC)-1;$gC[$lE]=self::pluralize($gC[$lE]);}foreach($gC as&$q){$q=ucfirst($q);if(strlen($q)>1&&strlen($q)<=4){$FC=strtoupper($q);if(in_array($FC,self::$abbreviations)){$q=$FC;}}}return implode('',$gC);}static function flatten($R,$YF='_'){$j='/([A-Z][A-Z0-9]*(?=$|[A-Z][a-z0-9])|[A-Za-z][a-z0-9]+)/';preg_match_all($j,$R,$bB);return strtolower(implode($YF,$bB[0]));}}class Polling{protected$channels=array();function __construct(array$VF=array()){$this->channels=$VF;}function randRoll(){static$f=0;if($f===0){shuffle($this->channels);$f=count($this->channels);}return$this->channels[--$f];}function roundRobin(&$ND,$aF=1){if(count($this->channels)<2){return current($this->channels);}$JD=null;$pE=0;$uD=0;foreach($this->channels as$JB=>$i){$MC=$i['weight']*$aF;$uD+=$MC;$i['last_value']+=$MC;if(empty($ND)&&$i['last_value']>=$pE){$JD=$JB;$pE=$i['last_value'];}}if(!empty($ND)){$this->channels[$ND]['last_value']-=$uD;return$this->channels[$ND];}else if(!is_null($JD)){$this->channels[$JD]['last_value']-=$uD;return$this->channels[$JD];}}}class Word{static$digits='0123456789';static$chars='〇一二三四五六七八九十百千万亿';static$caps='零壹贰叁肆伍陆柒捌玖拾佰仟萬億';protected$content='';function __construct($c=''){$this->content=$c;}static function hasNonASCII($R){return preg_match('/[^\x20-\x7f]/',$R);}static function mbStrSplit($R){$wD=self::hasNonASCII($R)?3:1;return str_split($R,$wD);}static function mbStrtr($R,$eD,$jD){$eD=self::mbStrSplit($eD);$jD=self::mbStrSplit($jD);return str_replace($eD,$jD,$R);}static function num2char($cF,$FC=false){$dF=$FC?self::$caps:self::$chars;return self::mbStrtr(strval($cF),self::$digits,$dF);}static function spell($AD,$FC=false){$eF=new\NumberFormatter('zh_CN',\NumberFormatter::SPELLOUT);$WE=$eF->format($AD);if($FC){$WE=self::mbStrtr($WE,self::$chars,self::$caps);}return$WE;}static function replaceWith($c,array$T=array(),$v='',$tE=''){if(empty($T)){return$c;}if(empty($v)&&empty($tE)){$VE=&$T;}else{$VE=array();foreach($T as$C=>&$E){$VE[$v.$C.$tE]=$E;}}$c=strtr($c,$VE);return$c;}static function randHash($Z=6){$Z=$Z>32?32:$Z;$fF=md5(mt_rand().time());$bF=substr($fF,0,$Z);return$bF;}static function randString($Z=6,$WF=2,$ZC=''){if(empty($ZC)){$ZC='abcdefghijkmnpqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ23456789';}srand((float)microtime()*1000000);$FF='';$DD=ceil($Z/$WF);while($Z>0){$ZC=str_shuffle($ZC);$FF.=substr($ZC,0,$DD);$Z-=$DD;$DD=min($Z,$DD);}return$FF;}function fetchFirstURL(){if(preg_match('/^http[^\x23-\x76]/i',$this->content,$bB)){return$bB[1];}}function getNumbers($XF=true){$EB=preg_match_all('/[\d.]+/',$this->content,$bB);if($EB===0||$EB===false){return false;}$AD=implode(current($bB));return$XF?intval($AD):$AD;}function ver2int(){$dD=$this->getNumbers(false);$KE=array_map('intval',explode('.',$dD));$KE=array_pad($KE,3,0);return intval(vsprintf('%d%02d%02d',$KE));}}}
namespace Cute\View{class Compiler{protected$env=null;protected$source_dir='';protected$compiled_dir='';function __construct(){\app()->import('Twig',VENDOR_ROOT.'/Twig/lib');$this->env=new\Twig_Environment();}function addFunction($A,$gF=null){$pF=new\Twig_SimpleFunction($A,$gF);return$this->env->addFunction($A,$pF);}function setSourceDir($jC){$this->source_dir=rtrim($jC,' /\\');if(!file_exists($this->source_dir)){@mkdir($this->source_dir,0777,true);}$qF=new\Twig_Loader_Filesystem(array($this->source_dir));$this->env->setLoader($qF);return$this;}function setCompiledDir($p){$p=rtrim($p,' /\\');if($this->compiled_dir!==$p){$this->compiled_dir=$p;}if(!file_exists($this->compiled_dir)){@mkdir($this->compiled_dir,0777,true);}return$this;}function isSourceRelational(){return true;}function compileFile($qB,$lC,array$T=array()){$c=$this->env->loadTemplate($qB)->render($T);file_put_contents($lC,$c,LOCK_EX);}function compileTpl($n,$qB='',array$T=array()){$n=ltrim(str_replace('\\','/',$n),'/');if(empty($qB)){$qB=$this->source_dir.'/'.$n;}$lC=$this->compiled_dir.'/'.$n;$p=dirname($lC);if(!is_dir($p)){mkdir($p,0777,true);}if($this->isSourceRelational()){$qB=substr($qB,strlen($this->source_dir)+1);}$this->compileFile($qB,$lC,$T);return$lC;}function compileAll($U=false,array$T=array()){if(is_null($U)||$U===false){$U=$this->source_dir;}else{$U=rtrim(str_replace('\\','/',$U),'/');}$DB=0;$oF=scandir($U);foreach($oF as$_C){if($_C==='.'||$_C==='..'){continue;}$QD=$U.'/'.$_C;if(is_dir($QD)){$this->compileAll($QD);}else{$n=substr($QD,strlen($this->source_dir));$this->compileTpl($n,$QD,$T);$DB++;}}return$DB;}}use \Cute\View\Compiler;class Templater{var$compiler=null;var$globals=array();protected$source_dir='';protected$extend_files=array();protected$template_blocks=array();protected$current_block='';function __construct($jC,$p=false){$this->setSourceDir($jC);if($p){$this->setCompileDir($p);}}function setSourceDir($jC){$this->source_dir=rtrim($jC,' /\\');if(!file_exists($this->source_dir)){@mkdir($this->source_dir,0777,true);}}function setCompileDir($p){if(is_null($this->compiler)){$this->compiler=new Compiler();}$p=rtrim($p,' /\\');$this->compiler->setSourceDir($this->source_dir);$this->compiler->setCompiledDir($p);$this->setSourceDir($p);return$this;}function updateGlobals(array$nF){if(func_num_args()===1){$this->globals=array_merge($this->globals,$nF);}else{$B=func_get_args();array_unshift($B,$this->globals);$this->globals=exec_function_array('array_merge',$B);}return$this;}function updateFunctions(array$jF){$iF=$this->compiler;foreach($jF as$A=>$b){$iF->addFunction($A,$b);}}function prepareFile($n){if($this->compiler){return$this->compiler->compileTpl($n,'',$this->globals);}else{return$this->source_dir.'/'.$n;}}function render($n,array$T=array()){extract($this->globals);extract($T);include$this->prepareFile($n);if(!empty($this->extend_files)){$lF=array_pop($this->extend_files);foreach($this->extend_files as$AB){include$this->prepareFile($AB);}extract($this->template_blocks);include$this->prepareFile($lF);}}function extendTpl($n){array_push($this->extend_files,$n);}function includeTpl($n,array$T=array()){extract($this->globals);extract($T);ob_start();include$this->prepareFile($n);$mF=trim(ob_get_clean());echo$mF;}function blockStart($OF='content'){$this->current_block=$OF;ob_start();}function blockEnd(){$IF=trim(ob_get_clean());$this->template_blocks[$this->current_block]=$IF;}}}
namespace Cute\Widget{use \Cute\Utility\Word;class Captcha{const ENCRYPT_SALT='captcha_code_salt';const FILENAME_PREFIX='cc_';var$phrase_size=6;var$width=80;var$height=30;var$font=null;var$finger_print=null;protected$builder=null;protected$savedir='';protected$saveurl='';function __construct($h=''){\app()->import('Gregwar',VENDOR_ROOT);$this->builder=new\Gregwar\Captcha\CaptchaBuilder();if(!empty($h)){$this->phrase_size=strlen($h);$this->builder->setPhrase($h);}else{$this->refresh();}$this->savedir=APP_ROOT.'/public/assets/captcha';@mkdir($this->savedir,0755,true);$this->saveurl=app()->getAssetURL().'/captcha';}static function newInstance($TF=6,$wD=80,$QF=30,$SF=null,$PF=null){$mB=new self();$mB->phrase_size=$TF;$mB->width=$wD;$mB->height=$QF;$mB->font=$SF;$mB->finger_print=$PF;return$mB;}protected static function encrypt($h){return md5(strtolower($h).self::ENCRYPT_SALT);}static function clean($U,$LE=0.3,$PB=60){$JF=mt_rand(1,10000)/10000;if($LE<=0||$LE>=1||$JF<=$LE){$KF=time()-$PB;$PD=glob($U.'cc_*.jpg');foreach($PD as$AB){if(fileatime($AB)<$KF){unlink($AB);}}}}function refresh(){$h=Word::randString($this->phrase_size);$this->builder->setPhrase($h);return$this;}function build(array$B=array()){$LF=array($this->width,$this->height,$this->font,$this->finger_print,);exec_method_array($this->builder,'build',$B+$LF);return$this->builder;}function show(){@session_start();$h=$this->builder->getPhrase();$_SESSION['phrase']=self::encrypt($h);@header('Content-Type: image/jpeg');$this->build(func_get_args());return$this->builder->output();}function save(){self::clean($this->savedir,0.3,60);$Y=uniqid(self::FILENAME_PREFIX).'.jpg';$this->build(func_get_args());$this->builder->save($this->savedir.'/'.$Y);$h=$this->builder->getPhrase();$o=$this->saveurl.'/'.$Y.'#'.self::encrypt($h);die($o);}}use \Cute\Cache\Subject;class Counter extends Subject{protected$name='';protected$value=0;protected$maxium=0;function __construct($A,$E=0,$MF=0){$this->name=$A;$this->value=intval($E);$this->maxium=intval($MF);}function setCache($I='\\Cute\\Cache\\RedisCache'){$cD=new$I($this->name);$cD->share($this->value,'intval');$cD->initiate()->readData();$this->attach($cD);return$cD;}function findCaches(){return$this->observers;}function increase($NF=1){$this->value+=$NF;if($this->maxium>0){$this->value=$this->value%$this->maxium;}$this->notify();return$this->value;}}}