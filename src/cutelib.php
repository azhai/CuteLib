<?php
namespace{defined('VENDOR_ROOT')or define('VENDOR_ROOT',APP_ROOT.'/vendor');defined('APP_CLASS')or define('APP_CLASS','\\Cute\\Website');defined('SQL_VERBOSE')or define('SQL_VERBOSE',true);defined('ERROR_LEVEL')or define('ERROR_LEVEL',E_ALL&~E_DEPRECATED&~E_NOTICE);@error_reporting(ERROR_LEVEL);if(!class_exists('\\Cute\\Importer')){require_once SRC_ROOT.'/Cute/Importer.php';}function app($GE=''){static$l=null;if(is_null($l)&&$GE){$IE=\Cute\Importer::getInstance();$IE->addNamespace('Cute',SRC_ROOT);$sB=\Cute\Base\Storage::newInstance($GE);$I=constant('APP_CLASS');$l=new$I($sB);$l->install($IE,array('import'=>'addNamespace'));$l->initialize();}return$l;}function starts_with($yC,$JC){return strncmp($yC,$JC,strlen($JC))===0;}function ends_with($yC,$JC){$ED=strlen($JC);return$ED===0||(strlen($yC)>=$ED&&substr_compare($yC,$JC,-$ED)===0);}function convert($h,$DC='UTF-8'){$DC=strtoupper($DC);if(function_exists('mb_detect_encoding')){return mb_detect_encoding($h,$DC,true)?$h:mb_convert_encoding($h,$DC,'UTF-8, GBK');}else if(function_exists('iconv')){$eE=$DC==='UTF-8'?'GBK':'UTF-8';return iconv($eE,$DC.'//IGNORE',$h);}}function b64decode($h){if(preg_match('!([A-Za-z0-9+/= ]+)!',$h,$QB)){$h=$QB[1];}return base64_decode($h);}function exec_function_array($b,array$A=array()){switch(count($A)){case 0:return$b();case 1:return$b($A[0]);case 2:return$b($A[0],$A[1]);case 3:return$b($A[0],$A[1],$A[2]);case 4:return$b($A[0],$A[1],$A[2],$A[3]);case 5:return$b($A[0],$A[1],$A[2],$A[3],$A[4]);default:if(is_object($b)){$_=new ReflectionMethod($b,'__invoke');return$_->invokeArgs($b,$A);}else if(is_callable($b)){$_=new ReflectionFunction($b);return$_->invokeArgs($A);}}}function exec_method_array($EB,$X,array$A=array()){if(is_object($EB)){switch(count($A)){case 0:return$EB->{$X}();case 1:return$EB->{$X}($A[0]);case 2:return$EB->{$X}($A[0],$A[1]);case 3:return$EB->{$X}($A[0],$A[1],$A[2]);case 4:return$EB->{$X}($A[0],$A[1],$A[2],$A[3]);case 5:return$EB->{$X}($A[0],$A[1],$A[2],$A[3],$A[4]);}}if(method_exists($EB,$X)){$_=new ReflectionMethod($EB,$X);if($_->isPublic()&&!$_->isAbstract()){if($_->isStatic()){return$_->invokeArgs(null,$A);}else{return$_->invokeArgs($EB,$A);}}}}function exec_construct_array($I,array$A=array()){switch(count($A)){case 0:return new$I();case 1:return new$I($A[0]);case 2:return new$I($A[0],$A[1]);case 3:return new$I($A[0],$A[1],$A[2]);case 4:return new$I($A[0],$A[1],$A[2],$A[3]);case 5:return new$I($A[0],$A[1],$A[2],$A[3],$A[4]);default:if(class_exists($I)){$_=new ReflectionClass($I);return$_->newInstanceArgs($A);}}}}
namespace Cute{use \Cute\Importer;use \Cute\Factory;use \Cute\Base\Storage;abstract class Application{protected$shortcuts=array();function __construct(Storage&$sB){$this->install($sB,array('getConfig'));$aE=new Factory($sB);$this->install($aE,array('load'));}function initialize(){return$this;}function install($aD,array$cE){foreach($cE as$CD=>$X){$CD=strtolower(is_numeric($CD)?$X:$CD);$this->shortcuts[$CD]=array($aD,$X);}return$this;}function __call($B,$A){$B=strtolower($B);if(isset($this->shortcuts[$B])){list($aD,$X)=$this->shortcuts[$B];return exec_method_array($aD,$X,$A);}}abstract function run();}abstract class Command{protected$app=null;protected$args=array();protected$pid=0;var$cmdfile='';function __construct($l,$HD,array$ZB=array()){$this->app=$l;$this->cmdfile=$HD;list($A,$CB)=self::parse($ZB);$this->args=array_merge($A,$CB);}function __clone(){$this->args=array_change_key_case($this->args);}function __toString(){$A=array();foreach($this->args as$D=>$C){if(is_numeric($D)){$A[]=$C;}else if($C===true){$A[]=strlen($D)===1?" -$D":" --$D";}else{$A[]=" --$D='$C'";}}$iB=$this->cmdfile;$iB.=' '.substr(__CLASS__,0,-strlen('Command'));$iB.=' '.implode(' ',$A);return$iB;}static function parse(array$ZB){$A=array();$CB=array();foreach($ZB as$PC=>$z){$z=trim($z);if($z==='--'){$A[]=implode(' ',array_slice($ZB,$PC+1));break;}if(substr($z,0,1)!=='-'){$A[]=$z;}else if(substr($z,1,1)!=='-'){$FC=str_split(substr($z,1));foreach($FC as$D){$CB[$D]=true;}}else{if(($wD=strpos($z,'='))!==false){$D=substr($z,2,$wD-2);$C=substr($z,$wD+1);}else{$D=substr($z,2);$C=true;}if(!array_key_exists($D,$CB)){$CB[$D]=$C;}else{if(!is_array($CB[$D])){$CB[$D]=array($CB[$D]);}$CB[$D][]=$C;}}}return array($A,$CB);}function addArg($C,$D=false){if($D===false||is_null($D)){$this->args[]=$C;}else{$this->args[$D]=$C;}return$this;}function getArg($D=false,$M=null){if($D===false||is_null($D)){return$this->args;}if(isset($this->args[$D])){return$this->args[$D];}else{return$M;}}function popArg($D){if($D===false||is_null($D)){return;}if(isset($this->args[$D])){$C=$this->args[$D];unset($this->args[$D]);return$C;}}function readPid($tB=null){if(!is_null($tB)&&is_readable($tB)){$jB=trim(file_get_contents($tB));if(is_numeric($jB)){$this->pid=$jB;}}return$this->pid;}function isRunning(){if($this->pid>0){try{$E=shell_exec(sprintf('ps %d',$this->pid));return substr_count($E,"\n")>=2;}catch(\Exception$RB){}}return false;}function wait($jE=0.1){while($this->isRunning()){usleep($jE*1000000);}return true;}function stop(){if($this->pid>0&&$this->isRunning()){return posix_kill($this->pid,SIGTERM);}}function fork($tB=null,array$QC=array()){$AC=clone$this;$AC->args=array_merge($AC->args,$QC);$iB=strval($AC);$l=$AC->app;if($l->outfile!==1){$iB.=' > '.$l->getFileSymbol($l->outfile,true);}if($l->errfile!==2){$iB.=' 2 > '.$l->getFileSymbol($l->errfile,true);}if($jB=shell_exec($iB.' & echo $!')){$jB=trim($jB);$AC->pid=intval($jB);if(!is_null($tB)){file_put_contents($tB,$jB.PHP_EOL,LOCK_EX);}}return$AC->pid;}function loop($w=1,$gC=0,$lD=0){if($gC>0){$gC=intval($gC)+time();}do{$this->execute();if($w>0){$w--;}if($lD>0){usleep($lD*1000000);}}while($w===0||$gC<0||$gC<time());}abstract function execute();}use \Cute\Application;use \Cute\Command;use \Cute\Utility\Inflect;class Console extends Application{const STDIN='php://stdin';const STDOUT='php://stdout';const STDERR='php://stderr';const DEVNULL='/dev/null';const COLOR_BLACK=90;const COLOR_RED=91;const COLOR_GREEN=92;const COLOR_YELLOW=93;const COLOR_BLUE=94;const COLOR_MAGENTA=95;const COLOR_CYAN=96;const COLOR_WHITE=97;protected$color=false;var$outfile=1;var$errfile=null;function initialize(){return$this;}static function getFileSymbol($q,$WD=false){if(is_null($q)){return self::DEVNULL;}else if(is_int($q)){if($q===0){return$WD?'&0':self::STDIN;}else if($q===1){return$WD?'&1':self::STDOUT;}else if($q===2){return$WD?'&2':self::STDERR;}}return strval($q);}static function appendTo($dB,$hB=false,$_B=null){if(empty($_B)&&$_B!==0){return 0;}if(is_int($_B)&&is_int($hB)){$dB=sprintf("\033[%dm%s\033[%dm",$hB,$dB,0);}$_B=self::getFileSymbol($_B);return file_put_contents($_B,$dB,FILE_APPEND|LOCK_EX);}function setColor($hB){if(is_string($hB)){$hB='COLOR_'.strtoupper($hB);$this->color=constant(__CLASS__.'::'.$hB);}return$this;}function write($dB){if(func_num_args()>1){$dB=exec_function_array('sprintf',func_get_args());}return self::appendTo($dB,$this->color,$this->outfile);}function writeln($dB){$A=func_get_args();$A[0].=PHP_EOL;return exec_method_array($this,'write',$A);}function mount($Y){$mD=func_get_args();foreach($mD as&$Y){$Y=rtrim($Y,DIRECTORY_SEPARATOR);}$RD=PATH_SEPARATOR.implode(PATH_SEPARATOR,$mD);set_include_path(get_include_path().$RD);return$this;}function run(){if(php_sapi_name()!=='cli'){return;}if($_SERVER['argc']<2){return;}$ZB=$_SERVER['argv'];$HD=array_shift($ZB);$B=array_shift($ZB);$I=Inflect::camelize($B).'Command';@require_once$I.'.php';if(class_exists($I)){$t=new$I($this,$HD,$ZB);return$t->execute();}}}class Factory{protected$storage=null;protected$objects=array();function __construct(Storage&$sB){$this->storage=$sB;}function normalize($I){return rtrim($I,'\\');}function create($I,$B='default'){$I=$this->normalize($I);$xC=$this->storage->getSectionOnce($I);$U=$xC->getArray($B);if($B!=='default'){$U=array_merge($xC->getArray('default'),$U);}if(class_exists($I)){foreach($U as$D=>&$C){if(starts_with($D,'\\')){$C=$this->load($D,$C);}}return exec_construct_array($I,array_values($U));}}function load($I,$B='default'){$I=$this->normalize($I);if(!isset($this->objects[$I])){$this->objects[$I]=array();if(!isset($this->objects[$I][$B])){$this->objects[$I][$B]=$this->create($I,$B);}}return$this->objects[$I][$B];}}class Handler{protected$app=null;protected$succor=null;function __construct($CC=null){$this->app=app();$this->succor=$CC;}function init($X){return method_exists($this,$X)?$X:'';}function __invoke(){$X=$this->app->getMethod();$A=func_get_args();if($X=$this->init($X)){return exec_method_array($this,$X,$A);}else if($this->succor){return exec_function_array($this->succor,$A);}else{return$this->app->abort(403);}}}if(!function_exists('trait_exists')){function trait_exists($I,$wC){return false;}}final class Importer{private static$instance=null;private$classes=array();private$namespaces=array();private function __construct(){}static function getInstance(){if(is_null(self::$instance)){self::$instance=new self();self::$instance->register();}return self::$instance;}static function exists($I,$wC=true){return class_exists($I,$wC)||interface_exists($I,$wC)||trait_exists($I,$wC);}function autoload($I){$I=trim($I,'\\_');if(isset($this->classes[$I])){require_once$this->classes[$I];return self::exists($I,false);}$VF=$this->checkNamespace($I);return($VF===true);}function register(){return spl_autoload_register(array($this,'autoload'));}function addClass($T,$I){$uD=func_get_args();$T=array_shift($uD);if(is_readable($T)){foreach($uD as$I){$this->classes[trim($I,'\\')]=$T;}}ksort($this->classes);return$this;}function addNamespaceStrip($o,$S){$o=trim($o,'\\');$S=rtrim($S,'\\/');$this->namespaces[$o]=$S;ksort($this->namespaces);return$this;}function addNamespace($o,$S){$o=trim($o,'\\');$XB=strtok($o,'\\_');$S=rtrim($S,'\\/').DIRECTORY_SEPARATOR.$XB;return$this->addNamespaceStrip($o,$S);}function checkNamespace($I){$XB=strtok($I,'\\_');$W=strlen($XB)+1;if(isset($this->namespaces[$XB])){$Y=$this->namespaces[$XB];}else if(isset($this->namespaces[''])){$Y=$this->namespaces[''];}else{return false;}$y=$Y.DIRECTORY_SEPARATOR;$y.=str_replace(array('\\','_'),DIRECTORY_SEPARATOR,substr($I,$W));if(file_exists($y.'.php')){require_once$y.'.php';if(self::exists($I,false)){return true;}}while($XB){$Y.=DIRECTORY_SEPARATOR.$XB;if(file_exists($Y.'.php')){require_once$Y.'.php';if(self::exists($I,false)){return true;}}if(!file_exists($Y)){return false;}$XB=strtok('\\_');}}}use \Cute\Context\Router;class Website extends Application{protected$method='';var$url='';var$rule='';function initialize(){$qB=Router::getCurrent();$this->install($qB,array('dispatch','abort','redirect'));$this->install('\\Cute\\Context\\Input',array('getClientIP','input'=>'getInstance',));return$this;}function route($Y,$v){$qB=Router::getCurrent();return$qB->route($Y,$v);}function mount($u,$MC='*.php'){$qB=Router::getCurrent();$qB->mount($u,$MC);return$this;}function getMethod(){if(empty($this->method)){$oB=$this->input('SERVER');$X=$oB->request('_method','');if(empty($X)){$X=$oB->get('REQUEST_METHOD','GET');}$this->method=strtolower($X);}return$this->method;}function run(){$NF=$this->getConfig('route_key','r');$Y=$this->input('GET')->get($NF,'/');try{$AD=$this->dispatch($Y);$CC=null;foreach($AD['handlers']as$v){if(empty($v)){continue;}if(is_string($v)&&class_exists($v,true)){$v=new$v($CC);}if($v&&is_callable($v)){$CC=&$v;}}if($CC){$this->url=$AD['url'];$this->rule=$AD['rule'];$tD=exec_function_array($CC,$AD['args']);}}catch(\Exception$RB){$tD=strval($RB);}return die($tD);}}}
namespace Cute\Base{trait Deferring{protected$jF=false;function defer(){register_shutdown_function(function($XF){$XF->__destruct();},$this);}function __destruct(){if($this->closed===false){$this->close();}$this->closed=true;}function close(){}}trait Mocking{protected$_C=null;private function __construct(&$_C=null){$this->inner=$_C;}static function mock(&$_C=null){$PB=new self($_C);return$PB->isReady()?$PB->inner:$PB;}function __call($B,$OD){return false;}function __set($B,$C){return false;}function __get($B){return;}function isReady(){return!is_null($this->inner);}}use \ArrayObject;class Storage extends ArrayObject{const CONFIG_SECTION_NAME='configs';function __construct($oB=array(),$gF=ArrayObject::ARRAY_AS_PROPS){parent::__construct($oB,$gF);}static function newInstance($T,$fD=false){$T.=empty($fD)?'':$fD;assert(is_readable($T));return new self(include$T);}function getItem($B,$M=null){$MB=$this->offsetGet($B);return is_null($MB)?$M:$MB;}function getArray($B,array$M=array()){$U=$this->getItem($B);return is_array($U)?$U:$M;}function getSection($B){$U=$this->getArray($B,array());return new self($U);}function getSectionOnce($B){$U=$this->getItem($B);if(!($U instanceof self)){$U=new self($U);$this->offsetSet($B,$U);}return$U;}function getConfig($B,$M=null){$xC=$this->getSectionOnce(self::CONFIG_SECTION_NAME);return$xC->getItem($B,$M);}}}
namespace Cute\Context{class Input{protected static$instances=array();protected static$client_ip='-';protected$input_type=null;protected$data=array();protected$done=false;protected function __construct($KB='POST'){$this->input_type=constant('INPUT_'.$KB);if($KB==='REQUEST'){$this->raw_data=$_REQUEST;}assert(!is_null($this->input_type));}function __call($B,$OD){if(starts_with($B,'get')&&count($OD)>0){$G=substr($B,3);@list($D,$M)=$OD;return$this->get($D,$M,$G);}}static function getInstance($KB='POST'){$KB=strtoupper($KB);if(!isset(self::$instances[$KB])){$TB=new static($KB);self::$instances[$KB]=$TB;}return self::$instances[$KB];}static function request($D,$M=null,$G=false){$eF=self::getInstance('POST');$C=$eF->get($D,$M,$G);if($C===$M){$ZF=self::getInstance('GET');$C=$ZF->get($D,$M,$G);}return$C;}static function getClientIP(){if(strlen(self::$client_ip)>=7){return self::$client_ip;}$FC=array('HTTP_CLIENT_IP','HTTP_X_REAL_IP','HTTP_X_FORWARDED_FOR','HTTP_X_FORWARDED','HTTP_X_CLUSTER_CLIENT_IP','HTTP_FORWARDED_FOR','HTTP_FORWARDED','REMOTE_ADDR');$hF=self::getInstance('SERVER');foreach($FC as$D){$dC=$hF->get($D);if($dC&&strlen($dC)>=7){self::$client_ip=$dC;break;}}return self::$client_ip;}static function detectType($G){$G=empty($G)?'string':strtolower($G);foreach(filter_list()as$B){if(ends_with($B,$G)){return filter_id($B);}}}static function coerce($C,$G='raw'){if(is_array($C)){foreach($C as$D=>$hC){if(is_array($G)&&isset($G[$D])){$xD=$G[$D];}else{$xD=$G;}$C[$D]=self::coerce($hC,$xD);}}else{$G=strtolower($G);if($G==='int'||$G==='float'){settype($C,$G);}else if($G==='array'){$C=(array)$C;}else if($G!=='raw'){settype($C,'string');}}return$C;}protected function filterData($D,$G){$G=self::detectType($G);return filter_input($this->input_type,$D,$G);}protected function filterArrayData($nB){if(is_array($nB)){foreach($nB as$D=>&$G){if(is_array($G)){$G['filter']=self::detectType($G['filter']);}else{$G=self::detectType($G);}}}else{$nB=self::detectType($nB);}return filter_input_array($this->input_type,$nB);}function get($D,$M=null,$G=false){if(!array_key_exists($D,$this->data)){if(is_array($M)){$G=array($D=>array('filter'=>$G,'flags'=>FILTER_FORCE_ARRAY));$U=$this->filterArrayData($G);$this->data=array_merge($this->data,$U);}else{$C=$this->filterData($D,$G);if(is_null($C)||$C===false){$C=self::coerce($M,$G);}$this->data[$D]=$C;}}return$this->data[$D];}function all($D=false,$nB=false){if($this->done===false){$this->data=$this->filterArrayData($nB);}if(is_null($this->data)){$this->data=array();}if($D===false){return$this->data;}else if(array_key_exists($D,$this->data)){return$this->data[$D];}}}use \Cute\Context\Input;class Locale{protected$language='';protected$locale_dir='';protected$timezone='Asia/Shanghai';function __construct($ND='',$OB=''){if(empty($ND)){$ND=APP_ROOT.'/protected/locales';}$this->locale_dir=$ND;$this->timezone=$OB;}function detectLanguage(){$oB=Input::getInstance('SERVER');$LB=strstr($oB->get('LANG',''),'.',true);if(empty($LB)){$MF=$oB->get('HTTP_ACCEPT_LANGUAGE','');preg_match_all('/([a-z]{2}\-?[A-Z]{0,2})/',$MF,$QB);foreach($QB[0]as$LB){$LB=str_replace('-','_',$LB);if(file_exists($this->locale_dir.'/'.$LB)){break;}}}return$LB;}function setLocale($LB,$MD='messages'){if($LB){$this->language=$LB;}else{$this->language=$this->detectLanguage();}putenv('LANG='.$this->language);setlocale(LC_ALL,$this->language);bindtextdomain($MD,$this->locale_dir);bind_textdomain_codeset($MD,'UTF-8');textdomain($MD);return$this->language;}function setTimezone($OB){if($OB){$this->timezone=$OB;}@date_default_timezone_set($this->timezone);return$this->timezone;}}class Router{protected static$current=null;static$aliases=array('<int>'=>'([0-9\-]+)','<float>'=>'([0-9\.\-]+)','<num>'=>'([0-9\.\-,]*)','<string>'=>'([a-z0-9\-_]+)','<page>'=>'([0-9]*)/?([0-9]*)/?','<path>'=>'([a-z0-9\-_/])');protected$filename='';protected$prefix='';protected$children=array();protected$items=array();function __construct($T='',$j='/'){$this->filename=$T;$this->prefix=rtrim($j,'/');self::$current=$this;if($T&&is_readable($T)){include_once$T;}}static function getCurrent(){if(is_null(self::$current)){self::$current=new self();}return self::$current;}static function toPrefix($T){$wE=strstr(basename($T),'.');$xE=substr($T,0,-strlen($wE));$j=str_replace(DIRECTORY_SEPARATOR,'/',$xE);return strtolower(rtrim($j,'/'));}static function compileUrl($NB,$yE=false){$NB=preg_quote(strtolower(rtrim($NB,'/')));$FC=array_map('preg_quote',array_keys(self::$aliases));$P=array_values(self::$aliases);$NB=str_replace($FC,$P,$NB);$MC=($yE===false)?'':'(.*)?';return'!^'.$NB.'/?'.$MC.'$!';}function route($Y,&$v){$RC=self::compileUrl($Y);if(func_num_args()>2){$BD=array_slice(func_get_args(),1);}else{$BD=array($v);}$this->items[$RC]=$BD;return$RC;}function mount($u,$MC='*.php'){$u=rtrim($u,DIRECTORY_SEPARATOR);$vC=glob($u.'/'.$MC,GLOB_BRACE);if(!empty($vC)){$vE=strlen($u);foreach($vC as$T){$j=self::toPrefix(substr($T,$vE));$this->children[$j]=$T;}}return$this;}function dispatch($Y,$AE=false){$Y=rtrim(strtolower($Y),' /').'/';if(!$AE){krsort($this->children);}foreach($this->children as$j=>$T){if(starts_with($Y,$j)){$qB=new self($T,$j);$Y=substr($Y,strlen($j));return$qB->dispatch($Y);}}if(!$AE){krsort($this->items);}foreach($this->items as$RC=>$BD){if(preg_match($RC,$Y,$A)===1){$NB=$this->prefix.array_shift($A);return array('handlers'=>&$BD,'args'=>$A,'url'=>$NB,'rule'=>$RC);}}$this->abort(404);return array('handlers'=>array());}function abort($pE=500){return@http_response_code($pE);}function redirect($sE='',$tE=false){$_E=$tE?301:302;@header('Location: '.$sE,true,$_E);return die();}}class Session{}}
namespace Cute\DB{use \DateTime;use \PDO;use \PDOException;use \Cute\DB\Literal;use \Cute\Utility\Inflect;use \Cute\View\Templater;abstract class Database{const DB_ACTION_READ='R';const DB_ACTION_WRITE='W';protected$pdo=null;protected$user='';protected$password='';protected$dbname='';protected$tblpre='';protected$host='';protected$port=0;protected$charset='';protected$past_sqls=array();function __construct($HF,$JF,$s,$uB='',$cC='127.0.0.1',$UB=0,$_D=''){$this->user=$HF;$this->password=$JF;$this->dbname=$s;$this->tblpre=$uB;$this->host=$cC;if(intval($UB)>0){$this->port=intval($UB);}if(!empty($_D)){$this->charset=$_D;}}function getPDO(){if(!$this->pdo){$this->connect($this->dbname,$this->tblpre);}return$this->pdo;}function getPastSQL($s=false,$r=0){if($s===true||$s==='*'){return$this->past_sqls;}$s=empty($s)?$this->dbname:$s;$yD=$this->past_sqls[$s];$r=empty($r)?0:-abs($r);return$r?array_slice($yD,$r,null,true):$yD;}function getDriverName(){$uC=$this->getPDO()->getAttribute(PDO::ATTR_DRIVER_NAME);$uC=strtolower($uC);return$uC==='dblib'?'sqlsrv':$uC;}function inline($i){return new Literal($i);}function quote($i){if(is_null($i)){return Literal::quoteNull();}else if($i instanceof Literal||$i instanceof DateTime){return Literal::quote($i);}else{$G=is_int($i)?PDO::PARAM_INT:PDO::PARAM_STR;return$this->getPDO()->quote($i,$G);}}function embed($F,array$N=array()){foreach($N as&$i){$i=$this->quote($i);}$F=str_replace('?','%s',$F);return vsprintf($F,$N);}function execute($F,array$N=array()){if(!empty($N)){$F=$this->embed($F,$N);}try{$E=$this->getPDO()->exec($F);}catch(PDOException$RB){$V="SQL: $F\n".$RB->getMessage();throw new PDOException($V);}if(SQL_VERBOSE){$this->past_sqls[$this->dbname][]=array('act'=>self::DB_ACTION_WRITE,'sql'=>$F,);}return$E;}function query($F,array$N=array()){try{$a=$this->getPDO()->prepare($F);if($a->execute($N)){$a->setFetchMode(PDO::FETCH_ASSOC);}}catch(PDOException$RB){$F=$this->embed($F,$N);$V="SQL: $F\n".$RB->getMessage();throw new PDOException($V);}if(SQL_VERBOSE){$F=$this->embed($F,$N);$this->past_sqls[$this->dbname][]=array('act'=>self::DB_ACTION_READ,'sql'=>$F,);}return$a;}function fetch($F,array$N=array(),$EC=false){if($a=$this->query($F,$N)){if(is_numeric($EC)){$E=$a->fetchColumn(intval($EC));}else{$E=$a->fetch();if($E&&$EC){$E=isset($E[$EC])?$E[$EC]:null;}}$a->closeCursor();return$E;}}function transact(callable$KF){$TD=$this->getPDO();if($TD->beginTransaction()){$A=func_get_args();array_unshift($A,$this);try{$KF($A);$TD->commit();}catch(PDOException$RB){$TD->rollBack();}}}function listTables(){if(empty($this->tblpre)){$F="SHOW TABLES FROM ?";$i=$this->getDBName();}else{$F="SHOW TABLES LIKE ?";$i=str_replace('_','\_',$this->tblpre).'%';}$E=array();if($a=$this->query($F,array($i))){$FF=strlen($this->tblpre);while($J=$a->fetchColumn(0)){$E[]=substr($J,$FF);}$a->closeCursor();}return$E;}function readFields($J){$K=$this->getColumns($J);$m=array();$DB=array();foreach($K as$H){if($H->isPrimaryKey()){$m[]=$H->name;}$M=$H->default;$DE=$H->getCategory();if($DE==='int'){$M=intval($M);}else if($DE==='float'){$M=floatval($M);}$DB[$H->name]=$M;}return compact('table','pkeys','fields');}function generateModel($S,$J,$R='',$o='',$CF=false){if(empty($R)){$R=$CF?Inflect::singularize($J):$J;$R=Inflect::camelize($R);}$S=rtrim($S,DIRECTORY_SEPARATOR).DIRECTORY_SEPARATOR;if($o){$S.=str_replace('\\',DIRECTORY_SEPARATOR,trim($o));if(!file_exists($S)){mkdir($S,0777,true);}}$T=$S.DIRECTORY_SEPARATOR.$R.'.php';if(class_exists($o.'\\'.$R)){return$T;}$U=$this->readFields($J);$U['name']=$R;$U['ns']=$o;$U['mixin']=null;$U['relations_in_mixin']=false;$zC=$o.'\\'.$R.'Mixin';if(trait_exists($zC,true)){foreach($U['fields']as$HC=>$M){if(property_exists($zC,$HC)){unset($U['fields'][$HC]);}}$U['mixin']=$zC;$U['relations_in_mixin']=method_exists($zC,'getRelations');}$IC=new Templater(SRC_ROOT);ob_start();$IC->render('model_tpl.php',$U);$n="<?php\n\n".trim(ob_get_clean());file_put_contents($T,$n);return$T;}static function csvline($e,$fB="\t",$bC=PHP_EOL,$bB='"',$GC=null){foreach($e as&$MB){if(is_null($MB)){$MB=$GC;}else if(is_string($MB)){if(strpbrk($MB," $fB")!==false){$MB="$bB$MB$bB";}}}return implode($fB,$e).$bC;}abstract function connect($s,$uB='',$vB=false);abstract function getLimit($W,$r=0);abstract function getColumns($J);}use \HandlerSocketi;class HandlerSocket{const HS_PORT_R=9998;const HS_PORT_RW=9999;protected$handler=null;protected$query=null;protected$read_only=false;protected$dbname='';protected$table='';protected$fields=array();protected$index=null;function __construct($s,$cC='127.0.0.1',$UB=0,$DF=false){$this->dbname=$s;$this->read_only=$DF;if(empty($UB)){$UB=$this->read_only?self::HS_PORT_R:self::HS_PORT_RW;}$this->handler=new HandlerSocketi($cC,$UB);}function open($J,$DB){if(is_string($DB)){$DB=explode(',',str_replace(' ','',$DB));}$this->table=$J;$this->fields=$DB;$this->query=null;return$this;}protected function prepare($x=null){if(empty($this->query)||$this->index!==$x){$this->index=$x;$VD=empty($this->index)?array():array('index'=>$this->index);$this->query=$this->handler->open_index($this->dbname,$this->table,$this->fields,$VD);}return$this->query;}function insert(array$tC){$D=$this->index;$E=$this->prepare($D)->insert($tC);return$E!==false;}function delete($C){if(func_num_args()>1){$D=$C;$C=func_get_arg(1);}else{$D=null;}return$this->prepare($D)->remove($C);}function truncate($DD){$NC=array();$D=null;$DD=is_array($DD)?$DD:func_get_args();foreach($DD as$JB){$NC[]=array('remove',$JB);}$E=$this->prepare($D)->multi($NC);$EF=create_function('$a,$b','return $a && $b;');return array_reduce($E,$EF,true);}function update(array$SC,$D,$C){return$this->prepare($D)->update($C,$SC);}function get($C){if(func_num_args()>1){$D=$C;$C=func_get_arg(1);}else{$D=null;}$E=$this->prepare($D)->find($C);if(empty($E)){return($E===false)?false:null;}return array_combine($this->fields,$E[0]);}function all($D=null,$p='>=',$C=0,$FB=0,$r=0){$QC=array();if($FB>0){$QC['limit']=$FB;}if($r>0){$QC['offset']=$r;}$C=array($p=>$C);$E=$this->prepare($D)->find($C,$QC);if($E===false){return false;}foreach($E as&$e){$e=array_combine($this->fields,$e);}return$E;}function in($D,$C){$NC=array();$P=array_slice(func_get_args(),1);if(count($P)===1&&is_array($P[0])){$P=$P[0];}foreach($P as$C){$NC[]=array('find',$C);}$E=$this->prepare($D)->multi($NC);if($E===false){return false;}$yB=exec_function_array('array_merge',$E);foreach($yB as&$e){$e=array_combine($this->fields,$e);}return$yB;}}class Literal{protected static$format="'%s'";protected$value;function __construct($C){$this->value=$C;}function __toString(){return strval($this->value);}static function quoteNull(){return'NULL';}static function quote($C){if(is_null($C)){return self::quoteNull();}else if($C instanceof self){return strval($C);}if($C instanceof DateTime){$C=$C->format('Y-m-d H:i:s');}else if(is_string($C)){$C=convert($C,'UTF-8');}else{$C=strval($C);}return sprintf(self::$format,$C);}}use \Cute\DB\Database;class MySQL extends Database{protected$port=3306;protected$charset='utf8';protected$lower_table_name=null;function connect($s,$uB='',$vB=false){$UD=sprintf('mysql:host=%s;port=%d;charset=%s',$this->host,$this->port,$this->charset);$VD=array(PDO::ATTR_ERRMODE=>PDO::ERRMODE_EXCEPTION,PDO::MYSQL_ATTR_INIT_COMMAND=>sprintf("SET NAMES '%s'",$this->charset),);$this->pdo=new PDO($UD,$this->user,$this->password,$VD);if($vB){$this->pdo->exec(sprintf("CREATE DATABASE IF NOT EXIST `%s`",$this->dbname));}$this->pdo->exec(sprintf("USE `%s`",$this->dbname));$this->tblpre=$uB;if(!array_key_exists($this->dbname,$this->past_sqls)){$this->past_sqls[$this->dbname]=array();}return$this;}function needTableToLower(){if(is_null($this->lower_table_name)){$F="SHOW Variables LIKE 'lower_case_table_names'";$BF=$this->fetch($F,array(),'Value');$this->lower_table_name=intval($BF)===1;}return$this->lower_table_name;}function getTableName($J,$KC=false){$L=$this->tblpre.$J;if($this->needTableToLower()){$L=strtolower($L);}return$KC?'`'.$L.'`':$L;}function getLimit($W,$r=0){if($r>0){$FB=sprintf(" LIMIT %d, %d",$r,$W);}else{$FB=sprintf(" LIMIT %d",$W);}return array("",$FB);}function getPKey($J){$L=$this->getTableName($J);$F="SELECT COLUMN_NAME FROM information_schema.COLUMNS"." WHERE TABLE_SCHEMA=? AND TABLE_NAME=? AND COLUMN_KEY='PRI'";$N=array($this->dbname,$L);return$this->fetch($F,$N,0);}function getColumns($J){$L=$this->getTableName($J);$K=array('COLUMN_NAME','COLUMN_DEFAULT','COLUMN_KEY','IS_NULLABLE','COLUMN_TYPE','DATA_TYPE','CHARACTER_MAXIMUM_LENGTH','NUMERIC_PRECISION','NUMERIC_SCALE','DATETIME_PRECISION',);$F="SELECT %s FROM information_schema.COLUMNS"." WHERE TABLE_SCHEMA=? AND TABLE_NAME=? ORDER BY ORDINAL_POSITION";$F=sprintf($F,implode(', ',$K));$N=array($this->dbname,$L);if($a=$this->query($F,$N)){$SD=PDO::FETCH_CLASS|PDO::FETCH_PROPS_LATE;$E=$a->fetchAll($SD,'\\Cute\\ORM\\Column');$a->closeCursor();return$E;}}function isExists($J){$L=$this->getTableName($J);$F="SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES"." WHERE TABLE_NAME=? AND (TABLE_SCHEMA=? OR TABLE_CATALOG=?)";$N=array($L,$this->dbname,$this->dbname);$J=$this->fetch($F,$N,0);return$L===$J;}function getCreateSQL($J,$kB,$ZD=false,$bD=false){$L=$this->getTableName($J);if($ZD){$F="CREATE TABLE `%s` LIKE `%s`";return sprintf($F,$kB,$L);}else if($bD){$vB=sprintf("CREATE TABLE `%s`",$L);$F=$this->fetch("SHOW $vB",array(),'Create Table');$F=preg_replace('/(AUTO_INCREMENT=\d+)/','AUTO_INCREMENT=1',$F,1);$GF=sprintf("CREATE TABLE IF NOT EXISTS `%s`",$kB);return str_replace($vB,$GF,$F);}else{$YB="";$BC="";$k="";$K=$this->getColumns();foreach($K as$H){$B=$H->name;$M=trim($H->default,"()");if($H->getCategory()==='char'){$W=intval($H->length);$G=($W>255||$W<0)?"text":"varchar($W)";}else if($H->getCategory()==='int'){$lB=intval($H->precision);if($M===''){$M="0";}$G=$H->type."($lB)";}else if($H->getCategory()==='float'){$lB=intval($H->precision);$QD=intval($H->scale);if($M===''){$M="0.0";}$G=$H->type;if($H->type==='real'){$G='float';}else if($H->type==='money'){$G='numeric';}$G.="($lB,$QD)";}else if($H->getCategory()==='datetime'){$G='datetime';}else{$G=$H->type;}if($H->isPrimaryKey()){$YB="    `$B` int(10) unsigned NOT NULL AUTO_INCREMENT,";$BC="PRIMARY KEY (`$B`)";}else if(starts_with($G,'date')||ends_with($G,'text')){$k.="    `$B` $G NULL,\n";}else if($H->isNullable()){$k.="    `$B` $G NULL,\n";}else{$k.="    `$B` $G NOT NULL DEFAULT '$M',\n";}}$IC=<<<EOD
CREATE TABLE IF NOT EXISTS `%s` (
%s
%s
    %s
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT
EOD
;if(empty($YB)){$k=rtrim($k,",\n");}$F=sprintf($IC,$kB,$YB,$k,$BC);return$F;}}function sqlToFile($F,$y,$fB="\t",$bC=PHP_EOL,$bB='"',$GC=null){@mkdir(dirname($y),0664,true);$pC="FIELDS TERMINATED BY '".addslashes($fB)."'";$pC.=" LINES TERMINATED BY '".addslashes($bC)."'";if($bB){$pC.=" OPTIONALLY ENCLOSED BY '".addslashes($bB)."'";}if($IF){$pC.=" FIELDS ESCAPED BY '".addslashes($IF)."'";}$fC=sys_get_temp_dir().DIRECTORY_SEPARATOR.basename($y);$AF="$F INTO OUTFILE '$fC' $pC";try{if(file_exists($fC)){unlink($fC);}$this->db->execute($AF);if(file_exists($fC)){rename($fC,$y);$mB=shell_exec('wc -l '.$y.' | cut -d" " -f1');$mB=trim($mB);return is_numeric($mB)?intval($mB):0;}}catch(\Exception$RB){}}}class Query{const COUNT_INSERT_BULK_MAX=500;static$db_actions=array('select','update','delete','insert','insertBulk','apply',);protected$table='';protected$constrains=array();protected$parameters=array();protected$offset=0;protected$length=-1;protected$additions=array('GROUP BY'=>null,'HAVING'=>null,'ORDER BY'=>null,);function __construct($J){$this->table=$J;}function getTable(){return$this->table;}function deduceWhere($cB='',array&$A=array()){$d=implode(' AND ',$this->constrains);$N=$this->parameters;if(!empty($cB)){if($d){$d='('.$d.') OR ('.$cB.')';}else{$d=$cB;}if(count($A)>0){$N=array_merge($N,$A);}}$d=$d?'WHERE '.$d:'';return array($d,$N);}protected function deduceTail($kF=''){$rE=func_get_args();$aC="";foreach($this->additions as$D=>$C){if(!is_null($C)&&!in_array($D,$rE)){$aC.=" $D $C";}}return$aC;}function groupBy($qE,$uE=null){$this->additions['GROUP BY']=$qE;$this->additions['HAVING']=$uE;return$this;}function orderBy($BE,$CE=''){if($CE){$BE.=' '.strtoupper($CE);}$this->additions['ORDER BY']=$BE;return$this;}function setPage($ZC,$BB=1,$TC=0){$this->length=intval($ZC)<0?-1:intval($ZC);if($this->length>0){$BB=intval($BB);if($BB<0&&$TC>0){$zE=ceil($TC/$this->length);$BB+=$zE+1;}if($BB>0){$this->offset=($BB-1)*$this->length;}}return$this;}function contain($HC,array$P){$HB=count($P);if($HB===0){$p='IS NULL';}else if($HB===1){$p='= ?';}else{$WB=implode(', ',array_fill(0,count($P),'?'));$p='IN ('.$WB.')';}$P=array_values($P);$this->constrains[]="$HC $p";$this->parameters=array_merge($this->parameters,$P);return$this;}function filter($zB,$C,$p='= ?'){$p=empty($p)?false:strtoupper($p);if(is_array($C)){if(substr_count($zB,'?')===count($C)){$this->constrains[]="$HC $p";$this->parameters=array_merge($this->parameters,$C);}else{$this->contain($zB,$C);}}else if(is_null($C)){if(trim($p)==='<>'){$this->constrains[]="$zB IS NOT NULL";}else{$this->constrains[]="$zB IS NULL";}}else{$this->constrains[]=($p===false)?$zB:"$zB $p";$this->parameters[]=$C;}return$this;}static function getSelectSQL($L,$K='*',$j=""){if(is_object($K)){$K=get_object_vars($K);}if(is_array($K)){array_walk($K,create_function('&$v,$k','if(!is_numeric($k))$v.=" as ".$k;'));$K=implode(', ',$K);}$K=trim($K);$F="SELECT $j$K FROM $L";return$F;}function select(Database&$O,$K='*',$zD='fetchAll',array$XC=array(),$cB='',array&$A=array()){$nC="";$FB="";if(starts_with($K,'COUNT')){$aC=$this->deduceTail('ORDER BY');}else{$aC=$this->deduceTail();if($this->length>0){list($nC,$FB)=$O->getLimit($this->length,$this->offset);}}$L=$O->getTableName($this->getTable(),true);list($d,$N)=$this->deduceWhere($cB='',$A);$F=self::getSelectSQL($L,$K,$nC);$F.=($d?' '.$d:'').$aC.$FB;$a=$O->query(rtrim($F),$N);if($a&&$zD){$E=exec_method_array($a,$zD,$XC);$a->closeCursor();return$E;}}function apply(Database&$O,$b){$b=strtoupper($b);$A=array_slice(func_get_args(),2);if(empty($A)){$K=$b==='COUNT'?'*':'';}else{$K=implode(', ',$A);}$K=$b.'('.$K.')';$E=$this->select($O,$K,'fetchColumn');return$E;}function delete(Database&$O){$L=$O->getTableName($this->getTable(),true);list($d,$N)=$this->deduceWhere();$F="DELETE FROM $L $d";if(empty($d)&&$O->getDriverName()==='mysql'){$F="TRUNCATE $L";}return$O->execute(rtrim($F),$N);}static function getUpdateSet(array$SC){$FE=array();$P=array();foreach($SC as$D=>$hC){$FE[]=$D.'=?';$P[]=$hC;}$ID="SET ".implode(', ',$FE);return array($ID,$P);}function update(Database&$O,array$SC,$VB=false){list($d,$N)=$this->deduceWhere();list($ID,$P)=self::getUpdateSet($SC);$UC=$VB?'UPDATE DELAYED':'UPDATE';$L=$O->getTableName($this->getTable(),true);$F="$UC $L $ID $d";$N=array_merge($P,$N);return$O->execute(rtrim($F),$N);}static function getInsertSQL($L,array$K,$VB=false,$iC=false){if($iC===true){$UC=$VB?'REPLACE DELAYED':'REPLACE INTO';}else{$UC=$VB?'INSERT DELAYED':'INSERT INTO';}if($HB=count($K)){$K=implode(',',$K);$WB=implode(', ',array_fill(0,$HB,'?'));return array("$UC $L ($K)",$WB);}else{return array("$UC $L",'');}}function insert(Database&$O,array$tC,$VB=false,$iC=false){$L=$O->getTableName($this->getTable(),true);list($F,$WB)=self::getInsertSQL($L,array_keys($tC),$VB,$iC);if(!empty($WB)){$F.=" VALUES ($WB)";$N=array_values($tC);if($O->execute($F,$N)){return$O->getPDO()->lastInsertId();}}}function insertBulk(Database&$O,array$yB,array$K=null,$VB=false,$iC=false){assert(count($yB)>0);if(empty($K)){$K=array_keys(reset($yB));}$L=$O->getTableName($this->getTable(),true);list($F,$WB)=self::getInsertSQL($L,$K,$VB,$iC);$dF=array_chunk($yB,self::COUNT_INSERT_BULK_MAX);foreach($dF as$HE){$cF=array_fill(0,count($HE),"($WB)");$F.=" VALUES ".implode(', ',$cF);$bF=array_map('array_values',$HE);$N=exec_funcution_array('array_merge',$bF);$O->execute($F,$N);}}}class SQLServer extends Database{protected$port=1433;protected$charset='utf8';function connect($s,$uB='',$vB=false){$UD=sprintf('dblib:host=%s;port=%d;charset=%s',$this->host,$this->port,$this->charset);$this->pdo=new PDO($UD,$this->user,$this->password);$this->pdo->exec(sprintf("USE `%s`",$this->dbname));$this->tblpre=$uB;if(!array_key_exists($this->dbname,$this->past_sqls)){$this->past_sqls[$this->dbname]=array();}return$this;}function getTableName($J,$KC=false){$L=$this->tblpre.$J;return$KC?'['.$L.']':$L;}function getLimit($W,$r=0){$nC=sprintf("TOP %d ",$W);return array($nC,"");}function getPKey($J){$L=$this->getTableName($J);$F="SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.%s WHERE TABLE_SCHEMA='dbo'"." AND TABLE_CATALOG=? AND TABLE_NAME=? ORDER BY ORDINAL_POSITION";$N=array($this->dbname,$L);$pB=$this->fetch(sprintf($F,'KEY_COLUMN_USAGE'),$N,0);if(empty($pB)){$pB=$this->fetch(sprintf($F,'COLUMNS'),$N,0);}return$pB;}function getColumns($J){$L=$this->getTableName($J);$K=array('COLUMN_NAME','COLUMN_DEFAULT','COLUMN_KEY','IS_NULLABLE','COLUMN_TYPE','DATA_TYPE','CHARACTER_MAXIMUM_LENGTH','NUMERIC_PRECISION','NUMERIC_SCALE','DATETIME_PRECISION',);$F="SELECT %s FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA='dbo'"." AND TABLE_CATALOG=? AND TABLE_NAME=? ORDER BY ORDINAL_POSITION";$F=sprintf($F,implode(', ',$K));$N=array($this->dbname,$L);if($a=$this->query($F,$N)){$SD=PDO::FETCH_CLASS|PDO::FETCH_PROPS_LATE;$E=$a->fetchAll($SD,'\\Cute\\ORM\\Column');$a->closeCursor();return$E;}}function isExists($J){$L=$this->getTableName($J);$F="SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='dbo'"." AND TABLE_CATALOG=? AND TABLE_NAME=?";$N=array($this->dbname,$this->table);$J=$this->fetch($F,$N,0);return$L===$J;}function getCreateSQL($kB,$K=array(),$ZD=false,$bD=false){$YB="";$BC="";$k="";$K=$this->getColumns();if($ZD||$bD){foreach($K as$H){if($H->getCategory()==='char'){$G="[".$H->type."](".intval($H->length).")";}else if($H->type==='numeric'){$G="[numeric](".$H->precision.", ".$H->scale.")";}else{$G="[".$H->type."]";}if($H->isPrimaryKey()){$YB="    [$B] $G IDENTITY(1,1) NOT FOR REPLICATION NOT NULL,";$BC="PRIMARY KEY NONCLUSTERED ( [$B] ASC )";}else{$aF=$H->isNullable()?"NULL":"NOT NULL DEFAULT ".$H->default;$k.="    [$B] $G $aF,\n";}}}else{foreach($K as$H){$M=trim($H->default,"()");if($H->getCategory()==='char'){$W=intval($H->length);$G=($W>255||$W<0)?"text":"varchar($W)";}else if($H->getCategory()==='int'){$lB=intval($H->precision);if($M===''){$M="0";}$G=$H->type."($lB)";}else if($H->getCategory()==='float'){$lB=intval($H->precision);$QD=intval($H->scale);if($M===''){$M="0.0";}$G=$H->type;if($H->type==='real'){$G='float';}else if($H->type==='money'){$G='numeric';}$G.="($lB,$QD)";}else if($H->getCategory()==='datetime'){$G='datetime';}else{$G=$H->type;}if($H->isPrimaryKey()){$YB="    [$B] $G IDENTITY(1,1) NOT FOR REPLICATION NOT NULL,";$BC="PRIMARY KEY NONCLUSTERED ( [$B] ASC )";}else if(starts_with($G,'date')||ends_with($G,'text')){$k.="    [$B] $G NULL,\n";}else if($H->isNullable()){$k.="    [$B] $G NULL,\n";}else{$k.="    [$B] $G NOT NULL DEFAULT '$M',\n";}}}$IC=<<<EOD
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES
    WHERE TABLE_SCHEMA='dbo' AND TABLE_NAME='%s')
BEGIN
CREATE TABLE [dbo].[%s] (
%s
%s
    CONSTRAINT [PK_%s]
    %s
    WITH ( PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF,
        ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON )
    ON [PRIMARY]
) ON [PRIMARY]
END
EOD
;if(empty($YB)){$k=rtrim($k,",\n");}$F=sprintf($IC,$kB,$kB,$YB,$k,$kB,$BC);return$F;}function sqlToFile($F,$y,$fB="\t",$bC=PHP_EOL,$bB='"',$GC=null){@mkdir(dirname($y),0664,true);$XD=fopen($y,'wb');$mB=0;$gD=$this->query($F);while($e=$gD->fetch()){if(is_null($GC)){fputcsv($XD,$e,$fB,$bB);}else{fwrite($XD,self::csvline($e,$fB,$bC,$bB,$GC));}$mB++;}$gD->closeCursor();fclose($XD);return$mB;}}}
namespace Cute\Logging{use \Cute\Logging\Logger;defined('LOG_WRITE_FILE_FREQ')or define('LOG_WRITE_FILE_FREQ',1);class FileLogger extends Logger{use\Cute\Base\Deferring;protected$filename='';protected$records=array();function __construct($B='',$u=false,$lC=false){$this->filename=($B?$B.'_':'').'%s.log';if($u===false){$u=realpath('./logs');}if(is_dir($u)||mkdir($u,0777,true)){$this->filename=$u.DIRECTORY_SEPARATOR.$this->filename;}parent::__construct($lC);$this->defer();}function close(){$this->writeFiles();unset($this->records);}function writeFiles(){foreach($this->records as$fF=>&$hD){$q=sprintf($this->filename,$fF);$RD=implode('',$hD);$wB=file_put_contents($q,$RD,FILE_APPEND|LOCK_EX);if($wB!==false){$hD=array();}}}function append(){$iF=implode(' ',func_get_args());$PD=date('Ymd');if(!isset($this->records[$PD])){$this->records[$PD]=array();}array_push($this->records[$PD],$iF.PHP_EOL);}function rawlog($aB,$V,array$Q=array()){$aB=strtoupper($aB);if($this->compareLevel($aB)){$n=self::format($V,$Q);$dC=self::getClientIP();$YF=date('Y-m-d H:i:s');$this->append($YF,$dC,$aB,$n);}if(LOG_WRITE_FILE_FREQ>=1||LOG_WRITE_FILE_FREQ>=mt_rand(1,10000)/10000){$this->writeFiles();}}}use \Cute\Context\Input;use \Cute\View\Templater;abstract class Logger{const EMERGENCY='EMERGENCY';const ALERT='ALERT';const CRITICAL='CRITICAL';const ERROR='ERROR';const WARNING='WARNING';const NOTICE='NOTICE';const INFO='INFO';const DEBUG='DEBUG';protected$threshold=false;protected$threshold_value=null;function __construct($lC=false){if($lC===false){$this->threshold=self::DEBUG;}else{$this->threshold=strtoupper($lC);}}static function format($V,array$Q=array()){$n=is_null($V)?'':(string)$V;return Templater::replaceWith($n,$Q,'{','}');}static function getClientIP(){return Input::getClientIP();}function compareLevel($aB){static$qC=array(self::EMERGENCY=>0,self::ALERT=>1,self::CRITICAL=>2,self::ERROR=>3,self::WARNING=>4,self::NOTICE=>5,self::INFO=>6,self::DEBUG=>7,);if(is_null($this->threshold_value)&&isset($qC[$this->threshold])){$this->threshold_value=$qC[$this->threshold];}if(isset($qC[$aB])){return$qC[$aB]<=$this->threshold_value;}}function emergency($V,array$Q=array()){$this->rawlog(self::EMERGENCY,$V,$Q);}function alert($V,array$Q=array()){$this->rawlog(self::ALERT,$V,$Q);}function critical($V,array$Q=array()){$this->rawlog(self::CRITICAL,$V,$Q);}function error($V,array$Q=array()){$this->rawlog(self::ERROR,$V,$Q);}function warning($V,array$Q=array()){$this->rawlog(self::WARNING,$V,$Q);}function notice($V,array$Q=array()){$this->rawlog(self::NOTICE,$V,$Q);}function info($V,array$Q=array()){$this->rawlog(self::INFO,$V,$Q);}function debug($V,array$Q=array()){$this->rawlog(self::DEBUG,$V,$Q);}abstract function rawlog($aB,$V,array$Q=array());abstract function close();}}
namespace Cute\ORM{use \Cute\ORM\Relation;class BelongsTo extends Relation{protected$another_foreign_key='';function __construct($R='',$LD=''){parent::__construct($R);$this->another_foreign_key=$LD;}function getAnotherForeignKey($B){if(empty($this->another_foreign_key)){$this->another_foreign_key=$B.'_id';}return$this->another_foreign_key;}function relative($B,array&$E){if(empty($E)){return array();}$m=exec_method_array($this->model,'getPKeys');if(empty($m)){return array();}$GB=$this->getAnotherForeignKey($B);$P=$this->getAttrs($E,$GB);$rB=$this->getMapper();$rB->combine(reset($m),$P,true);$this->setAttrs($E,$P,$B,$GB);return$P;}}use \Cute\ORM\Model;class Column extends Model{protected static$_keys=array('COLUMN_NAME'=>'name','COLUMN_DEFAULT'=>'default','COLUMN_KEY'=>'index','IS_NULLABLE'=>'nullable','COLUMN_TYPE'=>'column','DATA_TYPE'=>'type','CHARACTER_MAXIMUM_LENGTH'=>'length','NUMERIC_PRECISION'=>'precision','NUMERIC_SCALE'=>'scale','DATETIME_PRECISION'=>'datetime',);var$name='';var$default=null;var$index=null;var$nullable='YES';var$column='';var$type='';var$length=null;var$precision=null;var$scale=null;var$datetime=null;static function getTable(){return'COLUMNS';}function __set($sD,$C){if(isset(self::$_keys[$sD])){$B=self::$_keys[$sD];$this->$B=$C;}}function isPrimaryKey(){return$this->index==='PRI';}function isNullable(){return$this->nullable==='YES';}function getCategory(){if(!is_null($this->datetime)){return'datetime';}else if(!is_null($this->precision)){return$this->scale>0?'float':'int';}else if(!is_null($this->length)){return'char';}else{return$this->type;}}}use \Cute\DB\Database;use \Cute\Utility\Inflect;class HasMany extends Relation{protected$foreign_key='';protected$is_unique=false;function __construct($R='',$JD=''){parent::__construct($R);$this->foreign_key=$JD;}function bind(Database&$O,$J=''){if(empty($this->foreign_key)){$this->foreign_key=Inflect::singularize($J).'_id';}return parent::bind($O,$J);}function getForeignKey(){return$this->foreign_key;}function relative($B,array&$E){if(empty($E)){return array();}$GB=$this->getForeignKey();$P=$this->getAttrs($E);$rB=$this->getMapper();$rB->combine($GB,$P,$this->is_unique);$M=$this->is_unique?null:array();$this->setAttrs($E,$P,$B,false,$M);return$P;}}use \Cute\ORM\HasMany;class HasOne extends HasMany{protected$is_unique=true;}class ManyToMany extends HasMany{protected$another_foreign_key='';protected$middle_table='';function __construct($R='',$JD='',$LD='',$oE=''){parent::__construct($R,$JD);$this->another_foreign_key=$LD;$this->middle_table=$oE;}function getAnotherForeignKey($B){if(empty($this->another_foreign_key)){$this->another_foreign_key=$B.'_id';}return$this->another_foreign_key;}function relative($B,array&$E){if(empty($E)){return array();}$m=exec_method_array($this->model,'getPKeys');if(empty($m)){return array();}$GB=$this->getForeignKey();$P=$this->getAttrs($E);$rB=$this->getMapper('',$this->middle_table);$rB->combine($GB,$P,false);$QF=$this->getAnotherForeignKey($B);$jC=array();foreach($P as$D=>$C){foreach($C as$PF=>$hC){$x=$hC->$QF;$P[$D][$PF]=$x;$jC[$x]=null;}}$rB=$this->getMapper();$rB->combine(reset($m),$jC,true);foreach($E as&$t){$D=$t->getID();if(!isset($P[$D])){continue;}$WC=array();foreach($P[$D]as$x){$WC[]=&$jC[$x];}$t->$B=$WC;}return$jC;}}use \PDO;use \Cute\DB\Query;class Mapper{protected$db=null;protected$query=null;protected$model='';protected$table='';protected$fetch_style=0;protected$relations=array();function __construct(Database&$O,$R='',$J=''){$this->db=$O;$this->table=$J;if($R&&is_object($R)){$R=get_class($R);}$this->setModel($R);}function setModel($R){$this->fetch_style=PDO::FETCH_CLASS;if(empty($R)){$this->model='\\Cute\\ORM\\Model';}else{$this->model=$R;if(method_exists($this->model,'__set')||method_exists($this->model,'__construct')){$this->fetch_style=$this->fetch_style|PDO::FETCH_PROPS_LATE;}if(empty($this->table)){$this->table=exec_method_array($this->model,'getTable');}}return$this;}function getDB(){return$this->db;}function getModel(){return$this->model;}function getQuery(){if(!$this->query){$this->query=new Query($this->getTable());}return$this->query;}function getTable(){return$this->table;}function getTableName($KC=false){$O=$this->getDB();return$O->getTableName($this->getTable(),$KC);}function setPage($ZC,$BB=1){$BB=intval($BB);if($BB<0&&intval($ZC)>0){$TC=intval($this->count());}else{$TC=0;}$this->getQuery()->setPage($ZC,$BB,$TC);return$this;}function join($B='*'){$R=exec_construct_array($this->model);$GD=$R->getRelations();if($B==='*'){$this->relations=&$GD;}else{$OF=func_get_args();foreach($OF as$B){if($B&&isset($GD[$B])){$this->relations[$B]=&$GD[$B];}}}return$this;}function all($K='*',$xB=null,$cB='',array&$A=array()){$O=$this->getDB();$SB=$this->getQuery();$xB=empty($xB)?$this->fetch_style:$xB;$XC=array($xB,$this->getModel());$E=$SB->select($O,$K,'fetchAll',$XC,$cB,$A);if($E){$J=$this->getTable();foreach($this->relations as$B=>&$RF){$RF->bind($O,$J)->relative($B,$E);}return$E;}}function get($JB,$D=false,$K='*',$L=''){if(empty($D)){$m=exec_method_array($this->getModel(),'getPKeys');if(empty($m)){return;}$D=reset($m);}$this->getQuery()->filter($D,$JB)->setPage(1,1);$WC=$this->all($K);return count($WC)>0?reset($WC):null;}function combine($GB,array&$E,$SF=false,$K='*'){if(empty($GB)||count($E)===0){return$E;}$O=$this->getDB();$SB=$this->getQuery();$SB->contain($GB,array_keys($E));if($K==='*'){$L=$this->getTableName(true);$K=sprintf('%s,%s.*',$GB,$L);}$WF=$SF?PDO::FETCH_UNIQUE:PDO::FETCH_GROUP;$xB=$this->fetch_style|$WF;$XC=array($xB,$this->getModel());$E=$SB->select($O,$K,'fetchAll',$XC);return$E;}function __call($B,$A){$SB=$this->getQuery();if(!method_exists($SB,$B)){array_unshift($A,$B);$B='apply';}if(in_array($B,Query::$db_actions)){$O=$this->getDB();array_unshift($A,$O);return exec_method_array($SB,$B,$A);}else{$E=exec_method_array($SB,$B,$A);return($E instanceof Query)?$this:$E;}}}class Model{protected static$_fields=array();static function getTable(){return'';}static function getPKeys(){return array();}function getRelations(){return array();}function getFields(){$J=$this->getTable();if(!isset(self::$_fields[$J])){$DB=get_object_vars($this);foreach($DB as$B=>$M){if(starts_with($B,'_')){unset($DB[$B]);}}self::$_fields[$J]=&$DB;}return self::$_fields[$J];}function getID($PC=0){if($m=$this->getPKeys()){$pB=$m[$PC];return$this->$pB;}}function setID($JB){if($m=$this->getPKeys()){foreach($m as$PC=>$pB){$this->$pB=func_get_arg($PC);}}return$this;}function isExists(){$JB=$this->getID();return$JB!==0&&!is_null($JB);}}use \Cute\ORM\Mapper;abstract class Relation{protected$mapper=null;protected$model='';function __construct($R=''){$this->model=empty($R)?'\\Cute\\ORM\\Model':$R;}function getModel(){return$this->model;}function bind(Database&$O,$J=''){$this->mapper=new Mapper($O,$this->model);return$this;}function getMapper($R='',$J=''){if(empty($R)&&empty($J)){return$this->mapper;}else{$O=$this->mapper->getDB();return new Mapper($O,$R,$J);}}protected function getAttrs(array&$E,$VC=false){$qD=array();foreach($E as&$t){$D=$VC?$t->$VC:$t->getID();$qD[$D]=null;}return$qD;}protected function setAttrs(array&$E,array&$P,$B,$VC=false,$M=null){foreach($E as&$t){$D=$VC?$t->$VC:$t->getID();if(isset($P[$D])){$t->$B=&$P[$D];}else{$t->$B=$M;}}}abstract function relative($B,array&$E);}}
namespace Cute\Utility{use \DateTime;use \DateTimeZone;class Calendar extends DateTime{protected$timestamp=0;function __construct($dD='now',$OB=null){if(is_null($OB)&&$M=constant('DEFAULT_TIMEZONE')){$OB=new DateTimeZone($M);}if(is_numeric($dD)){parent::__construct('now',$OB);$this->setTimestamp($dD);}else{parent::__construct($dD,$OB);}}function format($pD='Y-m-d H:i:s'){$E=parent::format($pD);if(strpos($pD,'星期w')!==false){$UF=array('星期0'=>'星期日','星期1'=>'星期一','星期2'=>'星期二','星期3'=>'星期三','星期4'=>'星期四','星期5'=>'星期五','星期6'=>'星期六');$E=strtr($E,$UF);}return$E;}static function parseDurtion($IB){if(empty($IB)){return 0;}if(is_int($IB)||is_float($IB)){return$IB;}if(is_string($IB)){$kD=strtolower(substr($IB,-1));if(is_numeric($kD)){return floatval($IB);}$IB=trim(substr($IB,0,-1));$w=1;switch($kD){case'w':$w*=7;case'd':$w*=24;case'h':$w*=60;case'm':$w*=60;}return floatval($IB)*$w;}}function thisMonthBegin(){return new self($this->format('Y-m-01'));}function thisMonthEnd(){return new self($this->format('Y-m-01').' +1 month -1 day');}function nextMonthBegin(){return new self($this->format('Y-m-01').' +1 month');}}class Inflect{protected static$plural=array('/(quiz)$/i'=>"$1zes",'/^(ox)$/i'=>"$1en",'/([m|l])ouse$/i'=>"$1ice",'/(matr|vert|ind)ix|ex$/i'=>"$1ices",'/(x|ch|ss|sh)$/i'=>"$1es",'/([^aeiouy]|qu)y$/i'=>"$1ies",'/(hive)$/i'=>"$1s",'/(?:([^f])fe|([lr])f)$/i'=>"$1$2ves",'/(shea|lea|loa|thie)f$/i'=>"$1ves",'/sis$/i'=>"ses",'/([ti])um$/i'=>"$1a",'/(tomat|potat|ech|her|vet)o$/i'=>"$1oes",'/(bu)s$/i'=>"$1ses",'/(alias)$/i'=>"$1es",'/(octop)us$/i'=>"$1i",'/(ax|test)is$/i'=>"$1es",'/(us)$/i'=>"$1es",'/s$/i'=>"s",'/$/'=>"s");protected static$singular=array('/(quiz)zes$/i'=>"$1",'/(matr)ices$/i'=>"$1ix",'/(vert|ind)ices$/i'=>"$1ex",'/^(ox)en$/i'=>"$1",'/(alias)es$/i'=>"$1",'/(octop|vir)i$/i'=>"$1us",'/(cris|ax|test)es$/i'=>"$1is",'/(shoe)s$/i'=>"$1",'/(o)es$/i'=>"$1",'/(bus)es$/i'=>"$1",'/([m|l])ice$/i'=>"$1ouse",'/(x|ch|ss|sh)es$/i'=>"$1",'/(m)ovies$/i'=>"$1ovie",'/(s)eries$/i'=>"$1eries",'/([^aeiouy]|qu)ies$/i'=>"$1y",'/([lr])ves$/i'=>"$1f",'/(tive)s$/i'=>"$1",'/(hive)s$/i'=>"$1",'/(li|wi|kni)ves$/i'=>"$1fe",'/(shea|loa|lea|thie)ves$/i'=>"$1f",'/(^analy)ses$/i'=>"$1sis",'/((a)naly|(b)a|(d)iagno|(p)arenthe|(p)rogno|(s)ynop|(t)he)ses$/i'=>"$1$2sis",'/([ti])a$/i'=>"$1um",'/(n)ews$/i'=>"$1ews",'/(h|bl)ouses$/i'=>"$1ouse",'/(corpse)s$/i'=>"$1",'/(us)es$/i'=>"$1",'/s$/i'=>"");protected static$irregular=array('move'=>'moves','foot'=>'feet','goose'=>'geese','sex'=>'sexes','child'=>'children','man'=>'men','tooth'=>'teeth','person'=>'people');protected static$uncountable=array('sheep','fish','deer','series','species','money','rice','information','equipment');protected static$abbreviations=array('AD','API','B2B','B2C','C2C','CEO','CFO','COO','CTO','DB','DSA','GEO','GPS','HTML','HTTP','ID','IO','IP','IQ','MD5','MTV','MV','MVC','NBA','OK','P2P','PC','PV','PDF','PHP','QQ','RMB','RSA','SOHO','SHA','SQL','TV','UI','URI','URL','USA','VIP','WC','WEB','WAP','WIFI','XML',);static function pluralize($Z){if(in_array(strtolower($Z),self::$uncountable))return$Z;foreach(self::$irregular as$c=>$E){$c='/'.$c.'$/i';if(preg_match($c,$Z))return preg_replace($c,$E,$Z);}foreach(self::$plural as$c=>$E){if(preg_match($c,$Z))return preg_replace($c,$E,$Z);}return$Z;}static function singularize($Z){if(in_array(strtolower($Z),self::$uncountable))return$Z;foreach(self::$irregular as$E=>$c){$c='/'.$c.'$/i';if(preg_match($c,$Z))return preg_replace($c,$E,$Z);}foreach(self::$singular as$c=>$E){if(preg_match($c,$Z))return preg_replace($c,$E,$Z);}return$Z;}static function pluralizeIf($HB,$Z){if($HB==1)return"1 $Z";else return$HB." ".self::pluralize($Z);}static function camelize($Z,$TF=false){$YC=explode('_',$Z);if($TF){$nD=count($YC)-1;$YC[$nD]=self::pluralize($YC[$nD]);}foreach($YC as&$h){$h=ucfirst($h);if(strlen($h)>1&&strlen($h)<=4){$oD=strtoupper($h);if(in_array($oD,self::$abbreviations)){$h=$oD;}}}return implode('',$YC);}static function flatten($Z,$LF='_'){$c='/([A-Z][A-Z0-9]*(?=$|[A-Z][a-z0-9])|[A-Za-z][a-z0-9]+)/';preg_match_all($c,$Z,$QB);return strtolower(implode($LF,$QB[0]));}}class Polling{protected$channels=array();function __construct(array$XE=array()){$this->channels=$XE;}function randRoll(){static$x=0;if($x===0){shuffle($this->channels);$x=count($this->channels);}return$this->channels[--$x];}function roundRobin(&$mC,$TE=1){if(count($this->channels)<2){return current($this->channels);}$oC=null;$vD=0;$FD=0;foreach($this->channels as$JB=>$e){$jD=$e['weight']*$TE;$FD+=$jD;$e['last_value']+=$jD;if(empty($mC)&&$e['last_value']>=$vD){$oC=$JB;$vD=$e['last_value'];}}if(!empty($mC)){$this->channels[$mC]['last_value']-=$FD;return$this->channels[$mC];}else if(!is_null($oC)){$this->channels[$oC]['last_value']-=$FD;return$this->channels[$oC];}}}class Word{protected$content='';function __construct($n=''){$this->content=$n;}static function randHash($W=6){$W=$W>32?32:$W;$NE=md5(mt_rand().time());$nE=substr($NE,0,$W);return$nE;}static function randString($W=6,$iE=2,$eC=''){if(empty($eC)){$eC='abcdefghijkmnpqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ23456789';}srand((float)microtime()*1000000);$rD='';$rC=ceil($W/$iE);while($W>0){$eC=str_shuffle($eC);$rD.=substr($eC,0,$rC);$W-=$rC;$rC=min($W,$rC);}return$rD;}function hasNonASCII(){return preg_match('/[^\x20-\x7f]/',$this->content);}function fetchFirstURL(){if(preg_match('/^http[^\x23-\x76]/i',$this->content,$QB)){return$QB[1];}}function getNumbers($fE=true){$w=preg_match_all('/[\d.]+/',$this->content,$QB);if($w===0||$w===false){return false;}$iD=implode(current($QB));return$fE?intval($iD):$iD;}function ver2int(){$YE=$this->getNumbers(false);$YD=array_map('intval',explode('.',$YE));$YD=array_pad($YD,3,0);return intval(vsprintf('%d%02d%02d',$YD));}}}
namespace Cute\View{class Compiler{protected$env=null;protected$source_dir='';protected$compiled_dir='';function __construct(){\app()->import('Twig',VENDOR_ROOT.'/Twig/lib');$this->env=new\Twig_Environment();}function addFunction($B,$bE=null){$dE=new\Twig_SimpleFunction($B,$bE);return$this->env->addFunction($B,$dE);}function setSourceDir($OC){$this->source_dir=rtrim($OC,' /\\');if(!file_exists($this->source_dir)){@mkdir($this->source_dir,0777,true);}$gE=new\Twig_Loader_Filesystem(array($this->source_dir));$this->env->setLoader($gE);return$this;}function setCompiledDir($f){$f=rtrim($f,' /\\');if($this->compiled_dir!==$f){$this->compiled_dir=$f;}if(!file_exists($this->compiled_dir)){@mkdir($this->compiled_dir,0777,true);}return$this;}function isSourceRelational(){return true;}function compileFile($gB,$LC,array$Q=array()){$n=$this->env->loadTemplate($gB)->render($Q);file_put_contents($LC,$n,LOCK_EX);}function compileTpl($g,$gB='',array$Q=array()){$g=ltrim(str_replace('\\','/',$g),'/');if(empty($gB)){$gB=$this->source_dir.'/'.$g;}$LC=$this->compiled_dir.'/'.$g;$f=dirname($LC);if(!is_dir($f)){mkdir($f,0777,true);}if($this->isSourceRelational()){$gB=substr($gB,strlen($this->source_dir)+1);}$this->compileFile($gB,$LC,$Q);return$LC;}function compileAll($S=false,array$Q=array()){if(is_null($S)||$S===false){$S=$this->source_dir;}else{$S=rtrim(str_replace('\\','/',$S),'/');}$HB=0;$ZE=scandir($S);foreach($ZE as$eD){if($eD==='.'||$eD==='..'){continue;}$sC=$S.'/'.$eD;if(is_dir($sC)){$this->compileAll($sC);}else{$g=substr($sC,strlen($this->source_dir));$this->compileTpl($g,$sC,$Q);$HB++;}}return$HB;}}use \Cute\View\Compiler;class Templater{var$compiler=null;var$globals=array();protected$source_dir='';protected$extend_files=array();protected$template_blocks=array();protected$current_block='';function __construct($OC,$f=false){$this->setSourceDir($OC);if($f){$this->setCompileDir($f);}}static function replaceWith($n,array$Q=array(),$j='',$EE=''){if(empty($Q)){return$n;}if(empty($j)&&empty($EE)){$KD=&$Q;}else{$KD=array();foreach($Q as$D=>&$C){$KD[$j.$D.$EE]=$C;}}$n=strtr($n,$KD);return$n;}function setSourceDir($OC){$this->source_dir=rtrim($OC,' /\\');if(!file_exists($this->source_dir)){@mkdir($this->source_dir,0777,true);}}function setCompileDir($f){if(is_null($this->compiler)){$this->compiler=new Compiler();}$f=rtrim($f,' /\\');$this->compiler->setSourceDir($this->source_dir);$this->compiler->setCompiledDir($f);$this->setSourceDir($f);return$this;}function updateGlobals(array$lE){if(func_num_args()===1){$this->globals=array_merge($this->globals,$lE);}else{$A=func_get_args();array_unshift($A,$this->globals);$this->globals=exec_function_array('array_merge',$A);}return$this;}function updateFunctions(array$mE){$kE=$this->compiler;foreach($mE as$B=>$b){$kE->addFunction($B,$b);}}function prepareFile($g){if($this->compiler){return$this->compiler->compileTpl($g,'',$this->globals);}else{return$this->source_dir.'/'.$g;}}function render($g,array$Q=array()){extract($this->globals);extract($Q);include$this->prepareFile($g);if(!empty($this->extend_files)){$WE=array_pop($this->extend_files);foreach($this->extend_files as$q){include$this->prepareFile($q);}extract($this->template_blocks);include$this->prepareFile($WE);}}function extendTpl($g){array_push($this->extend_files,$g);}function includeTpl($g,array$Q=array()){extract($this->globals);extract($Q);ob_start();include$this->prepareFile($g);$hE=trim(ob_get_clean());echo$hE;}function blockStart($VE='content'){$this->current_block=$VE;ob_start();}function blockEnd(){$ME=trim(ob_get_clean());$this->template_blocks[$this->current_block]=$ME;}}}
namespace Cute\Widget{use \Cute\Utility\Word;class Captcha{const ENCRYPT_SALT='captcha_code_salt';const FILENAME_PREFIX='cc_';var$phrase_size=6;var$width=80;var$height=30;var$font=null;var$finger_print=null;protected$builder=null;protected$savedir='';protected$saveurl='';function __construct($AB=''){\app()->import('Gregwar',VENDOR_ROOT);$this->builder=new\Gregwar\Captcha\CaptchaBuilder();if(!empty($AB)){$this->phrase_size=strlen($AB);$this->builder->setPhrase($AB);}else{$this->refresh();}$this->savedir=APP_ROOT.'/public/assets/captcha';@mkdir($this->savedir,0755,true);$this->saveurl=app()->getAssetURL().'/captcha';}static function newInstance($LE=6,$JE=80,$KE=30,$OE=null,$PE=null){$TB=new self();$TB->phrase_size=$LE;$TB->width=$JE;$TB->height=$KE;$TB->font=$OE;$TB->finger_print=$PE;return$TB;}protected static function encrypt($AB){return md5(strtolower($AB).self::ENCRYPT_SALT);}static function clean($S,$cD=0.3,$FB=60){$QE=mt_rand(1,10000)/10000;if($cD<=0||$cD>=1||$QE<=$cD){$UE=time()-$FB;$vC=glob($S.'cc_*.jpg');foreach($vC as$q){if(fileatime($q)<$UE){unlink($q);}}}}function refresh(){$AB=Word::randString($this->phrase_size);$this->builder->setPhrase($AB);return$this;}function build(array$A=array()){$RE=array($this->width,$this->height,$this->font,$this->finger_print,);exec_method_array($this->builder,'build',$A+$RE);return$this->builder;}function show(){@session_start();$AB=$this->builder->getPhrase();$_SESSION['phrase']=self::encrypt($AB);@header('Content-Type: image/jpeg');$this->build(func_get_args());return$this->builder->output();}function save(){self::clean($this->savedir,0.3,60);$T=uniqid(self::FILENAME_PREFIX).'.jpg';$this->build(func_get_args());$this->builder->save($this->savedir.'/'.$T);$AB=$this->builder->getPhrase();$NB=$this->saveurl.'/'.$T.'#'.self::encrypt($AB);die($NB);}}use \Cute\Widget\RedisCounter;use \Cute\Widget\FileCounter;abstract class Counter{protected$name='';protected$value=0;protected$maxium=0;function __construct($B,$C=0,$kC=0){$this->name=$B;$this->value=intval($C);$this->maxium=intval($kC);}static function newInstance($B,$C=0,$kC=0){$PB=new RedisCounter($B,$C,$kC);if(!$PB->connect()){$PB=new FileCounter($B,$C,$kC);$PB->connect();}$PB->readValue();return$PB;}function increase($SE=1){$this->value+=$SE;if($this->maxium>0){$this->value=$this->value%$this->maxium;}$this->writeValue();return$this->value;}abstract function connect();abstract function readValue();abstract function writeValue();abstract function remove();}use \Cute\Widget\Counter;class FileCounter extends Counter{protected$filename='';function connect($S=false){if(empty($S)&&$S!==''){$S=sys_get_temp_dir();}else{$S=rtrim(str_replace('\\','/',$S),'/');}$this->filename=$S.'/'.$this->name.'.txt';if(!is_readable($this->filename)){$eB=touch($this->filename);}else{$eB=true;}if(!$eB){$this->filename='';}return$eB;}function readValue(){$C=false;$wB=filesize($this->filename);if($wB>0){$C=file_get_contents($this->filename);}if($C!==false&&strlen(trim($C))>0){$this->value=intval($C);}else{$this->writeValue();}return$this->value;}function writeValue(){$wB=file_put_contents($this->filename,$this->value);return$wB&&$wB>0;}function remove(){if(file_exists($this->filename)){return unlink($this->filename);}}}class RedisCounter extends Counter{protected$redis=null;function connect($cC='127.0.0.1',$UB=6379){if(!extension_loaded('redis')){return false;}$this->redis=new\Redis();try{$eB=$this->redis->connect($cC,$UB);}catch(Exception$RB){$eB=false;}if(!$eB){$this->redis=null;}return$eB;}function readValue(){$C=$this->redis->get($this->name);if($C!==false&&strlen(trim($C))>0){$this->value=intval($C);}else{$this->writeValue();}return$this->value;}function writeValue(){return$this->redis->set($this->name,$this->value);}function remove(){if($this->redis->exists($this->name)){$E=$this->redis->del($this->name);$this->redis->close();return$E;}}}}